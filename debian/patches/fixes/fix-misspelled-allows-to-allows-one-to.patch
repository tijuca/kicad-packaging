From: Carsten Schoenert <c.schoenert@t-online.de>
Date: Sun, 8 Apr 2018 11:19:34 +0200
Subject: fix misspelled 'allows to' -> 'allows one to'

---
 common/gal/opengl/gl_builtin_shaders.cpp | 2 +-
 eeschema/dialogs/dialog_sim_settings.cpp | 4 ++--
 eeschema/sch_sheet_path.h                | 4 ++--
 include/view/view.h                      | 2 +-
 pcbnew/footprint_editor_utils.cpp        | 2 +-
 5 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/common/gal/opengl/gl_builtin_shaders.cpp b/common/gal/opengl/gl_builtin_shaders.cpp
index abe3be2..60f2962 100644
--- a/common/gal/opengl/gl_builtin_shaders.cpp
+++ b/common/gal/opengl/gl_builtin_shaders.cpp
@@ -526,7 +526,7 @@ const char smaa_base_shader_p1[] = R"SHADER_SOURCE(
  *      - SMAA::detectMSAAOrder and
  *      - SMAA::msaaReorder
  *
- *    These functions allow to match the standard multisample patterns by
+ *    These functions allows one to match the standard multisample patterns by
  *    detecting the subsample order for a specific GPU, and reordering
  *    them appropriately.
  *
diff --git a/eeschema/dialogs/dialog_sim_settings.cpp b/eeschema/dialogs/dialog_sim_settings.cpp
index 0bf311d..5dcc4f8 100644
--- a/eeschema/dialogs/dialog_sim_settings.cpp
+++ b/eeschema/dialogs/dialog_sim_settings.cpp
@@ -239,7 +239,7 @@ bool DIALOG_SIM_SETTINGS::TransferDataToWindow()
 
 int DIALOG_SIM_SETTINGS::ShowModal()
 {
-    // Fill out comboboxes that allow to select nets
+    // Fill out comboboxes that allows one to select nets
     // Map comoboxes to their current values
     std::map<wxComboBox*, wxString> cmbNet = {
         { m_noiseMeas, m_noiseMeas->GetStringSelection() },
@@ -265,7 +265,7 @@ int DIALOG_SIM_SETTINGS::ShowModal()
     }
 
 
-    // Fill out comboboxes that allow to select power sources
+    // Fill out comboboxes that allows one to select power sources
     std::map<wxComboBox*, wxString> cmbSrc = {
         { m_dcSource1, m_dcSource1->GetStringSelection() },
         { m_dcSource2, m_dcSource2->GetStringSelection() },
diff --git a/eeschema/sch_sheet_path.h b/eeschema/sch_sheet_path.h
index b417985..a8f708e 100644
--- a/eeschema/sch_sheet_path.h
+++ b/eeschema/sch_sheet_path.h
@@ -72,8 +72,8 @@
  *
  * The class SCH_SHEET_PATH handles paths used to access a sheet.  The class
  * SCH_SHEET_LIST allows to handle the full (or partial) list of sheets and
- * their paths in a complex hierarchy.  The class EDA_ScreenList allow to
- * handle the list of SCH_SCREEN. It is useful to clear or save data,
+ * their paths in a complex hierarchy.  The class EDA_ScreenList allows one
+ * to handle the list of SCH_SCREEN. It is useful to clear or save data,
  * but is not suitable to handle the full complex hierarchy possibilities
  * (usable in flat and simple hierarchies).
  */
diff --git a/include/view/view.h b/include/view/view.h
index f7453de..1397b4d 100644
--- a/include/view/view.h
+++ b/include/view/view.h
@@ -50,7 +50,7 @@ class VIEW_RTREE;
  *    Foreseen for preview windows and printing.
  * Items in a view are grouped in layers (not to be confused with Kicad's PCB layers). Each layer is
  * identified by an integer number. Visibility and rendering order can be set individually for each
- * of the layers. Future versions of the VIEW will also allow to assign different layers to different
+ * of the layers. Future versions of the VIEW will also allows one to assign different layers to different
  * rendering targets, which will be composited at the final stage by the GAL.
  * The VIEW class also provides fast methods for finding all visible objects that are within a given
  * rectangular area, useful for object selection/hit testing.
diff --git a/pcbnew/footprint_editor_utils.cpp b/pcbnew/footprint_editor_utils.cpp
index 7bc0c80..a4bcbe0 100644
--- a/pcbnew/footprint_editor_utils.cpp
+++ b/pcbnew/footprint_editor_utils.cpp
@@ -128,7 +128,7 @@ BOARD_ITEM* FOOTPRINT_EDIT_FRAME::ModeditLocateAndDisplay( int aHotKeyCode )
     {
         wxMenu      itemMenu;
 
-        // Give a title to the selection menu. It also allow to close the popup menu without any action
+        // Give a title to the selection menu. It also allows one to close the popup menu without any action
         AddMenuItem( &itemMenu, wxID_NONE, _( "Clarify Selection" ),
                      KiBitmap( info_xpm ) );
         itemMenu.AppendSeparator();
