# Getting Started in KiCad Manual Japanese Translation
# Copyright (C) 2015 Free Software Foundation, Inc.
# This file is distributed under the same license as the KiCad package.
# kinichiro <kinichiro.inoguchi AT gmail.com>, 2015.
# silvermoon <silvermoon AT kicad.jp>, 2011-2015.
# yoneken <yoneken AT kicad.jp>, 2011-2015.
#
msgid ""
msgstr ""
"Project-Id-Version: KiCadことはじめ\n"
"POT-Creation-Date: 2016-05-13 23:32+0900\n"
"PO-Revision-Date: 2016-05-14 00:11+0900\n"
"Last-Translator: kinichiro <kinichiro.inoguchi@gmail.com>\n"
"Language-Team: kicad.jp <kicad@kicad.jp>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 1.8.6\n"
"X-Poedit-Bookmarks: -1,206,-1,-1,-1,-1,-1,-1,-1,-1\n"

#. type: Title =
#: getting_started_in_kicad.adoc:7
#, no-wrap
msgid "Getting Started in KiCad"
msgstr "KiCadことはじめ"

#. type: Plain text
#: getting_started_in_kicad.adoc:11
msgid ""
"_Essential and concise guide to mastering KiCad for the successful "
"development of sophisticated electronic printed circuit boards._"
msgstr ""
"_洗練された電子プリント回路基板の開発を成功に導く、KiCadをマスターするための"
"必須で簡潔なガイド_"

#. type: Plain text
#: getting_started_in_kicad.adoc:14
#, no-wrap
msgid "*Copyright*\n"
msgstr "*著作権*\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:20
msgid ""
"This document is Copyright (C) 2010-2015 by its contributors as listed "
"below. You may distribute it and/or modify it under the terms of either the "
"GNU General Public License (http://www.gnu.org/licenses/gpl.html), version 3 "
"or later, or the Creative Commons Attribution License (http://"
"creativecommons.org/licenses/by/3.0/), version 3.0 or later."
msgstr ""
"このドキュメントは以下の貢献者により著作権所有 (C) 2010-2015 されています。あ"
"なたは、GNU General Public License ( http://www.gnu.org/licenses/gpl.html ) "
"のバージョン 3 以降、あるいはクリエイティブ・コモンズ・ライセンス ( http://"
"creativecommons.org/licenses/by/3.0/ ) のバージョン 3.0 以降のいずれかの条件"
"の下で、配布または変更することができます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:22
msgid "All trademarks within this guide belong to their legitimate owners."
msgstr "このガイドの中のすべての商標は、正当な所有者に帰属します。"

#. type: Plain text
#: getting_started_in_kicad.adoc:25
#, no-wrap
msgid "*Contributors*\n"
msgstr "*貢献者*\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:27
msgid ""
"David Jahshan, Phil Hutchinson, Fabrizio Tappero, Christina Jarron, Melroy "
"van den Berg."
msgstr ""
"David Jahshan, Phil Hutchinson, Fabrizio Tappero, Christina Jarron, Melroy "
"van den Berg."

#. type: Plain text
#: getting_started_in_kicad.adoc:30
#, no-wrap
msgid "*Feedback*\n"
msgstr "*フィードバック*\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:32
msgid "Please direct any bug reports, suggestions or new versions to here:"
msgstr "バグ報告や提案はこちらへお知らせください:"

#. type: Plain text
#: getting_started_in_kicad.adoc:34
msgid "About KiCad document: https://github.com/KiCad/kicad-doc/issues"
msgstr ""
"KiCad のドキュメントについて : https://github.com/KiCad/kicad-doc/issues"

#. type: Plain text
#: getting_started_in_kicad.adoc:36
msgid "About KiCad software: https://bugs.launchpad.net/kicad"
msgstr "KiCad ソフトウェアについて : https://bugs.launchpad.net/kicad"

#. type: Plain text
#: getting_started_in_kicad.adoc:38
msgid "About KiCad software i18n: https://github.com/KiCad/kicad-i18n/issues"
msgstr ""
"KiCad ソフトウェアの国際化について : https://github.com/KiCad/kicad-i18n/"
"issues"

#. type: Plain text
#: getting_started_in_kicad.adoc:41
#, no-wrap
msgid "*Publication date*\n"
msgstr "*発行日*\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:43
msgid "2015, May 16."
msgstr "2015年5月16日"

#. type: Title ==
#: getting_started_in_kicad.adoc:46
#, no-wrap
msgid "Introduction to KiCad"
msgstr "KiCadのご紹介"

#. type: Plain text
#: getting_started_in_kicad.adoc:52
msgid ""
"KiCad is an open-source software tool for the creation of electronic "
"schematic diagrams and PCB artwork. Beneath its singular surface, KiCad "
"incorporates an elegant ensemble of the following stand-alone software tools:"
msgstr ""
"KiCadは、電子回路図とPCBレイアウトを作成するためのオープンソースのソフトウェ"
"ア・ツールです。その一つの外観の下に、KiCadは、以下の独立したソフトウェア・"
"ツール群のすばらしい組み合わせを実現しています:"

#. type: delimited block |
#: getting_started_in_kicad.adoc:64
#, no-wrap
msgid ""
"|Program name|Description|File extension\n"
"|KiCad |Project manager|+*.pro+\n"
"|Eeschema |Schematic editor (both schematic and component)|+*.sch, *.lib, *.net+\n"
"|CvPcb |Footprint selector|+*.net+\n"
"|Pcbnew |Circuit board board editor|+*.kicad_pcb+\n"
"|GerbView |Gerber viewer|All the usual gerbers\n"
"|Bitmap2Component |Convert bitmap images to components or footprints|+*.lib, *.kicad_mod, *.kicad_wks+\n"
"|PCB Calculator |Calculator for components, track width, electrical spacing, color codes, and more...|None\n"
"|Pl Editor |Page layout editor|+*.kicad_wks+\n"
msgstr ""
"|プログラム名|説明|拡張子\n"
"|KiCad |プロジェクト・マネージャ|+*.pro+\n"
"|Eeschema |回路図エディタ (回路図とコンポーネント)|+*.sch, *.lib, *.net+\n"
"|CvPcb |フットプリント・セレクタ|+*.net+\n"
"|Pcbnew |PCBレイアウト|+*.kicad_pcb+\n"
"|GerbView |ガーバー・ビューア|全ての通常のガーバー\n"
"|Bitmap2Component |ビットマップをコンポーネントやフットプリントに変換|+*.lib, *.kicad_mod, *.kicad_wks+\n"
"|PCB Calculator |コンポーネント、線幅、電気的安全間隔、カラーコード等のための計算機|なし\n"
"|Pl Editor |図枠エディタ|+*.kicad_wks+\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:70
msgid ""
"The file extension list is not complete and only contains a subset of the "
"files that KiCad works with that is useful for the basic understanding of "
"which files are used for each KiCad unique application."
msgstr ""
"拡張子の一覧は完全ではなく、KiCadが連携するファイルの一部のみを含んでおり、ど"
"のファイルがどのKiCad固有のアプリケーションで使われるのかの基本的な理解に役立"
"ちます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:74
msgid ""
"KiCad can be considered mature enough to be used for the successful "
"development and maintenance of complex electronic boards."
msgstr ""
"KiCadは、複雑な電子基板の開発やメンテナンスに十分使えるほどに成熟していると考"
"えることができます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:80
msgid ""
"KiCad does not present any board-size limitation and it can easily handle up "
"to 32 copper layers, up to 14 technical layers and up to 4 auxiliary "
"layers.  KiCad can create all the files necessary for building printed "
"boards, Gerber files for photo-plotters, drilling files, component location "
"files and a lot more."
msgstr ""
"KiCadには基板サイズの制限がなく、最大32の導体レイヤ、最大14のテクニカルレイヤ"
"そして最大4の補助レイヤを容易に扱えます。KiCadは、ガーバー・ファイル、ドリ"
"ル・ファイル、コンポーネント・ロケーション・ファイル等のプリント基板作成に必"
"要な全てのファイルを作ることができます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:84
msgid ""
"Being open source (GPL licensed), KiCad represents the ideal tool for "
"projects oriented towards the creation of electronic hardware with an open-"
"source flavour."
msgstr ""
"オープンソース(GPLライセンスに基づく)であるため、KiCadは、オープンソース志向"
"の電子機器作成プロジェクトに理想的なツールです。"

#. type: Plain text
#: getting_started_in_kicad.adoc:86
msgid "On the Internet, the home of KiCad is:"
msgstr "インターネット上のKiCadのホームページ:"

#. type: Plain text
#: getting_started_in_kicad.adoc:88
msgid "http://www.kicad-pcb.org/"
msgstr "http://www.kicad-pcb.org/"

#. type: Title ===
#: getting_started_in_kicad.adoc:91
#, no-wrap
msgid "Download and install KiCad"
msgstr "KiCadのダウンロードとインストール"

#. type: Plain text
#: getting_started_in_kicad.adoc:95
msgid ""
"KiCad runs on GNU/Linux, Apple OS X and Windows.  You can find the most up "
"to date instructions and download links at:"
msgstr ""
"KiCad は GNU/Linux、Apple OS X、Windows で動作します。以下の URL で最新のイン"
"ストール手順とダウンロードのリンクが見つかります:"

#. type: Plain text
#: getting_started_in_kicad.adoc:97
msgid "http://www.kicad-pcb.org/download/"
msgstr "http://www.kicad-pcb.org/download/"

#. type: Plain text
#: getting_started_in_kicad.adoc:106
msgid ""
"KiCad stable releases occur periodically per the http://ci.kicad-pcb.org/job/"
"kicad-doxygen/ws/Documentation/doxygen/html/"
"md_Documentation_development_stable-release-policy.html[KiCad Stable Release "
"Policy].  New features are continually being added to the development "
"branch.  If you would like to take advantage of these new features and help "
"out by testing them, please download the latest nightly build package for "
"your platform.  Nightly builds may introduce bugs but it is the goal of the "
"KiCad Development Team to keep the development branch as usable as possible "
"during new feature development."
msgstr ""
"KiCad 安定版は http://ci.kicad-pcb.org/job/kicad-doxygen/ws/Documentation/"
"doxygen/html/md_Documentation_development_stable-release-policy.html[KiCad "
"Stable Release Policy] に基づいて定期的にリリースされます。新機能は継続的に開"
"発ブランチに追加されています。もしあなたが新機能を活用したりテストをするな"
"ら、あなたのプラットホームの最新の夜間ビルドをダウンロードしてください。夜間"
"ビルドにはバグがあるかもしれませんが、KiCad 開発チームは新機能の開発中も開発"
"ブランチを可能な限り使用可能にしておくことを目標にしています。"

#. type: Title ===
#: getting_started_in_kicad.adoc:109
#, no-wrap
msgid "Under GNU/Linux"
msgstr "GNU/Linuxの場合"

#. type: Block title
#: getting_started_in_kicad.adoc:111 getting_started_in_kicad.adoc:148
#: getting_started_in_kicad.adoc:162
#, no-wrap
msgid "Stable builds"
msgstr "安定版："

#. type: Plain text
#: getting_started_in_kicad.adoc:116
msgid ""
"Stable releases of KiCad can be found in most distribution's package "
"managers as kicad and kicad-doc. If your distribution does not provide "
"latest stable version, please follow the instruction for unstable builds and "
"select and install the latest stable version."
msgstr ""
"KiCad の安定版はほとんどのディストリビューション・パッケージ・マネージャで "
"kicad と kicad-doc として見つけることができます。もしあなたがお使いのディスト"
"リビューションが最新の安定版を提供してなければ、不安定版の指示に従って、最新"
"の安定版を選択してインストールしてください。"

#. type: Block title
#: getting_started_in_kicad.adoc:117 getting_started_in_kicad.adoc:152
#: getting_started_in_kicad.adoc:166
#, no-wrap
msgid "Unstable (nightly development) builds"
msgstr "不安定版（夜間の開発中ビルド）："

#. type: Plain text
#: getting_started_in_kicad.adoc:121 getting_started_in_kicad.adoc:156
#: getting_started_in_kicad.adoc:170
msgid ""
"Unstable builds are built from the most recent source code. They can "
"sometimes have bugs that cause file corruption, generate bad gerbers, etc, "
"but are generally stable and have the latest features."
msgstr ""
"不安定版は最新のソースコードからビルドされます。不安定版は、ファイルを壊した"
"り、悪いガーバーを生成したり等のバグがあることもありますが、一般的には安定し"
"ており、そして最新の機能を持っています。"

#. type: Plain text
#: getting_started_in_kicad.adoc:124
msgid ""
"Under Ubuntu, the easiest way to install an unstable nightly build of KiCad "
"is via _PPA_ and __Aptitude__. Type the following into your Terminal:"
msgstr ""
"Ubuntu の場合、KiCad の不安定版の夜間ビルドをインストールする最も簡単な方法"
"は _PPA_ と __Aptitude__ によるものです。端末で次のようにタイプします:"

#. type: delimited block _
#: getting_started_in_kicad.adoc:127
msgid "sudo add-apt-repository ppa:js-reynaud/ppa-kicad"
msgstr "sudo add-apt-repository ppa:js-reynaud/ppa-kicad"

#. type: delimited block _
#: getting_started_in_kicad.adoc:129
msgid "sudo aptitude update && sudo aptitude safe-upgrade"
msgstr "sudo aptitude update && sudo aptitude safe-upgrade"

#. type: delimited block _
#: getting_started_in_kicad.adoc:131
msgid "sudo aptitude install kicad kicad-doc-en"
msgstr "sudo aptitude install kicad kicad-doc-en"

#. type: Plain text
#: getting_started_in_kicad.adoc:136
msgid ""
"Under Fedora the easiest way to install an unstable nightly build is via "
"__copr__.  To install KiCad via copr type the following in to copr:"
msgstr ""
"Fedora の場合、KiCad の不安定版の夜間ビルドをインストールする最も簡単な方法"
"は  _copr_ によるものです。KiCad を copr でインストールするには端末で次のよう"
"にタイプします:"

#. type: delimited block _
#: getting_started_in_kicad.adoc:139
msgid "sudo dnf copr enable mangelajo/kicad"
msgstr "sudo dnf copr enable mangelajo/kicad"

#. type: delimited block _
#: getting_started_in_kicad.adoc:141
msgid "sudo dnf install kicad"
msgstr "sudo dnf install kicad"

#. type: Plain text
#: getting_started_in_kicad.adoc:145
msgid ""
"Alternatively, you can download and install a pre-compiled version of KiCad, "
"or directly download the source code, compile and install KiCad."
msgstr ""
"あるいは、コンパイル済みバージョンのKiCadをダウンロードしてインストールした"
"り、直接KiCadのソースコードをダウンロードしてコンパイルしてインストールするこ"
"ともできます。"

#. type: Title ===
#: getting_started_in_kicad.adoc:147
#, no-wrap
msgid "Under Apple OS X"
msgstr "Apple OS Xの場合"

#. type: Plain text
#: getting_started_in_kicad.adoc:151
msgid ""
"Stable builds of KiCad for OS X can be found at: http://downloads.kicad-pcb."
"org/osx/stable/"
msgstr ""
"OS X 用の安定版の KiCad は以下の URL で見つけられます: +\n"
"http://downloads.kicad-pcb.org/osx/stable/"

#. type: Plain text
#: getting_started_in_kicad.adoc:159
msgid ""
"Unstable nightly development builds can be found at: http://downloads.kicad-"
"pcb.org/osx/"
msgstr ""
"不安定版の夜間ビルドは以下の URL で見つけられます: +\n"
"http://downloads.kicad-pcb.org/osx/"

#. type: Title ===
#: getting_started_in_kicad.adoc:161
#, no-wrap
msgid "Under Windows"
msgstr "Windowsの場合"

#. type: Plain text
#: getting_started_in_kicad.adoc:165
msgid ""
"Stable builds of KiCad for Windows can be found at: http://downloads.kicad-"
"pcb.org/windows/stable/"
msgstr ""
"Windows 用の安定版の KiCad は以下の URL で見つけられます: +\n"
"http://downloads.kicad-pcb.org/windows/stable/"

#. type: Plain text
#: getting_started_in_kicad.adoc:173
msgid ""
"For Windows you can find nightly development builds at: http://downloads."
"kicad-pcb.org/windows/"
msgstr ""
"Windows 用の夜間ビルドは以下の URL で見つけられます: +\n"
"http://downloads.kicad-pcb.org/windows/"

#. type: Title ===
#: getting_started_in_kicad.adoc:175
#, no-wrap
msgid "Support"
msgstr "サポート"

#. type: Plain text
#: getting_started_in_kicad.adoc:177
msgid "If you have ideas, remarks or questions, or if you just need help:"
msgstr ""
"何か思いついたり、発言したいことがあったり、質問があったり、ヘルプが必要だっ"
"たり ... いずれの場合でも:"

#. type: Plain text
#: getting_started_in_kicad.adoc:179
msgid "Visit the https://forum.kicad.info/[Forum]"
msgstr "訪れてみましょう。 https://forum.kicad.info/[Forum]"

#. type: Plain text
#: getting_started_in_kicad.adoc:180
msgid ""
"Join the http://webchat.freenode.net/?channels=kicad[#kicad IRC channel] on "
"Freenode"
msgstr ""
"参加してみましょう。 http://webchat.freenode.net/?channels=kicad[#kicad IRC "
"channel] on Freenode"

#. type: Plain text
#: getting_started_in_kicad.adoc:181
msgid "Watch http://www.kicad-pcb.org/help/tutorials/[Tutorials]"
msgstr ""
"熟読してみましょう。 http://www.kicad-pcb.org/help/tutorials/[Tutorials]"

#. type: Title ==
#: getting_started_in_kicad.adoc:184
#, no-wrap
msgid "KiCad Workflow"
msgstr "KiCad 作業の流れ"

#. type: Plain text
#: getting_started_in_kicad.adoc:190
msgid ""
"Despite its similarities with other PCB software tools, KiCad is "
"characterised by an interesting work-flow in which schematic components and "
"footprints are actually two separate entities. This is often the subject of "
"discussion on Internet forums."
msgstr ""
"他のPCBソフトウェア・ツールとの類似性にもかかわらず、KiCadは、回路図のコン"
"ポーネントとフットプリントを実際には別々の2つの実体とする、面白い作業の流れを"
"特徴としています。このことはよくインターネットのフォーラムでの議論の対象とな"
"ります。"

#. type: Title ===
#: getting_started_in_kicad.adoc:192
#, no-wrap
msgid "KiCad Workflow overview"
msgstr "KiCad 作業フローチャート"

#. type: Plain text
#: getting_started_in_kicad.adoc:199
msgid ""
"The KiCad work-flow is comprised of two main tasks: making the schematic and "
"laying out the board. Both a component library and a footprint library are "
"necessary for these two tasks. KiCad has plenty of both.  Just in case that "
"is not enough, KiCad also has the tools necessary to make new ones."
msgstr ""
"KiCadの作業の流れは２つの主要なタスクで構成されています。それは回路図の作成と"
"基板への配置です。これら2つのタスクのためにコンポーネントのライブラリとフット"
"プリントのライブラリの両方が必要とされます。KiCadはその両方の多くを持っていま"
"す。それでは不十分な場合、KiCadは、新しいそれらを作るのに必要なツールも持って"
"います。"

#. type: Plain text
#: getting_started_in_kicad.adoc:203
msgid ""
"In the picture below, you see a flowchart representing the KiCad work-flow.  "
"The picture explains which steps you need to take, in which order.  When "
"applicable, the icon is added as well for convenience."
msgstr ""
"下の図はKiCadの作業の流れを示すフローチャートです。この図はあなたが取る必要の"
"あるステップを、どんな順序で行うのかを説明しています。適用できる場合には便宜"
"上アイコンを付け加えています。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:204
#, no-wrap
msgid "images/kicad_flowchart.png"
msgstr "images/ja/kicad_flowchart.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:210
msgid ""
"For more information about creating a component, see the section of this "
"document titled <<make-schematic-components-in-kicad,Make schematic "
"components in KiCad>>. And for more information about how to create a new "
"footprint, see the section of this document titled <<make-component-"
"footprints,Make component footprints>>."
msgstr ""
"コンポーネントの作成についての更なる情報は、この文書の <<make-schematic-"
"components-in-kicad,「KiCad回路図コンポーネントの作成」 >> の章を参照して下さ"
"い。また、どのように新しいフットプリントを作成するかについての更なる情報は、"
"この文書の <<make-component-footprints, 「フットプリントの作成」 >> の章を参"
"照して下さい。"

#. type: Plain text
#: getting_started_in_kicad.adoc:212
msgid "On the following site:"
msgstr "以下のサイト:"

#. type: Plain text
#: getting_started_in_kicad.adoc:214
msgid "http://kicad.rohrbacher.net/quicklib.php"
msgstr "http://kicad.rohrbacher.net/quicklib.php"

#. type: Plain text
#: getting_started_in_kicad.adoc:220
msgid ""
"You will find an example of use of a tool that allows you to quickly create "
"KiCad library components. For more information about quicklib, refer to the "
"section of this document titled <<make-schematic-components-with-quicklib,"
"Make Schematic Components With quicklib>>."
msgstr ""
"では、素早くKiCadのコンポーネントを作成することのできるツールの例を見つけるこ"
"とができるでしょう。quicklib についての更なる情報は、この文書の <<make-"
"schematic-components-with-quicklib, 「quicklibによる回路図コンポーネントの作"
"成」 >> の章を参照して下さい。"

#. type: Title ===
#: getting_started_in_kicad.adoc:222
#, no-wrap
msgid "Forward and backward annotation"
msgstr "前方向と後方向のアノテーション"

#. type: Plain text
#: getting_started_in_kicad.adoc:230
msgid ""
"Once an electronic schematic has been fully drawn, the next step is to "
"transfer it to a PCB following the KiCad work-flow. Once the board layout "
"process has been partially or completely done, additional components or nets "
"might need to be added, parts moved around and much more. This can be done "
"in two ways: Backward Annotation and Forward Annotation."
msgstr ""
"電子回路図を完全に描き終わったら、次のステップはKiCadの作業の流れに従い、それ"
"をPCBに移すことです。基板レイアウトの工程を部分的にあるいは完全に終え、追加の"
"コンポーネントやネットが付け足される必要があるかもしれませんし、部品達を並び"
"替えたり、色々あるでしょう。これは2つの方法で行うことができます: 後方向アノ"
"テーションと前方向アノテーション。"

#. type: Plain text
#: getting_started_in_kicad.adoc:234
msgid ""
"Backward Annotation is the process of sending a PCB layout change back to "
"its corresponding schematic. Some do not consider this particular feature "
"especially useful."
msgstr ""
"後方向アノテーションは、PCBレイアウトの変更をその対応する回路図に送り戻す処理"
"です。この特別な機能を特に便利と思わない人もいるでしょう。"

#. type: Plain text
#: getting_started_in_kicad.adoc:240
msgid ""
"Forward Annotation is the process of sending schematic changes to a "
"corresponding PCB layout. This is a fundamental feature because you do not "
"really want to re-do the layout of the whole PCB every time you make a "
"modification to your schematic. Forward Annotation is discussed in the "
"section titled <<forward-annotation-in-kicad,Forward Annotation>>."
msgstr ""
"前方向アノテーションは回路図の変更を対応するPCBレイアウトに送る機能です。回路"
"図に変更を加える度にPCBのレイアウト全体をやり直したくはないでしょうからこれは"
"基本的な機能です。前方向アノテーションは <<forward-annotation-in-kicad, "
"「KiCadの前方向アノテーション」 >> の章で議論されています。"

#. type: Title ==
#: getting_started_in_kicad.adoc:242
#, no-wrap
msgid "Draw electronic schematics"
msgstr "電子回路図の描画"

#. type: Plain text
#: getting_started_in_kicad.adoc:246
msgid ""
"In this section we are going to learn how to draw an electronic schematic "
"using KiCad."
msgstr "この章ではKiCadを使ってどのように電子回路図を描画するかを学びます。"

#. type: Title ===
#: getting_started_in_kicad.adoc:248
#, no-wrap
msgid "Using Eeschema"
msgstr "Eeschema の使用"

#. type: Plain text
#: getting_started_in_kicad.adoc:257
msgid ""
"Under Windows run kicad.exe. Under Linux type 'kicad' in your Terminal. You "
"are now in the main window of the KiCad project manager.  From here you have "
"access to eight stand-alone software tools: __Eeschema__, __Schematic "
"Library Editor__, __Pcbnew__, __PCB Footprint Editor__, __GerbView__, "
"__Bitmap2Component__, __PCB Calculator__ and __Pl Editor__. Refer to the "
"work-flow chart to give you an idea how the main tools are used."
msgstr ""
"Windowsの場合、kicad.exeを実行して下さい。Linuxの場合、端末で 'kicad' とタイ"
"プして下さい。KiCad プロジェクト・マネージャのメイン画面が現れるでしょう。こ"
"こからあなたは次の8つの独立したソフトウェア・ツールを使うことができます: "
"__Eeschema__, __コンポーネント・ライブラリ・エディタ__, __Pcbnew__, __フット"
"プリント・エディタ__, __GerbView__, __Bitmap2Component__, __PCB Calulator__ "
"そして __Pl Editor__ です。主要なツール群がどのように使われるのか理解するため"
"に KiCad作業の流れ の図を参照して下さい。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:258
#, no-wrap
msgid "images/kicad_main_window.png"
msgstr "images/ja/kicad_main_window.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:264
msgid ""
"Create a new project: *File* -> **New Project** -> **New Project**.  Name "
"the project file 'tutorial1'. The project file will automatically take the "
"extension \".pro\". KiCad prompts to create a dedicated directory, click "
"\"Yes\" to confirm. All your project files will be saved here."
msgstr ""
"新規プロジェクトを作成します: *ファイル* -> **新規プロジェクト** -> **新規プ"
"ロジェクト** 。プロジェクトファイルは 'tutorial1' と名付けましょう。プロジェ"
"クトファイルの拡張子は自動的に \".pro\" となります。KiCad はこのプロジェクト"
"専用のディレクトリを作るかを確認してくるので、 \"はい\" をクリックしましょ"
"う。あなたのプロジェクトファイルは全てここに保存されます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:268
msgid ""
"Let's begin by creating a schematic. Start the schematic editor "
"__Eeschema__, image:images/icons/eeschema.png[Eeschema]. It is the first "
"button from the left."
msgstr ""
"回路図の作成から始めてみましょう。回路図エディタ __Eeschema__ を起動します "
"image:images/icons/eeschema.png[Eeschema] 。左から1番目のボタンです。"

#. type: Plain text
#: getting_started_in_kicad.adoc:276
msgid ""
"Click on the 'Page Settings' icon image:images/icons/sheetset.png[Sheet "
"settings icon] on the top toolbar. Set the Page Size as 'A4' and enter the "
"Title as 'Tutorial 1'. You will see that more information can be entered "
"here if necessary. Click OK. This information will populate the schematic "
"sheet at the bottom right corner. Use the mouse wheel to zoom in.  Save the "
"whole schematic project: *File* -> **Save Schematic Project**"
msgstr ""
"トップツールバーの 'ページの設定' アイコン image:images/icons/sheetset."
"png[Sheet settings icon] をクリックします。ページサイズを 'A4' に選択し、タイ"
"トルを 'Tutorial 1' と入力します。必要に応じて更に多くの情報をここで入力でき"
"ることが分かるでしょう。OKをクリックします。この情報は回路図面の右下隅に取り"
"込まれます。ズームインするにはマウスのホイールを使います。回路図プロジェクト"
"を保存しましょう: *ファイル* -> **回路図プロジェクトの保存**"

#. type: Plain text
#: getting_started_in_kicad.adoc:281
msgid ""
"We will now place our first component. Click on the 'Place component' icon "
"image:images/icons/add_component.png[Add component Icon] in the right "
"toolbar. The same functionality is achieved by pressing the 'Place "
"component' shortcut key ('a')."
msgstr ""
"では最初のコンポーネントを置いてみます。右ツールバーの 'コンポーネントの配"
"置' アイコン image:images/icons/add_component.png[Add component Icon] をク"
"リックします。同じ機能はショートカットの \"a\" キーによる 'コンポーネントの配"
"置' によっても行えます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:284
msgid ""
"You can see a list of all available shortcut keys by pressing the '?' key."
msgstr "\"?\" を押すと利用できるショートカットキーの一覧を見ることができます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:292
msgid ""
"Click on the middle of your schematic sheet. A __Choose Component__ window "
"will appear on the screen.  We're going to place a resistor. Search / filter "
"on the 'R' of **R**esistor.  You may notice the 'device' heading above the "
"Resistor. This 'device' heading is the name of the library where the "
"component is located, which is quite a generic and useful library."
msgstr ""
"回路図シートの中央あたりをクリックします。 __コンポーネントの選択__ ウィンド"
"ウが表示されます。抵抗器を配置してみましょう。フィルタに抵抗器(**R**esitor)"
"の 'R' を入力して探します。抵抗器の上に 'device' と見出しが出ることに気付いた"
"と思います。この 'device' という見出しは、そのコンポーネントが存在するライブ"
"ラリの名前で、それはとても汎用的で便利なライブラリです。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:293
#, no-wrap
msgid "images/choose_component.png"
msgstr "images/ja/choose_component.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:298
msgid ""
"Double click on it. This will close the 'Choose Component' window.  Place "
"the component in the schematic sheet by clicking where you want it to be."
msgstr ""
"その上でダブルクリックします。これにより 'コンポーネントの選択' ウィンドウが"
"閉じられます。回路図シート上の置きたいと思う所をクリックすることでコンポーネ"
"ントを配置します。"

#. type: Plain text
#: getting_started_in_kicad.adoc:302
msgid ""
"Click on the magnifier icon to zoom in on the component.  Alternatively, use "
"the mouse wheel to zoom in and zoom out. Press the wheel (central)  mouse "
"button to pan horizontally and vertically."
msgstr ""
"ズームインするためにコンポーネント上で拡大鏡をクリックします。あるいは、ズー"
"ムインとズームアウトをするためにマウスのホイールを使います。水平方向と垂直方"
"向にパンするにはマウスの（中央）ホイールを押します。"

#. type: Plain text
#: getting_started_in_kicad.adoc:306
msgid ""
"Try to hover the mouse over the component 'R' and press the r key. The "
"component should rotate. You do not need to actually click on the component "
"to rotate it."
msgstr ""
"コンポーネント 'R' の上にマウスカーソルを合わせて、\"r\" キーを押します。コン"
"ポーネントが回転します。回転させるためにコンポーネント上でクリックする必要は"
"ありません。"

#. type: Plain text
#: getting_started_in_kicad.adoc:312
msgid ""
"If your mouse was also over the _Field Reference_ ('R') or the _Field Value_ "
"('R?'), a menu will appear. You will see these 'Clarify Selection' menu "
"often in KiCad, they allow working on objects that are on top of each other. "
"In this case, tell KiCad you want to perform the action on the 'Component ..."
"R...'."
msgstr ""
"マウスカーソルが _フィールド Reference_  ('R') か _フィールド Value_ ('R?') "
"の上にあればメニューが現れるでしょう。この '明示的な選択' メニューはしばしば "
"KiCad で見られ、互いに重なっているオブジェクトへの作業を可能にします。今回の"
"場合、 'コンポーネント R' にアクションを実行することを KiCad に伝えます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:318
msgid ""
"Right click in the middle of the component and select *Edit Component* -> "
"**Value**. You can achieve the same result by hovering over the component "
"and pressing the v key. Alternatively, the e key will take you to the more "
"general Edit window. Notice how the right-click menu below shows shortcut "
"keys for all available actions."
msgstr ""
"コンポーネントの中央で右クリックし、*コンポーネントの編集* -> **定数** を選択"
"します。コンポーネントの上にマウスカーソルを合わせて \"v\" キーを押しても同じ"
"ことができます。あるいは、\"e\" キーで更に全般的な編集ウィンドウを開けます。"
"以下の右クリックのコンテキストメニューが、全ての可能なアクションに対する全て"
"の利用可能なショートカットキーを見せてくれることに注目しましょう。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:319
#, no-wrap
msgid "images/edit_component_dropdown.png"
msgstr "images/ja/edit_component_dropdown.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:323
msgid ""
"The Component value window will appear. Replace the current value 'R' with "
"'1 k'. Click OK."
msgstr ""
"フィールド定数の編集のウィンドウが表示されます。現在の定数の 'R' を '1k' に置"
"き換えます。OKをクリックします。"

#. type: Plain text
#: getting_started_in_kicad.adoc:326
msgid ""
"Do not change the Reference field (R?), this will be done automatically "
"later on. The value inside the resistor should now be '1 k'."
msgstr ""
"リファレンス・フィールド (R?) を変更しないで下さい。これは後ほど自動的に行わ"
"れます。これで抵抗器の中の定数は '1k' となりました。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:327
#, no-wrap
msgid "images/resistor_value.png"
msgstr "images/resistor_value.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:331
msgid ""
"To place another resistor, simply click where you want the resistor to "
"appear. The Component Selection window will appear again."
msgstr ""
"別の抵抗器を配置するには、抵抗器を置きたい場所を単にクリックします。コンポー"
"ネント選択のウィンドウが再び表示されます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:334
msgid ""
"The resistor you previously chose is now in your history list, appearing as "
"'R'. Click OK and place the component."
msgstr ""
"前に選んだ抵抗器が履歴リスト上に 'R' として表示されています。OKをクリックして"
"コンポーネントを配置します。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:335
#, no-wrap
msgid "images/component_history.png"
msgstr "images/ja/component_history.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:341
msgid ""
"In case you make a mistake and want to delete a component, right click on "
"the component and click 'Delete Component'. This will remove the component "
"from the schematic. Alternatively, you can hover over the component you want "
"to delete and press the del key."
msgstr ""
"間違えたコンポーネントを削除したい場合は、コンポーネント上で右クリックして "
"'コンポーネント削除' をクリックします。これでコンポーネントは回路図から取り除"
"かれます。あるいは、削除したいコンポーネント上にマウスカーソルを置いて "
"\"Delete\" キーを押すこともできます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:345
msgid ""
"You can edit any default shortcut key by going to *Preferences* -> *Hotkeys* "
"-> **Edit hotkeys**. Any modification will be saved immediately."
msgstr ""
"デフォルトのショートカットキーは *設定* -> *ホットキー* -> **ホットキーの編集"
"** で編集できます。変更は即座に保存されます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:349
msgid ""
"You can also duplicate a component already on your schematic sheet by "
"hovering over it and pressing the c key. Click where you want to place the "
"new duplicated component."
msgstr ""
"既に回路図シート上にあるコンポーネントにマウスカーソルを合わせて \"c\" キーを"
"押すことにより、複製することができます。新しく複製したコンポーネントを置きた"
"い場所をクリックして下さい。"

#. type: Plain text
#: getting_started_in_kicad.adoc:355
msgid ""
"Right click on the second resistor. Select 'Drag Component'.  Reposition the "
"component and left click to drop. The same functionality can be achieved by "
"hovering over the component and by pressing the g key. Use the r key to "
"rotate the component. The x key and the y key will flip the component."
msgstr ""
"2つ目の抵抗器を右クリックします。'コンポーネントの移動' を選択します。コン"
"ポーネントを再配置して左クリックで置きます。同じ機能が、コンポーネントにマウ"
"スカーソルを合わせて \"g\" キーを押すことでも可能です。回転させるためには \"r"
"\" キーを使います。\"x\" キーと \"y\" キーはコンポーネントを反転させます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:360
#, no-wrap
msgid ""
"*Right-Click* -> *Move component* (equivalent to the m key\n"
"option) is also a valuable option for moving anything around, but it\n"
"is better to use this only for component labels and components yet to\n"
"be connected. We will see later on why this is the case.\n"
msgstr ""
"*右クリック* -> *コンポーネントの移動* (\"m\" キーと同等)\n"
"もまた色んなものを移動する便利なオプションですが、\n"
"コンポーネントのラベルや未接続のコンポーネントにのみ使うのが良いです。\n"
"なぜそうなのかは後述します。\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:364
msgid ""
"Edit the second resistor by hovering over it and pressing the v key.  "
"Replace 'R' with '100'. You can undo any of your editing actions with the "
"ctrl+z key."
msgstr ""
"2つ目の抵抗器にマウスカーソルを置いて \"v\" キーを押して編集します。'R' を "
"'100' で置き換えます。\"Ctrl+Z\" キーによってどんな編集操作も「元に戻す」がで"
"きます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:370
msgid ""
"Change the grid size. You have probably noticed that on the schematic sheet "
"all components are snapped onto a large pitch grid. You can easily change "
"the size of the grid by *Right-Click* -> **Grid select**. __In general, it "
"is recommended to use a grid of 50.0 mils for the schematic sheet__."
msgstr ""
"グリッドのサイズを変更します。回路図シート上では、全てのコンポーネントが大き"
"なマス目のグリッドに沿っていることに気付いていると思います。グリッドのサイズ"
"は *右クリック* -> **グリッドの選択** で変更することができます。 __一般的に、"
"回路図シートでは50.0ミルのグリッドをお勧めします。__"

#. type: Plain text
#: getting_started_in_kicad.adoc:374
msgid ""
"We are going to add a component from a library that isn't configured in the "
"default project. In the menu, choose *Preferences* -> **Component "
"Libraries** and click the **Add** button for **Component library files**."
msgstr ""
"デフォルトのプロジェクトでは設定されていないライブラリに含まれているコンポー"
"ネントを追加します。メニューで *設定* -> **コンポーネント ライブラリ** を選ん"
"で **コンポーネント ライブラリ ファイル** の右にある **追加** ボタンをクリッ"
"クします。"

#. type: Plain text
#: getting_started_in_kicad.adoc:380
msgid ""
"You need to find where the official KiCad libraries are installed on your "
"computer. Look for a `library` directory containing a hundred of `.dcm` and "
"`.lib` files. Try in `C:\\Program Files (x86)\\KiCad\\share\\` (Windows) and "
"`/usr/share/kicad/library/` (Linux). When you have found the directory, "
"choose and add the 'microchip_pic12mcu' library and close the window."
msgstr ""
"公式の KiCad ライブラリがあなたのコンピュータのどこにインストールされているか"
"見つける必要があります。たくさんの '.dcm' ファイルと '.lib' ファイルのある "
"'library' ディレクトリを探しましょう。 `C:\\Program Files (x86)\\KiCad\\share"
"\\` (Windows) や `/usr/share/kicad/library/` (Linux) を見てみましょう。ディレ"
"クトリを見つけたら、 'microchip_pic12mcu' ライブラリを選んで追加し、コンポー"
"ネントライブラリのダイアログを閉じましょう。"

#. type: Plain text
#: getting_started_in_kicad.adoc:384
msgid ""
"Repeat the add-component steps, however this time select the "
"'microchip_pic12mcu' library instead of the 'device' library and pick the "
"'PIC12C508A-I/SN' component."
msgstr ""
"コンポーネント追加のステップを続けますが、今度は 'device' ライブラリの代わり"
"に 'microchip_pic12mcu' ライブラリを選択して 'PIC12C508A-I/SN' コンポーネント"
"を選びましょう。"

#. type: Plain text
#: getting_started_in_kicad.adoc:389
msgid ""
"Hover the mouse over the microcontroller component. Press the y key or the x "
"key on the keyboard. Notice how the component is flipped over its x axis or "
"its y axis. Press the key again to return it to its original orientation."
msgstr ""
"マイクロコントローラのコンポーネントにマウスカーソルを置きます。\"y\" キーか "
"\"x\" キーを押します。コンポーネントがx軸、y軸でどのように反転するかが分かり"
"ます。キーをもう一度押すと元の方向に戻ります。"

#. type: Plain text
#: getting_started_in_kicad.adoc:392
msgid ""
"Repeat the add-component steps, this time choosing the 'device' library and "
"picking the 'LED' component from it."
msgstr ""
"コンポーネント追加のステップを続けますが、今度は 'device' ライブラリを選択し"
"て 'LED' コンポーネントを選びましょう。"

#. type: Plain text
#: getting_started_in_kicad.adoc:394
msgid "Organise all components on your schematic sheet as shown below."
msgstr "回路図シート上の全てのコンポーネントを以下のように整理します。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:395
#, no-wrap
msgid "images/gsik_tutorial1_010.png"
msgstr "images/gsik_tutorial1_010.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:402
msgid ""
"We now need to create the schematic component 'MYCONN3' for our 3-pin "
"connector. You can jump to the section titled <<make-schematic-components-in-"
"kicad,Make Schematic Components in KiCad>> to learn how to make this "
"component from scratch and then return to this section to continue with the "
"board."
msgstr ""
"私達は3ピンのコネクタのために 'MYCONN3' という回路図コンポーネントを作る必要"
"があります。 <<make-schematic-components-in-kicad, 「KiCad回路図コンポーネン"
"トの作成」 >> の章にジャンプし、一からコンポーネントを作る方法を学び、この章"
"に戻ってきて下さい。"

#. type: Plain text
#: getting_started_in_kicad.adoc:405
msgid ""
"You can now place the freshly made component. Press the 'a' key and pick the "
"'MYCONN3' component in the 'myLib' library."
msgstr ""
"さあ、新たに作成されたコンポーネントを配置することができるようになりまし"
"た。\"a\" キーを押して 'List All' を選択します。'myLib' ライブラリを選択して "
"'MYCONN3' コンポーネントを選びます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:411
msgid ""
"The component identifier 'J?' will appear under the 'MYCONN3' label.  If you "
"want to change its position, right click on 'J?' and click on 'Move "
"Field' (equivalent to the m key option). It might be helpful to zoom in "
"before/while doing this. Reposition 'J?' under the component as shown below. "
"Labels can be moved around as many times as you please."
msgstr ""
"コンポーネントの識別子 'J?' が 'MYCONN3' ラベルの下に見えます。位置を変えたい"
"なら、'J?' の上で右クリックして 'リファレンスの移動' (\"m\" キーと同等) をク"
"リックします。これを行う前か最中にズームインすると便利かもしれません。コン"
"ポーネントの 'J?' を以下に示すように再配置します。ラベルは何回でも好きなだけ"
"動かすことができます。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:412
#, no-wrap
msgid "images/gsik_myconn3_s.png"
msgstr "images/gsik_myconn3_s.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:419
msgid ""
"It is time to place the power and ground symbols. Click on the 'Place a "
"power port' button image:images/icons/add_power.png[add_power_png] on the "
"right toolbar. Alternatively, press the 'p' key. In the component selection "
"window, scroll down and select 'VCC' from the 'power' library.  Click OK."
msgstr ""
"電源とGNDのシンボルを配置します。右ツールバーにある '電源ポートの配置' ボタ"
"ン image:images/icons/add_power.png[add_power_png] をクリックします。あるい"
"は、\"p\" キーを押します。コンポーネント選択のウィンドウで下方にスクロール"
"し、 'power' ライブラリから 'VCC' 選択します。OKをクリックします。"

#. type: Plain text
#: getting_started_in_kicad.adoc:425
msgid ""
"Click above the pin of the 1 k resistor to place the VCC part. Click on the "
"area above the microcontroller 'VDD'. In the 'Component Selection history' "
"section select 'VCC' and place it next to the VDD pin. Repeat the add "
"process again and place a VCC part above the VCC pin of 'MYCONN3'."
msgstr ""
"VCC部品を配置するために、1kの抵抗器のピンの上方をクリックします。マイクロコン"
"トローラ の 'VDD' の上方をクリックします。 'コンポーネント選択履歴' の中から "
"'VCC' を選び、VDDピンの隣に配置します。追加作業を繰り返して、VCC部品を "
"'MYCONN3' のVCCピンの上方に配置します。"

#. type: Plain text
#: getting_started_in_kicad.adoc:430
msgid ""
"Repeat the add-pin steps but this time select the GND part. Place a GND part "
"under the GND pin of 'MYCONN3'. Place another GND symbol on the right of the "
"VSS pin of the microcontroller. Your schematic should now look something "
"like this:"
msgstr ""
"ピン追加のステップを続けますが、今度はGND部品を選択します。GND部品を "
"'MYCONN3' のGNDピンの下に配置します。別のGNDシンボルを、マイクロコントローラ"
"のVSSピンの右に配置します。回路図はこのようになっているはずです。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:431
#, no-wrap
msgid "images/gsik_tutorial1_020.png"
msgstr "images/gsik_tutorial1_020.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:436
msgid ""
"Next, we will wire all our components. Click on the 'Place wire' icon image:"
"images/icons/add_line.png[Place wire] on the right toolbar."
msgstr ""
"次に、全てのコンポーネントの配線をします。右ツールバーの 'ワイヤの配置' アイ"
"コン image:images/icons/add_line.png[Place wire] をクリックします。"

#. type: Plain text
#: getting_started_in_kicad.adoc:441
msgid ""
"Be careful not to pick 'Place a bus', which appears directly beneath this "
"button but has thicker lines. The section <<bus-connections-in-kicad,Bus "
"Connections in KiCad>> will explain how to use a bus section."
msgstr ""
"'バスの配置' を選ばないように注意しましょう。このボタンの直ぐ下にあり線が太い"
"です。 <<bus-connections-in-kicad, 「KiCadでのバス接続」 >> の節でバスをどの"
"ように使うか説明しています。"

#. type: Plain text
#: getting_started_in_kicad.adoc:445
msgid ""
"Click on the little circle at the end of pin 7 of the microcontroller and "
"then click on the little circle on pin 2 of the LED.  You can zoom in while "
"you are placing the connection."
msgstr ""
"マイクロコントローラのピン7の端の小丸をクリックし、それからLEDのピン1の小丸を"
"クリックします。接続を配置する時にズームインすることができます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:450
msgid ""
"If you want to reposition wired components, it is important to use the g key "
"(grab) option and not the m key (move) option. Using the grab option will "
"keep the wires connected. Review step 24 in case you have forgotten how to "
"move a component."
msgstr ""
"配線されたコンポーネントを再配置したい場合、\"g\" キー (掴む) を使うことが重"
"要で、\"m\" キー (移動) は使うべきではありません。(掴む) を使うことでワイヤの"
"接続を維持できます。コンポーネントの移動方法を忘れたならステップ16,27を見直し"
"ましょう。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:451
#, no-wrap
msgid "images/gsik_tutorial1_030.png"
msgstr "images/gsik_tutorial1_030.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:458
msgid ""
"Repeat this process and wire up all the other components as shown below. To "
"terminate a wire just double-click. When wiring up the VCC and GND symbols, "
"the wire should touch the bottom of the VCC symbol and the middle top of the "
"GND symbol. See the screenshot below."
msgstr ""
"この処理を繰り返して以下の全てのコンポーネントの配線を済ませます。ワイヤを終"
"端するにはダブルクリックをします。VCCとGNDのシンボルへの配線は、VCCシンボルな"
"ら下部に、GNDシンボルなら上部中央にタッチします。下のスクリーンショットを見て"
"ください。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:459
#, no-wrap
msgid "images/gsik_tutorial1_040.png"
msgstr "images/gsik_tutorial1_040.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:465
msgid ""
"We will now consider an alternative way of making a connection using labels. "
"Pick a net labelling tool by clicking on the 'Place net name' icon image:"
"images/icons/add_line_label.png[add_line_label_png] on the right toolbar. "
"You can also use the l key."
msgstr ""
"今度はラベルを使った別の接続方法を考えてみましょう。右ツールバーの 'ネット名"
"の配置' アイコン image:images/icons/add_line_label.png[label_png] をクリック"
"して ネット名の配置ツールを選びます。\"l\" キーを使うこともできます。 "

#. type: Plain text
#: getting_started_in_kicad.adoc:468
msgid ""
"Click in the middle of the wire connected to pin 6 of the microcontroller. "
"Name this label 'INPUT'."
msgstr ""
"マイクロコントローラのピン6に接続されているワイヤの中程をクリックします。この"
"ラベルに 'INPUT' と名前をつけます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:477
msgid ""
"Follow the same procedure and place another label on line on the right of "
"the 100 ohm resistor. Also name it 'INPUT'. The two labels, having the same "
"name, create an invisible connection between pin 6 of the PIC and the 100 "
"ohm resistor. This is a useful technique when connecting wires in a complex "
"design where drawing the lines would make the whole schematic messier. To "
"place a label you do not necessarily need a wire, you can simply attach the "
"label to a pin."
msgstr ""
"同じ手順に従い100Ωの抵抗器の右にある配線に別のラベルを配置します。同様に "
"'INPUT' と名前を付けます。2つの同じ名前を持つラベルは、見えない接続をPICのピ"
"ン6と100Ω抵抗器の間に作ります。これは線が混雑した複雑なデザインの場合に便利な"
"配線テクニックです。ラベルを配置するのに必ずしもワイヤは必要ではなく、単純に"
"ピンにラベルを付けることができます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:483
msgid ""
"Labels can also be used to simply label wires for informative purposes. "
"Place a label on pin 7 of the PIC. Enter the name 'uCtoLED'.  Name the wire "
"between the resistor and the LED as 'LEDtoR'. Name the wire between "
"'MYCONN3' and the resistor as 'INPUTtoR'."
msgstr ""
"ラベルはまた、単に配線に有用な名前をつける目的で使うこともできます。PICのピン"
"7にラベルを付けて 'uCtoLED' と名前をつけたり、抵抗器とLEDの間のワイヤに "
"'LEDtoR' と名前をつけたり、'MYCONN3' と抵抗器の間のワイヤに 'INPUTtoR' つけた"
"り、です。"

#. type: Plain text
#: getting_started_in_kicad.adoc:486
msgid ""
"You do not have to label the VCC and GND lines because the labels are "
"implied from the power objects they are connected to."
msgstr ""
"VCCとGNDの線にラベルをつける必要はありません。そのラベルは、接続されている電"
"源オブジェクトから暗黙的に定義されています。"

#. type: Plain text
#: getting_started_in_kicad.adoc:488
msgid "Below you can see what the final result should look like."
msgstr "下図に最終的な結果がどのように見えるかを示します。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:489
#, no-wrap
msgid "images/gsik_tutorial1_050.png"
msgstr "images/gsik_tutorial1_050.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:496
msgid ""
"Let's now deal with unconnected wires. Any pin or wire that is not connected "
"will generate a warning when checked by KiCad. To avoid these warnings you "
"can either instruct the program that the unconnected wires are deliberate or "
"manually flag each unconnected wire or pin as unconnected."
msgstr ""
"それでは接続されていないワイヤに対処しましょう。接続されていないピンやワイヤ"
"はKiCadにチェックされた時に警告されます。これらの警告を避けるため、ワイヤが接"
"続されていないのが意図的であることをプログラムに指示することができます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:501
msgid ""
"Click on the 'Place no connect flag' icon image:images/icons/noconn."
"png[noconn_png] on the right toolbar. Click on pins 2, 3, 4 and 5. An X will "
"appear to signify that the lack of a wire connection is intentional."
msgstr ""
"右ツールバーにある '空き端子フラグを配置' というアイコン  image:images/icons/"
"noconn.png[noconn_png] をクリックします。2, 3, 4 と 5 の線の端にある小丸の上"
"でクリックします。 Xは未接続が意図的であることを示すために表示されます。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:502
#, no-wrap
msgid "images/gsik_tutorial1_060.png"
msgstr "images/gsik_tutorial1_060.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:510
msgid ""
"Some components have power pins that are invisible. You can make them "
"visible by clicking on the 'Show hidden pins' icon image:images/icons/"
"hidden_pin.png[hidden_pin_png] on the left toolbar. Hidden power pins get "
"automatically connected if VCC and GND naming is respected. Generally "
"speaking, you should try not to make hidden power pins."
msgstr ""
"見えない電源ピンを持つコンポーネントがあります。左ツールバーの '非表示ピンを"
"表示' のアイコン image:images/icons/hidden_pin.png[hidden_pin_png] をクリック"
"することでそれらを見えるようにできます。VCCとGNDの名前付けが尊重される場合、"
"隠れた電源ピンは自動的に接続されます。一般的には、隠れた電源ピンを作らないよ"
"うに努力すべきです。"

#. type: Plain text
#: getting_started_in_kicad.adoc:516
msgid ""
"It is now necessary to add a 'Power Flag' to indicate to KiCad that power "
"comes in from somewhere. Press the a key, select 'List All', double click on "
"the 'power' library and search for 'PWR_FLAG'. Place two of them. Connect "
"them to a GND pin and to VCC as shown below."
msgstr ""
"KiCadに、どこから電源が来るのかを示すために、'電源フラグ' を追加する必要があ"
"ります。\"a\" キーを押して 'List All' を選択し、'power' ライブラリの上でダブ"
"ルクリックを行い、'PWR_FLAG' を探します。それを２つ配置します。以下に示すよう"
"にGNDとVCCに接続しましょう。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:517
#, no-wrap
msgid "images/gsik_tutorial1_070.png"
msgstr "images/gsik_tutorial1_070.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:521
msgid ""
"This will avoid the classic schematic checking warning: Warning Pin power_in "
"not driven (Net xx)"
msgstr ""
"これにより典型的な回路図チェックの警告を避けることができます: 警告 power_in "
"ピンは駆動されていません (Net xx)"

#. type: Plain text
#: getting_started_in_kicad.adoc:525
msgid ""
"Sometimes it is good to write comments here and there. To add comments on "
"the schematic use the 'Place graphic text (comment)' icon image:images/icons/"
"add_text.png[add_text_png] on the right toolbar."
msgstr ""
"あちこちにコメントを書いておくのが良いこともあります。回路図にコメントを追加"
"するには、右ツールバーの 'テキストの配置' のアイコン image:images/icons/"
"add_text.png[add_text_png] を使います。"

#. type: Plain text
#: getting_started_in_kicad.adoc:531
msgid ""
"All components now need to have unique identifiers. In fact, many of our "
"components are still named 'R?' or 'J?'. Identifier assignation can be done "
"automatically by clicking on the 'Annotate schematic' icon image:images/"
"icons/annotate.png[annotate_png] on the top toolbar."
msgstr ""
"全てのコンポーネントは今ユニークな識別子を持つ必要があります。実際には私達の"
"コンポーネントの多くはまだ 'R?' や 'J?' と名付けられています。識別子の割り当"
"ては、トップツールバーの '回路図のアノテーション' のアイコン image:images/"
"icons/annotate.png[annotate_png] をクリックすることで自動的に行われます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:538
msgid ""
"In the Annotate Schematic window, select 'Use the entire schematic' and "
"click on the 'Annotation' button. Click OK in the confirmation message and "
"then click 'Close'. Notice how all the '?' have been replaced with numbers. "
"Each identifier is now unique. In our example, they have been named 'R1', "
"'R2', 'U1', 'D1' and 'J1'."
msgstr ""
"'回路図のアノテーション' ウィンドウでは、 '全ての回路図、階層を使用' を選択"
"し、'アノテーション' ボタンをクリックします。確認のメッセージにOKをクリック"
"し、'閉じる' をクリックします。コンポーネントの全ての '?' が数字に置き換えら"
"れたことがわかります。各識別子はユニークです。私達の例では、 'R1' 、 'R2' 、 "
"'U1' 、 'D1' そして 'J1' と名付けられました。"

#. type: Plain text
#: getting_started_in_kicad.adoc:547
msgid ""
"We will now check our schematic for errors. Click on the 'Perform electrical "
"rules check' icon image:images/icons/erc.png[erc_png] on the top toolbar. "
"Click on the 'Run' button. A report informing you of any errors or warnings "
"such as disconnected wires is generated. You should have 0 Errors and 0 "
"Warnings. In case of errors or warnings, a small green arrow will appear on "
"the schematic in the position where the error or the warning is located. "
"Check 'Create ERC file report' and press the 'Run' button again to receive "
"more information about the errors."
msgstr ""
"ここで回路図のエラーをチェックします。トップツールバーの 'エレクトリカル ルー"
"ル チェックの実行' アイコン image:images/icons/erc.png[erc_png] をクリックし"
"ます。'実行' ボタンをクリックします。接続されていないワイヤ等のエラーや警告の"
"レポートが通知されます。エラー０、警告０にしましょう。エラーや警告がある場合"
"には、小さな緑色の矢印が回路図上のエラーや警告のある場所に表示されます 。より"
"エラーの情報を得るため 'ERCレポートファイルの生成' をチェックし、'実行' ボタ"
"ンを再度押します。"

#. type: Plain text
#: getting_started_in_kicad.adoc:551
msgid ""
"If you have a warning with \"No default editor found you must choose it\", "
"try setting the path to `c:\\windows\\notepad.exe` (windows) or `/usr/bin/"
"gedit` (Linux)."
msgstr ""
"もしも \"デフォルトのエディタが指定されていません。エディタを指定して下さ"
"い。\" のワーニングが出たなら、 `C:\\Windows\\notepad.exe` (Windows) か `/"
"usr/bin/gedit` (Linux) を設定してみてください。"

#. type: Plain text
#: getting_started_in_kicad.adoc:556
msgid ""
"The schematic is now finished. We can now create a Netlist file to which we "
"will add the footprint of each component. Click on the 'Generate netlist' "
"icon image:images/icons/netlist.png[netlist_png] on the top toolbar. Click "
"on the 'Generate' button and save under the default file name."
msgstr ""
"回路図は完成しました。これでコンポーネントに対応するフットプリントを付け足"
"す、ネットリストのファイルを作成することができるようになりました。トップツー"
"ルバーにある 'ネットリストの生成' のアイコン image:images/icons/netlist."
"png[netlist_png] をクリックします。'生成' をクリックし、デフォルトのファイル"
"名で '保存' をクリックします。"

#. type: Plain text
#: getting_started_in_kicad.adoc:561
msgid ""
"After generating the Netlist file, click on the 'Run Cvpcb' icon image:"
"images/icons/cvpcb.png[cvpcb_png] on the top toolbar. If a missing file "
"error window pops up, just ignore it and click OK."
msgstr ""
"ネットリストを生成したら、トップツールバーにある 'CvPcb(コンポーネントとフッ"
"トプリントの関連付け)を実行' のアイコン image:images/icons/cvpcb."
"png[icon_cvpcb_small_png] をクリックします。ファイルが存在しませんのエラーが"
"表示されたらOKをクリックします。"

#. missing image here?
#. type: Plain text
#: getting_started_in_kicad.adoc:568
msgid ""
"_Cvpcb_ allows you to link all the components in your schematic with "
"footprints in the KiCad library. The pane on the center shows all the "
"components used in your schematic. Here select 'D1'. In the pane on the "
"right you have all the available footprints, here scroll down to 'LEDs:"
"LED-5MM' and double click on it."
msgstr ""
"_CvPcb_ により、回路図の全てのコンポーネントに、KiCadライブラリ内のフットプリ"
"ントをリンクすることができます。左側のペインは回路図で使われている全てのコン"
"ポーネントを表示しています。まず 'D1' を選択します。右側のペインは全ての利用"
"可能なフットプリントを表示しています。ここでは 'LEDs:LED-5MM' までスクロール"
"ダウンして、それをダブルクリックします。"

#. type: Plain text
#: getting_started_in_kicad.adoc:576
msgid ""
"It is possible that the pane on the right shows only a selected subgroup of "
"available footprints. This is because KiCad is trying to suggest to you a "
"subset of suitable footprints. Click on the icons image:images/icons/"
"module_filtered_list.png[module_filtered_list_png], image:images/icons/"
"module_pin_filtered_list.png[module_pin_filtered_list_png] and image:images/"
"icons/module_library_list.png[module_library_list_png] to enable or disable "
"these filters."
msgstr ""
"右側のペインに、利用可能なフットプリントの内、選択されたサブグループだけを表"
"示することもできます。これはKiCadが適切なフットプリントだけをあなたに提示しよ"
"うとするためです。このフィルタを有効/無効するにはこれらのアイコン image:"
"images/icons/module_filtered_list.png[module_filtered_list_png] image:images/"
"icons/module_pin_filtered_list.png[module_pin_filtered_list_png] image:"
"images/icons/module_library_list.png[module_library_list_png] をクリックしま"
"す。"

#. type: Plain text
#: getting_started_in_kicad.adoc:580
msgid ""
"For 'IC1' select the 'Housings_DIP:DIP-8_W7.62mm' footprint.  For 'J1' "
"select the 'Connect:Banana_Jack_3Pin' footprint.  For 'R1' and 'R2' select "
"the 'Discret:R1' footprint."
msgstr ""
"'IC1' にはフットプリント 'Housings_DIP:DIP-8_W7.62mm' を選択します。 'J1' に"
"はフットプリント 'Connect:Banana_Jack_3Pin' を選択します。 'R1' と 'R2' には"
"フットプリント 'Discret:R1' footprint を選択します。"

#. type: Plain text
#: getting_started_in_kicad.adoc:591
msgid ""
"If you are interested in knowing what the footprint you are choosing looks "
"like, you have two options. You can click on the 'View selected footprint' "
"icon image:images/icons/show_footprint.png[show_footprint_png] for a preview "
"of the current footprint. Alternatively, click on the 'Display footprint "
"list documentation' icon image:images/icons/datasheet.png[datasheet_png] and "
"you will get a multi-page PDF document with all available footprints. You "
"can print it out and check your components to make sure that the dimensions "
"match."
msgstr ""
"選択したフットプリントがどんな風に見えるのかを知りたいなら2つの選択肢がありま"
"す。現在のフットプリントのプレビューには '選択したフットプリントを見る' のア"
"イコン image:images/icons/show_footprint.png[show_footprint_png] をクリックし"
"ます。あるいは 'フットプリントのドキュメントを表示' のアイコン image:images/"
"icons/datasheet.png[datasheet_png] をクリックすると、全ての利用可能なフットプ"
"リントのPDF文書が得られます。印刷して部品の寸法が適合することを確認できます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:600
msgid ""
"You are done. You can now update your netlist file with all the associated "
"footprints. Click on *File* -> **Save As**. The default name 'tutorial1.net' "
"is fine, click save. Otherwise you can use the icon image:images/icons/save."
"png[Save icon].  Your netlist file has now been updated with all the "
"footprints. Note that if you are missing the footprint of any device, you "
"will need to make your own footprints. This will be explained in a later "
"section of this document."
msgstr ""
"割り当てができました。これで全ての関連付けたフットプリントでもってネットリス"
"トのファイルを更新することができます。 *ファイル* -> **編集を保存** をクリッ"
"クします。デフォルトの 'tutorial1.net' のままで保存をクリックします。あるいは"
"アイコン image:images/icons/save.png[Save icon] も使えます。これでネットリス"
"トのファイルは全てフットプリントで更新されました。フットプリントのない部品が"
"ある場合、独自にフットプリントを作る必要があることに注意して下さい。このこと"
"についてはこの文書の後の章で説明されます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:604
msgid ""
"You can close _Cvpcb_ and go back to the _Eeschema_ schematic editor. Save "
"the project by clicking on *File* -> **Save Whole Schematic Project**. Close "
"the schematic editor."
msgstr ""
"_CvPcb_ を閉じて _Eeschema_ 回路図エディタに戻ります。 *ファイル* -> **回路図"
"プロジェクトの保存** をクリックしてプロジェクトを保存します。 Eeschema を閉じ"
"ます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:606
msgid "Switch to the KiCad project manager."
msgstr "KiCadプロジェクト・マネージャに切り替えます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:610
msgid ""
"The netlist file describes all components and their respective pin "
"connections. The netlist file is actually a text file that you can easily "
"inspect, edit or script."
msgstr ""
"ネットリストには、全てのコンポーネントとそのそれぞれのピン接続が記述されてい"
"ます。ネットリストはテキストファイルなので、容易に検査したり編集したり書いた"
"りすることができます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:613
msgid ""
"Library files (__*.lib__) are text files too and they are also easily "
"editable or scriptable."
msgstr ""
"ライブラリファイル (__*.lib__) もテキストファイルなので、同様に容易に編集した"
"り記述することができます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:620
msgid ""
"To create a Bill Of Materials (BOM), go to the _Eeschema_ schematic editor "
"and click on the 'Bill of materials' icon image:images/icons/bom."
"png[bom_png] on the top toolbar.  By default there is no plugin active. You "
"add one, by clicking on *Add Plugin* button. Select the *.xsl file you want "
"to use, in this case, we select __bom2csv.xsl__."
msgstr ""
"部品表 (BOM) を作成するには _Eeschema_ 回路図エディタを起動してトップツール"
"バーにある '部品表の生成' のアイコン image:images/icons/bom.png[bom_png] をク"
"リックします。デフォルトではプラグインは全て無効になっています。 *プラグイン"
"の追加* ボタンをクリックすることで追加することができます。使いたい *.xsl ファ"
"イルを選択します。この場合は __bom2csv.xsl__ を選択します。"

#. type: delimited block =
#: getting_started_in_kicad.adoc:625
msgid ""
"The *.xsl file is located in __plugins__ directory of the KiCad "
"installation, which is located at: /usr/lib/kicad/plugins/."
msgstr ""
"*.xsl ファイルは、KiCadをインストールしたディレクトリの __plugins__ にあり、"
"それは次の場所に位置します: /usr/lib/kicad/plugins/"

#. type: delimited block =
#: getting_started_in_kicad.adoc:627
msgid "Or get the file via:"
msgstr "または次のようにしてファイルを入手します:"

#. type: delimited block -
#: getting_started_in_kicad.adoc:629
#, no-wrap
msgid "wget https://raw.githubusercontent.com/KiCad/kicad-source-mirror/master/eeschema/plugins/bom2csv.xsl\n"
msgstr "wget https://raw.githubusercontent.com/KiCad/kicad-source-mirror/master/eeschema/plugins/bom2csv.xsl\n"

#. type: Block title
#: getting_started_in_kicad.adoc:632
#, no-wrap
msgid "KiCad automatically generates the command, for example:"
msgstr "KiCadは自動的にコマンドを生成します、例えばこのように:"

#. type: delimited block -
#: getting_started_in_kicad.adoc:635
#, no-wrap
msgid "xsltproc -o \"%O\" \"/home/<user>/kicad/eeschema/plugins/bom2csv.xsl\" \"%I\"\n"
msgstr "xsltproc -o \"%O\" \"/home/<user>/kicad/eeschema/plugins/bom2csv.xsl\" \"%I\"\n"

#. type: Block title
#: getting_started_in_kicad.adoc:637
#, no-wrap
msgid "You may want to add the extension, so change this command line to:"
msgstr "拡張子を与えたい場合、このコマンドラインを変更します:"

#. type: delimited block -
#: getting_started_in_kicad.adoc:640
#, no-wrap
msgid "xsltproc -o \"%O.csv\" \"/home/<user>/kicad/eeschema/plugins/bom2csv.xsl\" \"%I\"\n"
msgstr "xsltproc -o \"%O.csv\" \"/home/<user>/kicad/eeschema/plugins/bom2csv.xsl\" \"%I\"\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:643
msgid "Press Help button for more info."
msgstr "ヘルプボタンを押すことで更に情報が得られます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:647
msgid ""
"Now press 'Generate'. The file (same name as your project) is located in "
"your project folder.  Open the **.csv* file with LibreOffice Calc or Excel. "
"An import window will appear, press OK."
msgstr ""
"さあ '生成' を押してみましょう。ファイル(プロジェクトと同じ名前です)はプロ"
"ジェクトフォルダの中にあります。**.csv* ファイルを LibreOffice Calc か Excel "
"で開いてみましょう。インポートのウィンドウが表示されたらOKを押します。"

#. type: Plain text
#: getting_started_in_kicad.adoc:651
msgid ""
"You are now ready to move to the PCB layout part, which is presented in the "
"next section. However, before moving on let's take a quick look at how to "
"connect component pins using a bus line."
msgstr ""
"あなたはこれで次の章のPCBレイアウトのパートに進む準備ができました。ですが先に"
"進む前に、コンポーネントのピンをバスで接続する方法をさっと見ておきましょう。"

#. type: Title ===
#: getting_started_in_kicad.adoc:653
#, no-wrap
msgid "Bus connections in KiCad"
msgstr "KiCadでのバス接続"

#. type: Plain text
#: getting_started_in_kicad.adoc:659
msgid ""
"Sometimes you might need to connect several sequential pins of component A "
"with some other sequential pins of component B. In this case you have two "
"options: the labelling method we already saw or the use of a bus connection. "
"Let's see how to do it."
msgstr ""
"コンポーネントAの連続したピンと、別のコンポーネントBの連続したピンを接続しな"
"ければならないことがあります。この場合2つの選択肢があります: 私達が既に見てき"
"たラベルによる方法とバス接続です。どうするのか見てみましょう。"

#. type: Plain text
#: getting_started_in_kicad.adoc:666
msgid ""
"Let us suppose that you have three 4-pin connectors that you want to connect "
"together pin to pin. Use the label option (press the l key) to label pin 4 "
"of the P4 part. Name this label 'a1'. Now let's press the Ins key to have "
"the same item automatically added on the pin below pin 4 (PIN 3). Notice how "
"the label is automatically renamed 'a2'."
msgstr ""
"4ピンのコネクタが3つあり、ピン同士を接続したいのだと仮定しましょう。ラベルを"
"使って (\"l\" キーを押す) コネクタP4のピン4に 'a1' という名前のラベルを付けま"
"す。Ins キーを押して、ピン4の下のピン3に自動的に同様の処理を行います。ラベル"
"は自動的に 'a2' とリネームされます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:670
msgid ""
"Press the Ins Key two more times. The Ins key corresponds to the action "
"'Repeat last item' and it is an infinitely useful command that can make your "
"life a lot easier."
msgstr ""
"\"Insert\" キーを更に2回押してください。\"Insert\" キーは 'Repeat last item' "
"機能に対応しており、あなたの仕事を楽にしてくれるとても便利なコマンドです。"

#. type: Plain text
#: getting_started_in_kicad.adoc:681
msgid ""
"Repeat the same labelling action on the two other connectors CONN_2 and "
"CONN_3 and you are done. If you proceed and make a PCB you will see that the "
"three connectors are connected to each other. Figure 2 shows the result of "
"what we described. For aesthetic purposes it is also possible to add a "
"series of 'Place wire to bus entry' using the icon image:images/icons/"
"add_line2bus.png[Place wire to bus entry] and bus line using the icon image:"
"images/icons/add_bus2bus.png[Place bus to bus entry], as shown in Figure 3. "
"Mind, however, that there will be no effect on the PCB."
msgstr ""
"ラベル付け作業を他の2つのコネクタ CONN_2 と CONN_3 にも繰り返して終えました。"
"このまま進めてPCBを作成すると、3つのコネクタがお互い接続されていることでしょ"
"う。図2に説明したことが表されています。美しく見せるために、図3に示すよう、ア"
"イコン image:images/icons/add_line2bus.png[Place wire to bus entry] を使った"
"一連の 'ワイヤ-バスエントリを配置' と、アイコン image:images/icons/"
"add_bus2bus.png[Place bus to bus entry] を使ったバスラインを付け加えることも"
"可能です。PCBにはなんの影響もありませんが。"

#. type: Plain text
#: getting_started_in_kicad.adoc:685
msgid ""
"It should be pointed out that the short wire attached to the pins in Figure "
"2 is not strictly necessary. In fact, the labels could have been applied "
"directly to the pins."
msgstr ""
"図2の、ピンに接触している短いワイヤは厳密には不要であることを指摘しておきま"
"す。実際、ラベルはピンに直接付けることができるのでした。"

#. type: Plain text
#: getting_started_in_kicad.adoc:692
msgid ""
"Let's take it one step further and suppose that you have a fourth connector "
"named CONN_4 and, for whatever reason, its labelling happens to be a little "
"different (b1, b2, b3, b4). Now we want to connect _Bus a_ with _Bus b_ in a "
"pin to pin manner. We want to do that without using pin labelling (which is "
"also possible) but by instead using labelling on the bus line, with one "
"label per bus."
msgstr ""
"もう一歩進んで、4つ目のコネクタ CONN_4 を仮定します。何らかの理由により、その"
"ラベル付けは少し異なっています(b1, b2, b3, b4)。私達は _Bus a_ と _Bus b_ を"
"ピンとピンの方法で接続したいのです。ピンにラベル付けする方法(も可能ですが)は"
"使わずに、代わりに、バス毎に1ラベルで、バスラインにラベル付けする方法で実現し"
"たいわけです。"

#. type: Plain text
#: getting_started_in_kicad.adoc:699
msgid ""
"Connect and label CONN_4 using the labelling method explained before. Name "
"the pins b1, b2, b3 and b4. Connect the pin to a series of 'Wire to bus "
"entry' using the icon image:images/icons/add_line2bus.png[add_line2bus_png] "
"and to a bus line using the icon image:images/icons/add_bus."
"png[add_bus_png]. See Figure 4."
msgstr ""
"前に説明したラベル付けの方法を使って、CONN_4に接続してラベルを付けます。ピン"
"には  b1, b2, b3 そして b4 と名前を付けます。アイコン image:images/icons/"
"add_line2bus.png[add_line2bus_png] を使った一連の 'ワイヤ-バスエントリを配"
"置' と、アイコン image:images/icons/add_bus.png[add_bus_png] を使ったバスライ"
"ンに、ピンを接続します。図4を見て下さい。"

#. type: Plain text
#: getting_started_in_kicad.adoc:702
msgid ""
"Put a label (press the l key option) on the bus of CONN_4 and name it "
"'b[1..4]'."
msgstr ""
"CONN_4のバスにラベルを付けて(\"l\" キーを押して) 'b[1..4]' と名付けます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:705
msgid ""
"Put a label (press the l key option) on the previous a bus and name it "
"'a[1..4]'."
msgstr ""
"以前のバスにラベルを付けて(\"l\" キーを押して) 'a[1..4]' と名付けます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:708
msgid ""
"What we can now do is connect bus a[1..4] with bus b[1..4] using a bus line "
"with the button image:images/icons/add_bus.png[add_bus_png]."
msgstr ""
"これでボタン image:images/icons/add_bus.png[add_bus_png] を使って、バス"
"a[1..4]とバスb[1..4]を接続することでできるようになりました。"

#. type: Plain text
#: getting_started_in_kicad.adoc:712
msgid ""
"By connecting the two buses together, pin a1 will be automatically connected "
"to pin b1, a2 will be connected to b2 and so on. Figure 4 shows what the "
"final result looks like."
msgstr ""
"2つのバスを接続することで、ピンa1は自動的にピンb1に接続され、a2はb2に接続さ"
"れ、以下同様となります。図4は最終結果がどのように見えるか示しています。"

#. type: Plain text
#: getting_started_in_kicad.adoc:717
msgid ""
"The 'Repeat last item' option accessible via the Ins key can be successfully "
"used to repeat period item insertions. For instance, the short wires "
"connected to all pins in Figure 2, Figure 3 and Figure 4 have been placed "
"with this option."
msgstr ""
"\"Insert\" キーによる 'Repeat last item' 機能は、繰り返される周期的な作業にう"
"まく使うことができます。例えば、短いワイヤを全てのピンに接続する図2、図3、図"
"4 での作業はこの機能でできました。"

#. type: Plain text
#: getting_started_in_kicad.adoc:721
msgid ""
"The 'Repeat last item' option accessible via the Ins key has also been "
"extensively used to place the many series of 'Wire to bus entry' using the "
"icon image:images/icons/add_line2bus.png[add_line2bus_png]."
msgstr ""
"\"Insert\" キーによる 'Repeat last item' 機能は、アイコン image:images/icons/"
"add_line2bus.png[add_line2bus_png] を使っての、たくさんの連続した 'ワイヤ-バ"
"スエントリを配置' にも適用できます。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:722
#, no-wrap
msgid "images/gsik_bus_connection.png"
msgstr "images/gsik_bus_connection.png"

#. type: Title ==
#: getting_started_in_kicad.adoc:725
#, no-wrap
msgid "Layout printed circuit boards"
msgstr "プリント基板のレイアウト"

#. type: Plain text
#: getting_started_in_kicad.adoc:729
msgid ""
"It is now time to use the netlist file you generated to lay out the PCB.  "
"This is done with the _Pcbnew_ tool."
msgstr ""
"生成したネットリストのファイルを使ってPCBのレイアウトを行う時が来ました。これ"
"は _Pcbnew_ ツールで行います。"

#. type: Title ===
#: getting_started_in_kicad.adoc:731
#, no-wrap
msgid "Using Pcbnew"
msgstr "Pcbnew の使用"

#. type: Plain text
#: getting_started_in_kicad.adoc:737
msgid ""
"From the KiCad project manager, click on the 'Pcbnew' icon image:images/"
"icons/pcbnew.png[pcbnew_png]. The 'Pcbnew' window will open. If you get an "
"error message saying that a _*.kicad_pcb_ file does not exist and asks if "
"you want to create it, just click Yes."
msgstr ""
"KiCadプロジェクト・マネージャから 'Pcbnew' のアイコン image:images/icons/"
"pcbnew.png[pcbnew_png] をクリックします。 'Pcbnew' ウィンドウが開きます。 "
"「ボード _*.kicad_pcb_ は存在しません。新規作成しますか？」というエラーメッ"
"セージが出たら 'はい' をクリックします。"

#. type: Plain text
#: getting_started_in_kicad.adoc:741
msgid ""
"Begin by entering some schematic information. Click on the 'Page settings' "
"icon image:images/icons/sheetset.png[sheetset_png] on the top toolbar. Set "
"'paper size' as 'A4' and 'title' as 'Tutorial1'."
msgstr ""
"いくつか回路図情報を入力することから始めます。トップツールバーの 'ページ設"
"定' のアイコン image:images/icons/sheetset.png[sheetset_png] をクリックしま"
"す。'ページサイズ' を 'A4' に設定して、 'タイトル' を 'Tutorial 1' と設定しま"
"す。"

#. type: Plain text
#: getting_started_in_kicad.adoc:750
msgid ""
"It is a good idea to start by setting the *clearance* and the *minimum track "
"width* to those required by your PCB manufacturer. In general you can set "
"the clearance to '0.25' and the minimum track width to '0.25'. Click on the "
"*Design Rules* -> *Design Rules* menu. If it does not show already, click on "
"the 'Net Classes Editor' tab. Change the 'Clearance' field at the top of the "
"window to '0.25' and the 'Track Width' field to '0.25' as shown below. "
"Measurements here are in mm."
msgstr ""
"PCBメーカーが要求する *クリアランス* と *最少配線幅* に設定することから始める"
"のは良い考えです。一般的にクリアランスを '0.25' に、最少配線幅を '0.25' に設"
"定します。メニューの *デザインルール* -> *デザインルール* をクリックします。"
"もしまだ表示されていなければ 'ネットクラスエディタ' のタブをクリックします。"
"以下に示すように、ウィンドウの上部にある 'クリアランス' のフィールドを "
"'0.25' に、 '配線幅' のフィールドを '0.25' に変更します。ここでの寸法は mm で"
"す。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:751
#, no-wrap
msgid "images/design_rules.png"
msgstr "images/ja/design_rules.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:756
msgid ""
"Click on the 'Global Design Rules' tab and set 'Min track width' to 0.25'. "
"Click the OK button to commit your changes and close the Design Rules Editor "
"window."
msgstr ""
"'グローバルデザインルール' タブ上でクリックし、 '最小の配線幅' を '0.25' に設"
"定します。変更を確定するためOKボタンをクリックし、デザインルールエディタの"
"ウィンドウを閉じます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:762
msgid ""
"Now we will import the netlist file. Click on the 'Read Netlist' icon image:"
"images/icons/netlist.png[netlist_png] on the top toolbar. Click on the "
"'Browse Netlist Files' button, select 'tutorial1.net' in the File selection "
"dialogue, and click on 'Read Current Netlist'. Then click the 'Close' button."
msgstr ""
"さあネットリストのファイルをインポートしましょう。トップツールバーにある "
"'ネットリストの読込み' アイコン image:images/icons/netlist.png[netlist_png] "
"をクリックします。'ネットリストファイルを参照する' ボタンをクリックし、選択ダ"
"イアログの中で 'tutorial1.net' を選択し、 '現在のネットリストを読み込む' をク"
"リックします。その後、'閉じる' ボタンをクリックします。"

#. type: Plain text
#: getting_started_in_kicad.adoc:765
msgid ""
"All components should now be visible in the top left hand corner just above "
"the page. Scroll up if you cannot see them."
msgstr ""
"全てのコンポーネントはページ上の左上隅に表示されるはずです。見えない場合には"
"スクロールアップしましょう。"

#. type: Plain text
#: getting_started_in_kicad.adoc:769
msgid ""
"Select all components with the mouse and move them to the middle of the "
"board. If necessary you can zoom in and out while you move the components."
msgstr ""
"マウスで全てのコンポーネントを選択して基板の中央に移動します。必要であれば、"
"コンポーネントの移動中にズームインやズームアウトすることができます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:775
msgid ""
"All components are connected via a thin group of wires called __ratsnest__. "
"Make sure that the 'Hide board ratsnest' button image:images/icons/"
"general_ratsnest.png[general_ratsnest_png] is pressed. In this way you can "
"see the ratsnest linking all components."
msgstr ""
"全てのコンポーネントは __ラッツネスト__ と呼ばれる細いワイヤで接続されていま"
"す。'ボードのラッツネストを非表示' のボタン image:images/icons/"
"general_ratsnest.png[general_ratsnest_png] が押されていることを確認します。 "
"これでラッツネストが全てのコンポーネントをつないでいるのが見えます。 "

#. type: Plain text
#: getting_started_in_kicad.adoc:778
msgid ""
"The tool-tip is backwards; pressing this button actually displays the "
"ratsnest."
msgstr ""
"ツールチップは逆を示します; このボタンを押すことでラッツネストを表示します。"

#. type: Plain text
#: getting_started_in_kicad.adoc:782
msgid ""
"You can move each component by hovering over it and pressing the g key. "
"Click where you want to place them. Move all components around until you "
"minimise the number of wire crossovers."
msgstr ""
"コンポーネントにマウスカーソルを置いて \"g\" キーを押すことで移動することがで"
"きます。配置したい所でクリックします。配線の交差数が最少になるまで全てのコン"
"ポーネントを移動します。"

#. type: Plain text
#: getting_started_in_kicad.adoc:787
msgid ""
"If instead of grabbing the components (with the g key ) you move them around "
"using the m key you will later note that you lose the track connection (the "
"same occurs in the schematic editor). Bottom line, always use the g key "
"option."
msgstr ""
"コンポーネントを掴む(\"g\" キーで)代わりに \"m\" キーを使って移動すると接続が"
"失われることに注意しましょう(同じことが Eeschema でもおきます)。要するに、い"
"つでも \"g\" キーを使いましょう。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:788
#, no-wrap
msgid "images/gsik_tutorial1_080.png"
msgstr "images/gsik_tutorial1_080.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:796
msgid ""
"If the ratsnest disappears or the screen gets messy, right click and click "
"'Redraw view'. Note how one pin of the 100 ohm resistor is connected to pin "
"6 of the PIC component. This is the result of the labelling method used to "
"connect pins. Labels are often preferred to actual wires because they make "
"the schematic much less messy."
msgstr ""
"ラッツネストが消えたり画面が乱れてきた場合には、右クリックして 'ビューの再描"
"画' をクリックします。どのように100Ωの抵抗器のピンがPICコンポーネントのピン6"
"に接続されているかに注意しましょう。これがピンを接続するのに使ったラベル付け"
"の結果です。ラベルは実際のワイヤより好まれます。実際のワイヤは回路図を乱雑に"
"するからです。"

#. type: Plain text
#: getting_started_in_kicad.adoc:804
msgid ""
"Now we will define the edge of the PCB. Select 'Edge.Cuts' from the drop-"
"down menu in the top toolbar. Click on the 'Add graphic line or polygon' "
"icon image:images/icons/add_dashed_line.png[add_dashed_line_png] on the "
"right toolbar. Trace around the edge of the board, clicking at each corner, "
"and remember to leave a small gap between the edge of the green and the edge "
"of the PCB."
msgstr ""
"PCBの外形を定義しましょう。トップツールバーのドロップダウンメニューから "
"'Edge.Cuts' を選択します。右ツールバーにある '図形ライン（またはポリゴン）を"
"入力' のアイコン image:images/icons/add_dashed_line.png[add_dashed_line_png] "
"をクリックします。基板の各コーナーをクリックして基板外形をトレースします。緑"
"色端部とPCBの端部の間には小さな隙間を残すことを覚えておきましょう。"

#. type: Plain text
#: getting_started_in_kicad.adoc:808
msgid ""
"Next, connect up all the wires except GND. In fact, we will connect all GND "
"connections in one go using a ground plane placed on the bottom copper "
"(called __B.Cu__) of the board."
msgstr ""
"次にGNDを除く全てのワイヤを接続してしまいましょう。実際の所、全てのGNDの接続"
"は、基板の底部の銅箔面( __B.Cu__ と呼ばれます)に配置されたグランドプレーンを"
"使って一気に行います。"

#. type: Plain text
#: getting_started_in_kicad.adoc:812
msgid ""
"Now we must choose which copper layer we want to work on. Select 'F.Cu "
"(PgUp)' in the drop-down menu on the top toolbar. This is the front top "
"copper layer."
msgstr ""
"私達はどの銅のレイヤで作業するかを選ばねばなりません。トップツールバーにある"
"ドロップダウンメニューの 'F.Cu (\"PgUp\" キー)' を選択します。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:813
#, no-wrap
msgid "images/select_top_copper.png"
msgstr "images/ja/select_top_copper.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:820
msgid ""
"If you decide, for instance, to do a 4 layer PCB instead, go to *Design "
"Rules* -> *Layers Setup* and change 'Copper Layers' to 4. In the 'Layers' "
"table you can name layers and decide what they can be used for.  Notice that "
"there are very useful presets that can be selected via the 'Preset Layer "
"Groupings' menu."
msgstr ""
"例えば 4層PCBで行くと決定したならば、 *デザインルール* -> *レイヤのセットアッ"
"プ* を開いて '銅のレイヤ数' を4に変更します。 'レイヤ' の表ではレイヤに名前を"
"付けられ、それらを何に使うのかを決定することができます。 'プリセットレイヤの"
"グループ' メニューで、便利なプリセットが選択できることを覚えておきましょう。"

#. type: Plain text
#: getting_started_in_kicad.adoc:828
msgid ""
"Click on the 'Add Tracks and vias' icon image:images/icons/add_tracks."
"png[add_tracks_png] on the right toolbar. Click on pin 1 of 'J1' and run a "
"track to pad 'R2'. Double-click to set the point where the track will end. "
"The width of this track will be the default 0.250 mm. You can change the "
"track width from the drop-down menu in the top toolbar. Mind that by default "
"you have only one track width available."
msgstr ""
"右ツールバーにある '配線とビアの追加' のアイコン image:images/icons/"
"add_tracks.png[add_tracks_png] をクリックします。 'J1' のピン１をクリックし"
"パッド 'R2' への配線を引きます。配線の終点を設定するため、ダブルクリックしま"
"す。この配線の幅はデフォルトで0.250mmです。トップツールバーのドロップダウンメ"
"ニューから配線幅を変更できます。デフォルトではただ一つの配線幅が利用できるこ"
"とに気付いてください。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:829
#, no-wrap
msgid "images/pcbnew_select_track_width.png"
msgstr "images/ja/pcbnew_select_track_width.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:836
msgid ""
"If you would like to add more track widths go to: *Design Rules* -> *Design "
"Rules* -> *Global Design Rules* tab and at the bottom right of this window "
"add any other width you would like to have available. You can then choose "
"the widths of the track from the drop-down menu while you lay out your "
"board. See the example below (inches)."
msgstr ""
"もっと配線幅を追加したい場合: *デザインルール* -> *デザインルール* -> *グロー"
"バルデザインルール* タブを表示し、このウィンドウの右下で利用したい配線幅を追"
"加します。これで基板のレイアウトの時にドロップダウンメニューから配線幅を選ぶ"
"ことができるようになります。以下の例(インチ単位)をご覧下さい。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:837
#, no-wrap
msgid "images/custom_tracks_width.png"
msgstr "images/ja/custom_tracks_width.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:845
msgid ""
"Alternatively, you can add a Net Class in which you specify a set of "
"options. Go to *Design Rules* -> *Design Rules* -> *Net Classes Editor* and "
"add a new class called 'power'. Change the track width from 8 mil (indicated "
"as 0.0080) to 24 mil (indicated as 0.0240). Next, add everything but ground "
"to the 'power' class (select 'default' at left and 'power' at right and use "
"the arrows)."
msgstr ""
"あるいは、指定したオプションのセットの中でネットクラスを追加することができま"
"す。 *デザインルール* -> *デザインルール* -> *ネットクラスエディタ* を表示し"
"て 'power' という新しいクラスを追加します。配線幅を8ミル(0.0080と表示)から24"
"ミル(0.0240と表示)に変更します。次に 'power' クラスにGND以外の全てを追加しま"
"す(左で 'default' を選び、右で 'power' を選び、矢印を使います)。"

#. type: Plain text
#: getting_started_in_kicad.adoc:849
msgid ""
"If you want to change the grid size, *Right click* -> **Grid Select**. Be "
"sure to select the appropriate grid size before or after laying down the "
"components and connecting them together with tracks."
msgstr ""
"グリッドサイズを変更したい場合は *右クリック* -> **グリッドの選択** です。コ"
"ンポーネントを配置して配線で接続する前か後に、最適なグリッドサイズを選択して"
"下さい。"

#. type: Plain text
#: getting_started_in_kicad.adoc:852
msgid ""
"Repeat this process until all wires, except pin 3 of J1, are connected. Your "
"board should look like the example below."
msgstr ""
"J1のピン3を除く全ての配線が接続されるまで、この作業を繰り返します。あなたの基"
"板は以下の例のようになるでしょう。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:853
#, no-wrap
msgid "images/gsik_tutorial1_090.png"
msgstr "images/gsik_tutorial1_090.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:862
msgid ""
"Let's now run a track on the other copper side of the PCB. Select 'B.Cu' in "
"the drop-down menu on the top toolbar. Click on the 'Add tracks and vias' "
"icon image:images/icons/add_tracks.png[add_tracks_png]. Draw a track between "
"pin 3 of J1 and pin 8 of U1. This is actually not necessary since we could "
"do this with the ground plane. Notice how the colour of the track has "
"changed."
msgstr ""
"PCBの他の銅箔面側での配線を行いましょう。トップツールバーにあるドロップダウン"
"メニューで 'B.Cu(\"PgDn\" キー)' を選択します。 '配線とビアの追加' のアイコ"
"ン image:images/icons/add_tracks.png[add_tracks_png] をクリックします。J1のピ"
"ン3とU1のピン8の間の配線を行います。実際の所、グラウンドプレーンですませるの"
"でこの配線は必要ではありません。配線の色が変わっていることに注意しましょう。"

#. type: Plain text
#: getting_started_in_kicad.adoc:869
#, no-wrap
msgid ""
"**Go from pin A to pin B by changing layer**. It is possible to\n"
"change the copper plane while you are running a track by placing a\n"
"via.  While you are running a track on the upper copper plane,\n"
"right click and select 'Place Via' or simply press the v key. This\n"
"will take you to the bottom layer where you can complete your\n"
"track.\n"
msgstr ""
"**レイヤの変更によってピンAからピンBに行きましょう。** \n"
"ビアを配置することで、配線をしている銅プレーンを変更することが可能です。\n"
"上面の銅プレーンに配線している時に、\n"
"右クリックして '貫通ビアの配置' を選択するか\n"
"単に \"v\" キーを押します。\n"
"これにより配線を終えた所で底面のレイヤに行くことができます。\n"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:870
#, no-wrap
msgid "images/place_a_via.png"
msgstr "images/ja/place_a_via.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:877
msgid ""
"When you want to inspect a particular connection you can click on the 'Net "
"highlight' icon image:images/icons/net_highlight.png[net_highlight_png] on "
"the right toolbar.  Click on pin 3 of J1. The track itself and all pads "
"connected to it should become highlighted."
msgstr ""
"特定の接続を検査したい場合には右ツールバーにある 'ネットをハイライト' のアイ"
"コン image:images/icons/net_highlight.png[net_highlight_png] をクリックしま"
"す。J1のピン3をクリックします。配線そのものとそれに接続されている全てのパッド"
"がハイライトされるでしょう。"

#. type: Plain text
#: getting_started_in_kicad.adoc:885
msgid ""
"Now we will make a ground plane that will be connected to all GND pins. "
"Click on the 'Add Zones' icon image:images/icons/add_zone.png[add_zone_png] "
"on the right toolbar. We are going to trace a rectangle around the board, so "
"click where you want one of the corners to be. In the dialogue that appears, "
"set 'Pad in Zone' to 'Thermal relief' and 'Zone edges orient' to 'H,V' and "
"click OK."
msgstr ""
"全てのGNDピンに接続されるグランドプレーンを作りましょう。右ツールバーにある "
"'塗りつぶしゾーンの追加' のアイコン image:images/icons/add_zone."
"png[add_zone_png] をクリックします。基板の周囲に長方形を描くつもりで、想定す"
"るコーナーの１つをクリックします。表示されたダイアログの中で、 'パッド接続' "
"を 'サーマルリリーフ' に、'外枠の角度' を '任意角度' に設定してOKをクリックし"
"ます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:890
msgid ""
"Trace around the outline of the board by clicking each corner in rotation. "
"Double-click to finish your rectangle. Right click inside the area you have "
"just traced. Click on 'Fill or Refill All Zones'. The board should fill in "
"with green and look something like this:"
msgstr ""
"順番にそれぞれのコーナーでクリックして基板の外形を描きます。ダブルクリックで"
"長方形を完成させます。描いた領域の内側で右クリックします。 '全てのゾーンを塗"
"りつぶす' をクリックすると、基板は緑色に塗りつぶされ、このように見えるでしょ"
"う。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:891
#, no-wrap
msgid "images/gsik_tutorial1_100.png"
msgstr "images/gsik_tutorial1_100.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:898
msgid ""
"Run the design rules checker by clicking on the 'Perform Design Rules Check' "
"icon image:images/icons/drc.png[drc_png] on the top toolbar.  Click on "
"'Start DRC'. There should be no errors. Click on 'List Unconnected'. There "
"should be no unconnected track. Click OK to close the DRC Control dialogue."
msgstr ""
"トップツールバーにある 'デザインルールチェックの実行' のアイコン image:"
"images/icons/drc.png[erc_png] をクリックして、デザインルールチェックを実行し"
"ます。 'DRCの起動' をクリックします。 エラーはないはずです。 '未結線情報の一"
"覧' をクリックします。未接続はないはずです。OKをクリックしてDRCのウィンドウを"
"閉じます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:901
msgid ""
"Save your file by clicking on *File* -> **Save**. To admire your board in "
"3D, click on *View* -> **3D Viewer**."
msgstr ""
"*ファイル* -> **保存** をクリックしてファイルを保存します。3Dで基板を閲覧する"
"ためには *表示* -> **3D ビューア** をクリックします。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:902
#, no-wrap
msgid "images/pcbnew_3d_viewer.png"
msgstr "images/pcbnew_3d_viewer.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:905
msgid "You can drag your mouse around to rotate the PCB."
msgstr "PCBの周囲でマウスをドラッグしてPCBを回転させることができます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:908
msgid ""
"Your board is complete. To send it off to a manufacturer you will need to "
"generate all Gerber files."
msgstr ""
"基板はこれで完成です。メーカーに送るためにはガーバーファイルを生成する必要が"
"あります。"

#. type: Title ===
#: getting_started_in_kicad.adoc:910
#, no-wrap
msgid "Generate Gerber files"
msgstr "ガーバーファイルの生成"

#. type: Plain text
#: getting_started_in_kicad.adoc:915
msgid ""
"Once your PCB is complete, you can generate Gerber files for each layer and "
"send them to your favourite PCB manufacturer, who will make the board for "
"you."
msgstr ""
"PCBが完成したら、全てのレイヤのガーバーファイルを生成して、基板を製造してくれ"
"るあなたのお好みのPCBメーカーに送ることができます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:919
msgid ""
"From KiCad, open the _Pcbnew_ software tool and load your board file by "
"clicking on the icon image:images/icons/open_document.png[open_document_png]."
msgstr ""
"KiCadから _Pcbnew_ ツールを開き、アイコン image:images/icons/open_document."
"png[open_document_png] をクリックして基板のファイルを読み込みます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:923
msgid ""
"Click on *File* -> **Plot**. Select 'Gerber' as the 'Plot Format' and select "
"the folder in which to put all Gerber files.  Proceed by clicking on the "
"'Plot' button."
msgstr ""
"*ファイル* -> **プロット** をクリックします。 '出力フォーマット' として 'ガー"
"バー' を選択し、ガーバーファイルを保存するフォルダを選択します。 '製造ファイ"
"ル出力' ボタンを押して出力します。"

#. type: Plain text
#: getting_started_in_kicad.adoc:926
msgid ""
"These are the layers you need to select for making a typical 2-layer PCB:"
msgstr "これらは典型的な2層PCBを製造するために選択する必要があるレイヤです:"

#. type: delimited block |
#: getting_started_in_kicad.adoc:937
#, no-wrap
msgid ""
"|Layer |KiCad Layer Name |Old KiCad Layer Name |Default Gerber Extension\n"
"    |\"Use Protel filename extensions\" is enabled\n"
"|Bottom Layer |B.Cu |Copper |.GBR |.GBL\n"
"|Top Layer |F.Cu |Component |.GBR |.GTL\n"
"|Top Overlay |F.SilkS |SilkS_Cmp |.GBR |.GTO\n"
"|Bottom Solder Resist |B.Mask |Mask_Cop |.GBR |.GBS\n"
"|Top Solder Resist |F.Mask |Mask_Cmp |.GBR |.GTS\n"
"|Edges |Edge.Cuts |Edges_Pcb |.GBR |.GM1\n"
msgstr ""
"|レイヤ |KiCadレイヤ名 |旧KiCadレイヤ名 |デフォルトの拡張子\n"
"    |\"Protelの拡張子を使用する\" がチェックされている時\n"
"|裏面導体レイヤ |B.Cu |Copper |.GBR |.GBL\n"
"|表面導体レイヤ |F.Cu |Component |.GBR |.GTL\n"
"|表面シルクスクリーン |F.SilkS |SilkS_Cmp |.GBR |.GTO\n"
"|裏面ソルダマスク |B.Mask |Mask_Cop |.GBR |.GBS\n"
"|表面ソルダマスク |F.Mask |Mask_Cmp |.GBR |.GTS\n"
"|基板外形 |Edge.Cuts |Edges_Pcb |.GBR |.GM1\n"

#. type: Title ===
#: getting_started_in_kicad.adoc:940
#, no-wrap
msgid "Using GerbView"
msgstr "GerbView の使用"

#. type: Plain text
#: getting_started_in_kicad.adoc:949
msgid ""
"To view all your Gerber files go to the KiCad project manager and click on "
"the 'GerbView' icon.  On the drop-down menu select 'Layer 1'. Click on "
"*File* -> *Load Gerber file* or click on the icon image:images/icons/"
"gerber_file.png[gerber_file_png]. Load all generated Gerber files one at a "
"time. Note how they all get displayed one on top of the other."
msgstr ""
"全てのガーバーファイルを見るためにはKiCadプロジェクト・マネージャ上で "
"'GerbView' アイコンをクリックします。ドロップダウンメニューで 'Layer 1' を選"
"択します。 *ファイル* -> *ガーバーファイルを読み込む* をクリックするか、アイ"
"コン image:images/icons/gerber_file.png[gerber_file_png] をクリックします。生"
"成された全てのガーバーファイルを一つずつ読み込みます。それら全てが積み重なっ"
"て表示されることに注意しましょう。"

#. type: Plain text
#: getting_started_in_kicad.adoc:952
msgid ""
"Use the menu on the right to select/deselect which layer to show.  Carefully "
"inspect each layer before sending them for production."
msgstr ""
"どのレイヤを表示するかの選択/非選択を右側のメニューで行います。メーカーに送る"
"前に注意深く全てのレイヤを検査しましょう。"

#. type: Plain text
#: getting_started_in_kicad.adoc:955
msgid ""
"To generate the drill file, from _Pcbnew_ go again to the *File* -> *Plot* "
"option. Default settings should be fine."
msgstr ""
"ドリルファイルを生成するには、 _Pcbnew_ から *ファイル* -> *プロット* を再び"
"行います。デフォルトの設定でよいでしょう。"

#. type: Title ===
#: getting_started_in_kicad.adoc:957
#, no-wrap
msgid "Automatically route with FreeRouter"
msgstr "Freerouterによる自動配線"

#. type: Plain text
#: getting_started_in_kicad.adoc:965
msgid ""
"Routing a board by hand is quick and fun, however, for a board with lots of "
"components you might want to use an autorouter. Remember that you should "
"first route critical traces by hand and then set the autorouter to do the "
"boring bits. Its work will only account for the unrouted traces. The "
"autorouter we will use here is FreeRouter from __freerouting.net__."
msgstr ""
"基板の手配線は手早くて楽しいですが、大量のコンポーネントを含む基板の場合には"
"自動配線を使いたくなるかもしれません。最初に重要な配線を手で行ってから、退屈"
"な仕事をさせるために自動配線をセットするということを覚えておきましょう。その"
"仕事は未配線についてのみ応えてくれます。ここで私達が使う自動配線は "
"__freerouting.net__ のFreerouterです。"

#. type: Plain text
#: getting_started_in_kicad.adoc:970
msgid ""
"Freerouter is an open source java application, and it is needed to build by "
"yourself to use with KiCad.  Source code of Freerouter can be found on this "
"site: https://github.com/nikropht/FreeRouting"
msgstr ""
"Freerouter はオープンソースの java アプリケーションで、KiCadと使うためには自"
"分でビルドする必要があります。Freerouter のソースコードはこのサイトにありま"
"す: https://github.com/nikropht/FreeRouting"

#. type: Plain text
#: getting_started_in_kicad.adoc:976
msgid ""
"From _Pcbnew_ click on *File* -> *Export* -> *Specctra DSN* or click on "
"*Tools* -> *FreeRoute* -> **Export a Specctra Design (*.dsn) file** and save "
"the file locally.  Launch FreeRouter and click on the 'Open Your Own Design' "
"button, browse for the _dsn_ file and load it."
msgstr ""
"_Pcbnew_ から *ファイル* -> *エクスポート* -> *Specctra DSNファイル* をクリッ"
"クするか、*ツール* -> *FreeRoute* -> **現在のボードを”Specctra DSN”ファイルへ"
"エクスポート** をクリックするかしてローカルにファイルを保存します。 "
"Freerouter を起動して 'Open Your Own Design' ボタンをクリックし、 _dsn_ ファ"
"イルを選んで読み込ませます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:981
msgid ""
"The *Tools* -> *FreeRoute* dialog has a nice help button that opens a file "
"viewer with a little document inside named **Freerouter Guidelines**. Please "
"follow these guidelines to use FreeRoute effectively."
msgstr ""
"*ツール* -> *FreeRoute* ウィンドウには素晴らしいヘルプボタンがあり、ファイル"
"ビューアで **Freerouter Guidelines** という小さなドキュメントを開いてくれま"
"す。 Freerouter を効果的に使うためにこのガイドラインに従いましょう。"

#. type: Plain text
#: getting_started_in_kicad.adoc:987
msgid ""
"FreeRouter has some features that KiCad does not currently have, both for "
"manual routing and for automatic routing. FreeRouter operates in two main "
"steps: first, routing the board and then optimising it. Full optimisation "
"can take a long time, however you can stop it at any time need be."
msgstr ""
"Freerouterは、手配線と自動配線の両方で、KiCadが現時点で持っていない特徴を持っ"
"ています。Freerouterは2つの主要なステップで操作します: 最初に基板に配線を行"
"い、次にそれを最適化します。完全最適化には時間がかかるかもしれませんが、いつ"
"でも必要なら停止することができます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:995
msgid ""
"You can start the automatic routing by clicking on the 'Autorouter' button "
"on the top bar. The bottom bar gives you information about the on-going "
"routing process. If the 'Pass' count gets above 30, your board probably can "
"not be autorouted with this router. Spread your components out more or "
"rotate them better and try again. The goal in rotation and position of parts "
"is to lower the number of crossed airlines in the ratsnest."
msgstr ""
"トップバーにある 'Autorouter' ボタンをクリックすることで自動配線を開始できま"
"す。下部のバーは実行中の配線作業の情報を知らせてくれます。もしも 'Pass' カウ"
"ントが30以上になったら、あなたの基板はおそらくこのルーターでは自動配線できな"
"いでしょう。コンポーネント間隔をもっと広げたり良い向きに回転させてから再挑戦"
"しましょう。部品の回転と位置決めのゴールは、ラッツネストの空中交差の数を少な"
"くすることです。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1000
msgid ""
"Making a left-click on the mouse can stop the automatic routing and "
"automatically start the optimisation process. Another left-click will stop "
"the optimisation process. Unless you really need to stop, it is better to "
"let FreeRouter finish its job."
msgstr ""
"マウスの左クリックにより、自動配線を停止して最適化プロセスを自動的に開始させ"
"ることができます。もう一度左クリックすると、最適化プロセスが停止します。停止"
"する必要がないのであれば、Freerouterが仕事を終えるのに任せるのが良いでしょ"
"う。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1004
msgid ""
"Click on the *File* -> *Export Specctra Session File* menu and save the "
"board file with the _.ses_ extension. You do not really need to save the "
"FreeRouter rules file."
msgstr ""
"*File* -> *Export Specctra Session File* メニューをクリックして基板ファイル"
"を _.ses_ 拡張子で保存します。Freerouter ルールファイルは保存する必要がありま"
"せん。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1009
msgid ""
"Back to __Pcbnew__. You can import your freshly routed board by clicking on "
"the link *Tools* -> *FreeRoute* and then on the icon 'Back Import the "
"Spectra Session (.ses) File' and selecting your _.ses_ file."
msgstr ""
"__Pcbnew__ に戻りましょう。*ツール* -> *FreeRoute* をクリックし、 'スペクト"
"ラ・セッション ファイル (.ses) のバックインポート' ボタンをクリックして _."
"ses_ ファイルを選択し、新たに配線された基板をインポートします。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1014
msgid ""
"If there is any routed trace that you do not like, you can delete it and re-"
"route it again, using the del key and the routing tool, which is the 'Add "
"tracks' icon image:images/icons/add_tracks.png[Add Track icon] on the right "
"toolbar."
msgstr ""
"もし気に入らない配線があれば、配線を削除して再配線できます。\"Delete\" キー"
"と、右ツールバーにある '配線とビアの追加' のアイコン image:images/icons/"
"add_tracks.png[Add Track icon] の配線ツールを使いましょう。"

#. type: Title ==
#: getting_started_in_kicad.adoc:1016
#, no-wrap
msgid "Forward annotation in KiCad"
msgstr "KiCadの前方向アノテーション"

#. type: Plain text
#: getting_started_in_kicad.adoc:1022
msgid ""
"Once you have completed your electronic schematic, the footprint assignment, "
"the board layout and generated the Gerber files, you are ready to send "
"everything to a PCB manufacturer so that your board can become reality."
msgstr ""
"電子回路図、フットプリントの割り当て、基板レイアウト、ガーバーファイルの生成"
"を完了したら、基板を現実のものとするために、PCBメーカーに全てを送る準備ができ"
"ました。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1030
msgid ""
"Often, this linear work-flow turns out to be not so uni-directional. For "
"instance, when you have to modify/extend a board for which you or others "
"have already completed this work-flow, it is possible that you need to move "
"components around, replace them with others, change footprints and much "
"more. During this modification process, what you do not want to do is to re-"
"route the whole board again from scratch. Instead, this is how you do it:"
msgstr ""
"しばしば、この線形の作業の流れは一方向ではなくなります。例えば、既にこの作業"
"の流れを完了していたはずの基板を変更/拡張しなければならない時ですが、あなた"
"は、部品を動かしたり、他のものと入れ替えたり、部品を変更したり、等々する必要"
"が起こりえます。この変更の作業の中で、あなたがやりたくないことは基板全体を一"
"から配線し直すことでしょう。代わりにこのようにすべきです:"

#. type: Plain text
#: getting_started_in_kicad.adoc:1033
msgid ""
"Let's suppose that you want to replace a hypothetical connector CON1 with "
"CON2."
msgstr "仮想的なコネクタのCON1をCON2と入れ替えたいと想定しましょう。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1035
msgid "You already have a completed schematic and a fully routed PCB."
msgstr "あなたは既に完成した回路図と配線を終えたPCBを持っています。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1041
msgid ""
"From KiCad, start __Eeschema__, make your modifications by deleting CON1 and "
"adding CON2. Save your schematic project with the icon image:images/icons/"
"save.png[Save icon] and c lick on the 'Netlist generation' icon image:images/"
"icons/netlist.png[netlist_png] on the top toolbar."
msgstr ""
"KiCadから __Eeschema__ を起動して、CON1を削除しCON2を追加して変更を行います。"
"アイコン image:images/icons/save.png[Save icon] で回路図プロジェクトを保存し"
"て、トップツールバーにある 'ネットリストの生成' のアイコン image:images/"
"icons/netlist.png[netlist_png] をクリックします。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1044
msgid ""
"Click on 'Netlist' then on 'save'. Save to the default file name.  You have "
"to rewrite the old one."
msgstr ""
"'ネットリスト' をクリックし '保存' します。デフォルトのファイル名で保存しま"
"しょう。古いファイルを上書きします。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1050
msgid ""
"Now assign a footprint to CON2. Click on the 'Run Cvpcb' icon image:images/"
"icons/cvpcb.png[cvpcb] on the top toolbar. Assign the footprint to the new "
"device CON2. The rest of the components still have the previous footprints "
"assigned to them. Close __Cvpcb__."
msgstr ""
"CON2にフットプリントを割り当てます。トップツールバーにある 'CvPcb(コンポーネ"
"ントとフットプリントの関連付け)を実行' のアイコン image:images/icons/cvpcb."
"png[cvpcb_png] をクリックします。新しいデバイスのCON2にフットプリントを割り当"
"てます。残りのコンポーネントは以前に割り当てたフットプリントのままです。 "
"__CvPcb__ を閉じます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1053
msgid ""
"Back in the schematic editor, save the project by clicking on 'File' -> "
"'Save Whole Schematic Project'. Close the schematic editor."
msgstr ""
"Eeschema に戻り、 'ファイル' -> '回路図プロジェクトの保存' をクリックしてプロ"
"ジェクトを保存します。 Eeschema を閉じます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1056
msgid ""
"From the KiCad project manager, click on the 'Pcbnew' icon. The 'Pcbnew' "
"window will open."
msgstr ""
"KiCadプロジェクト・マネージャから 'Pcbnew' のアイコンをクリックします。 "
"'Pcbnew' のウィンドウが開きます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1060
msgid ""
"The old, already routed, board should automatically open. Let's import the "
"new netlist file. Click on the 'Read Netlist' icon image:images/icons/"
"netlist.png[netlist_png] on the top toolbar."
msgstr ""
"古い、配線済みの基板が自動的に開きます。新しいネットリストファイルをインポー"
"トしましょう。トップツールバーにある 'ネットリストの読込み' のアイコン image:"
"images/icons/netlist.png[netlist_png] をクリックします。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1064
msgid ""
"Click on the 'Browse Netlist Files' button, select the netlist file in the "
"file selection dialogue, and click on 'Read Current Netlist'.  Then click "
"the 'Close' button."
msgstr ""
"'ネットリストファイルを参照する' ボタンをクリックして、ネットリストファイルを"
"選択し、 '現在のネットリストを読み込む' をクリックします。そして '閉じる' ボ"
"タンをクリックします。 "

#. type: Plain text
#: getting_started_in_kicad.adoc:1069
msgid ""
"At this point you should be able to see a layout with all previous "
"components already routed. On the top left corner you should see all "
"unrouted components, in our case the CON2. Select CON2 with the mouse.  Move "
"the component to the middle of the board."
msgstr ""
"この時点で、以前の全ての部品が配線済みのレイアウトが見られます。左上の隅に全"
"ての未配線の部品、今回の例ではCON2が見えるでしょう。マウスでCON2を選択しま"
"す。基板の中央まで移動しましょう。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1072
msgid ""
"Place CON2 and route it. Once done, save and proceed with the Gerber file "
"generation as usual."
msgstr ""
"CON2を配置して配線します。完了したらいつものように保存してガーバーファイルの"
"生成をしましょう。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1080
msgid ""
"The process described here can easily be repeated as many times as you need. "
"Beside the Forward Annotation method described above, there is another "
"method known as Backward Annotation. This method allows you to make "
"modifications to your already routed PCB from Pcbnew and updates those "
"modifications in your schematic and netlist file. The Backward Annotation "
"method, however, is not that useful and is therefore not described here."
msgstr ""
"ここに書いた手順は必要に応じて何度でも容易に繰り返すことが可能です。上述した"
"前方向アノテーションとは別に、後方向アノテーションとして知られる別の方法があ"
"ります。この方法はPcbnewで配線済みにした基盤の変更を、回路図とネットリストに"
"反映することを可能にします。が、後方向アノテーションはそんなに便利ではないの"
"でここでは書きません。"

#. type: Title ==
#: getting_started_in_kicad.adoc:1082
#, no-wrap
msgid "Make schematic components in KiCad"
msgstr "KiCad回路図コンポーネントの作成"

#. type: Plain text
#: getting_started_in_kicad.adoc:1089
msgid ""
"Sometimes a component that you want to place on your schematic is not in a "
"KiCad library. This is quite normal and there is no reason to worry. In this "
"section we will see how a new schematic component can be quickly created "
"with KiCad. Nevertheless, remember that you can always find KiCad components "
"on the Internet. For instance from here:"
msgstr ""
"あなたが回路図に配置したいコンポーネントがKiCadのライブラリの中にないことがあ"
"ります。これは当たり前のことで嘆くことではありません。この章では、新しい回路"
"図コンポーネントがKiCadでいかに素早く作れるのかを見ていきましょう。しかし、"
"KiCadコンポーネントはいつでもインターネット上で見つけられることも覚えておきま"
"しょう。例えば、ここからです:"

#. type: Plain text
#: getting_started_in_kicad.adoc:1091
msgid "http://per.launay.free.fr/kicad/kicad_php/composant.php"
msgstr "http://per.launay.free.fr/kicad/kicad_php/composant.php"

#. type: Plain text
#: getting_started_in_kicad.adoc:1096
msgid ""
"In KiCad, a component is a piece of text that starts with a 'DEF' and ends "
"with 'ENDDEF'. One or more components are normally placed in a library file "
"with the extension __.lib__. If you want to add components to a library file "
"you can just use the cut and paste commands."
msgstr ""
"KiCadでは、コンポーネントは 'DEF' で始まり 'ENDDEF' で終わるテキストの断片で"
"す。普通は一つ以上のコンポーネントが拡張子 __.lib__ のライブラリファイルに含"
"まれています。コンポーネントをライブラリファイルに追加したいなら、あなたはた"
"だカット＆ペーストを使えばよいのです。"

#. type: Title ===
#: getting_started_in_kicad.adoc:1098
#, no-wrap
msgid "Using Component Library Editor"
msgstr "コンポーネント・ライブラリ・エディタの使用"

#. type: Plain text
#: getting_started_in_kicad.adoc:1104
msgid ""
"We can use the _Component Library Editor_ (part of __Eeschema__)  to make "
"new components. In our project folder 'tutorial1' let's create a folder "
"named 'library'. Inside we will put our new library file _myLib.lib_ as soon "
"as we have created our new component."
msgstr ""
"新しいコンポーネントの作成には _コンポーネント・ライブラリ・エディタ_ "
"(__Eeschema__ の一部) を使います。プロジェクトフォルダ 'tutorial1' 内に "
"'library' というフォルダを作りましょう。新コンポーネントを作ったら、そこに新"
"しいライブラリファイル _myLib.lib_ を置きます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1119
msgid ""
"Now we can start creating our new component. From KiCad, start __Eeschema__, "
"click on the 'Library Editor' icon image:images/icons/libedit."
"png[libedit_png] and then click on the 'New component' icon image:images/"
"icons/new_component.png[new_component_png]. The Component Properties window "
"will appear. Name the new component 'MYCONN3', set the 'Default reference "
"designator' as 'J', and the 'Number of parts per package' as '1'. Click OK. "
"If the warning appears just click yes.  At this point the component is only "
"made of its labels. Let's add some pins. Click on the 'Add Pins' icon image:"
"images/icons/pin.png[pin_png] on the right toolbar. To place the pin, left "
"click in the centre of the part editor sheet just below the 'MYCONN3' label."
msgstr ""
"さあ新しいコンポーネントの作成を始めましょう。KiCadから __Eeschema__ を起動し"
"て、'コンポーネント・ライブラリ・エディタ' のアイコン image:images/icons/"
"libedit.png[libedit_png] をクリックし、'新規コンポーネント作成' のアイコン "
"image:images/icons/new_component.png[new_component_png] をクリックします。コ"
"ンポーネント・プロパティのウィンドウが現れます。新しいコンポーネントを "
"'MYCONN3' と名付け、'デフォルトの参照記号' を 'J' に、'パッケージ内のユニット"
"数' を '1' に設定します。OKをクリックします。警告が出たらyesをクリックしてお"
"きます。 この時点ではコンポーネントは、そのラベルだけで構成されています。ピン"
"をいくつか足してみましょう。右ツールバーにある 'コンポーネントにピンを追加' "
"のアイコン image:images/icons/pin.png[pin_png] をクリックします。ピンを配置す"
"るには、シートの 'MYCONN3' ラベルの下あたりを左クリックします。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1123
msgid ""
"In the Pin Properties window that appears, set the pin name to 'VCC', set "
"the pin number to '1', and the 'Electrical type' to 'Passive' then click OK."
msgstr ""
"現れた 'ピンのプロパティ' ウィンドウで、ピン名を 'VCC' 、ピン番号を '1' 、'エ"
"レクトリックタイプ' を 'パッシブ' と設定してOKをクリックします。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1124
#, no-wrap
msgid "images/pin_properties.png"
msgstr "images/ja/pin_properties.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:1128
msgid ""
"Place the pin by clicking on the location you would like it to go, right "
"below the 'MYCONN3' label."
msgstr ""
"適当な場所、 'MYCONN3' ラベルの右下あたり、をクリックしてピンを配置します。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1132
msgid ""
"Repeat the place-pin steps, this time 'Pin name' should be 'INPUT', 'Pin "
"number' should be '2', and 'Electrical Type' should be 'Passive'."
msgstr ""
"ピン配置のステップを繰り返します。今度は 'ピン名' は 'INPUT' で、 'ピン番号' "
"は '2' で、 'エレクトリックタイプ' は 'パッシブ' とします。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1138
msgid ""
"Repeat the place-pin steps, this time 'Pin name' should be 'GND', 'Pin "
"number' should be '3', and 'Electrical Type' should be 'Passive'.  Arrange "
"the pins one on top of the other. The component label 'MYCONN3' should be in "
"the centre of the page (where the blue lines cross)."
msgstr ""
"ピン配置のステップを繰り返します。今度は 'ピン名' は 'GND' で、 'ピン番号' "
"は '3' で、 'エレクトリックタイプ' は 'パッシブ' とします。ピンを順に重ねて配"
"置します。コンポーネントのラベルの 'MYCONN3' をページの中心(青いラインが交差"
"する所)にします。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1146
msgid ""
"Next, draw the contour of the component. Click on the 'Add rectangle' icon "
"image:images/icons/add_rectangle.png[add_rectangle_png]. We want to draw a "
"rectangle next to the pins, as shown below. To do this, click where you want "
"the top left corner of the rectangle to be (do not hold the mouse button "
"down). Click again where you want the bottom right corner of the rectangle "
"to be."
msgstr ""
"次にコンポーネントの輪郭を描きましょう。 'コンポーネントのボディに矩形を入"
"力' のアイコン image:images/icons/add_rectangle.png[add_rectangle_png] をク"
"リックします。以下に示すようにピンに隣接して長方形を描きます。まず、長方形の"
"左上の角にしたい所をクリックします（マウスボタンを押したままにしません）。そ"
"して、長方形の右下の角にしたい所をクリックします。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1147
#, no-wrap
msgid "images/gsik_myconn3_l.png"
msgstr "images/gsik_myconn3_l.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:1153
msgid ""
"If you want to fill the rectangle with yellow, set the fill colour to "
"'yellow 4' in *Preferences* -> *Select color scheme*, then select the "
"rectangle in the editing screen and edit (E), selecting 'Fill background'."
msgstr ""
"矩形を黄色で塗りつぶしたい場合、まず *設定* -> *色の設定* で \"ボディ背景色"
"\" を \"Yellow 4\" に設定します。そして、編集画面上で塗りつぶしたい矩形の枠上"
"にマウスカーソルを置いて \"e\" キーを押して *図形のプロパティ* ウィンドウを表"
"示し、 '背景色で塗りつぶし' を選択します。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1158
msgid ""
"Save the component in your library __myLib.lib__. Click on the 'New Library' "
"icon image:images/icons/new_library.png[new_library_png], navigate into "
"_tutorial1/library/_ folder and save the new library file with the name "
"__myLib.lib__."
msgstr ""
"コンポーネントをあなたのライブラリ __myLib.lib__ に保存しましょう。 '新しいラ"
"イブラリへ現在のコンポーネントを保存' のアイコン image:images/icons/"
"new_library.png[new_library_png] をクリックして、フォルダ _tutorial1/library/"
"_ を選び、新しいライブラリファイルを __myLib.lib__ という名前で保存します。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1161
msgid ""
"Go to *Preferences* -> *Component Libraries* and add both _tutorial1/library/"
"_ in 'User defined search path' and _myLib.lib in_ 'Component library files'."
msgstr ""
"*設定* -> *コンポーネントライブラリ* で、 _tutorial1/library/_ を 'ユーザ定義"
"の検索パス' に追加し、 _myLib.lib_ を 'コンポーネントライブラリファイル' に追"
"加します。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1167
msgid ""
"Click on the 'Select working library' icon image:images/icons/library."
"png[library_png]. In the Select Library window click on _myLib_ and click "
"OK. Notice how the heading of the window indicates the library currently in "
"use, which now should be __myLib__."
msgstr ""
"'作業ライブラリの選択' のアイコン image:images/icons/library."
"png[library_png] をクリックします。ライブラリの選択ウィンドウ内で  _myLib_ を"
"選択してOKをクリックします。ウィンドウの上部が現在使用中のライブラリを示して"
"おり、それが __myLib__ であることに注意しましょう。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1176
msgid ""
"Click on the 'Update current component in current library' icon image:images/"
"icons/save_part_in_mem.png[save_part_in_mem_png] in the top toolbar. Save "
"all changes by clicking on the 'Save current loaded library on disk' icon "
"image:images/icons/save_library.png[save_library_png] in the top toolbar. "
"Click 'Yes' in any confirmation messages that appear.  The new schematic "
"component is now done and available in the library indicated in the window "
"title bar."
msgstr ""
"トップツールバーにある '現在のライブラリ内の現在のコンポーネントを更新' のア"
"イコン image:images/icons/save_part_in_mem.png[save_part_in_mem_png] をクリッ"
"クします。トップツールバーにある 'ディスクに現在のライブラリを保存' のアイコ"
"ン image:images/icons/save_library.png[save_library_png] をクリックして変更を"
"全て保存します。どの確認メッセージにも 'はい' をクリックして下さい。新しい回"
"路図コンポーネントは完成して、ウィンドウのタイトルバーに示されているライブラ"
"リから使えます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1180
msgid ""
"You can now close the Component library editor window. You will return to "
"the schematic editor window. Your new component will now be available to you "
"from the library __myLib__."
msgstr ""
"コンポーネント・ライブラリ・エディタのウィンドウを閉じます。 Eeschema のウィ"
"ンドウに戻ります。あなたの新しいコンポーネントはライブラリ __myLib__ から利用"
"できます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1185
msgid ""
"You can make any library _file.lib_ file available to you by adding it to "
"the library path. From __Eeschema__, go to *Preferences* -> *Library* and "
"add both the path to it in 'User defined search path' and _file.lib_ in "
"'Component library files'."
msgstr ""
"ライブラリパスに追加することによって、ライブラリの _file.lib_ ファイルを利用"
"できるようになります。 __Eeschema__ から *設定* -> *コンポーネントライブラリ"
"* として、それへのパスを 'ユーザ定義の検索パス' に追加し、 _file.lib_ を 'コ"
"ンポーネントライブラリファイル' に追加します。"

#. type: Title ===
#: getting_started_in_kicad.adoc:1187
#, no-wrap
msgid "Export, import and modify library components"
msgstr "コンポーネントのエクスポート、インポート、変更"

#. type: Plain text
#: getting_started_in_kicad.adoc:1193
msgid ""
"Instead of creating a library component from scratch it is sometimes easier "
"to start from one already made and modify it. In this section we will see "
"how to export a component from the KiCad standard library 'device' to your "
"own library _myOwnLib.lib_ and then modify it."
msgstr ""
"一からコンポーネントを作るよりも、既に作られたものから始めてそれを変更する方"
"が簡単なこともあります。この章では、KiCadの標準ライブラリ 'device' から、あな"
"た独自のライブラリ _myOwnLib.lib_ にコンポーネントをエクスポートして、それを"
"変更する方法を見ていきましょう。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1201
msgid ""
"From KiCad, start __Eeschema__, click on the 'Library Editor' icon image:"
"images/icons/libedit.png[libedit_png], click on the 'Select working library' "
"icon image:images/icons/library.png[library_png] and choose the library "
"'device'. Click on 'Load component to edit from the current lib' icon image:"
"images/icons/import_cmp_from_lib.png[import_cmp_from_lib_png] and import the "
"'RELAY_2RT'."
msgstr ""
"KiCadから __Eeschema__ を起動して、 'コンポーネント・ライブラリ・エディタ' の"
"アイコン  image:images/icons/libedit.png[libedit_png] をクリックして、 '作業"
"ライブラリの選択' のアイコン image:images/icons/library.png[library_png] をク"
"リックし、 'device' ライブラリを選びます。 '現在のライブラリからエディタへコ"
"ンポーネントを読み込む' のアイコン image:images/icons/import_cmp_from_lib."
"png[import_cmp_from_lib_png] をクリックして 'RELAY_2RT' をインポートします。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1205
msgid ""
"Click on the 'Export component' icon image:images/icons/export."
"png[export_png], navigate into the _library/_ folder and save the new "
"library file with the name _myOwnLib.lib._"
msgstr ""
"'コンポーネントのエクスポート' のアイコン image:images/icons/export."
"png[export_png] をクリックして、フォルダ _library/_ へ行き、新しいライブラリ"
"ファイルを _myOwnLib.lib_ という名前で保存します。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1211
msgid ""
"You can make this component and the whole library _myOwnLib.lib_ available "
"to you by adding it to the library path. From __Eeschema__, go to "
"*Preferences* -> *Component Libraries* and add both _library/_ in 'User "
"defined search path' and _myOwnLib.lib_ in the 'Component library files'. "
"Close the window."
msgstr ""
"ライブラリパスに追加することで、このコンポーネントとライブラリ全体 _myOwnLib."
"lib_ が利用できるようになります。 __Eeschema__ から *設定* -> *コンポーネント"
"ライブラリ* として、 _library/_ を 'ユーザ定義の検索パス' に追加し、 "
"_myOwnLib.lib_ を 'コンポーネントライブラリファイル' に追加します。追加した"
"ら \"OK\" ボタンを押してウィンドウを閉じます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1217
msgid ""
"Click on the 'Select working library' icon image:images/icons/library."
"png[library_png]. In the Select Library window click on _myOwnLib_ and click "
"OK. Notice how the heading of the window indicates the library currently in "
"use, it should be __myOwnLib__."
msgstr ""
"'作業ライブラリの選択' のアイコン image:images/icons/library."
"png[library_png] をクリックします。ライブラリの選択ウィンドウ内で  "
"_myOwnLib_ を選択してOKをクリックします。ウィンドウの上部が現在使用中のライブ"
"ラリを示しており、それが __myOwnLib__ であることに注意しましょう。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1221
msgid ""
"Click on the 'Load component to edit from the current lib' icon image:images/"
"icons/import_cmp_from_lib.png[import_cmp_from_lib_png] and import the "
"'RELAY_2RT'."
msgstr ""
"'現在のライブラリからエディタへコンポーネントを読み込む' のアイコン image:"
"images/icons/import_cmp_from_lib.png[import_cmp_from_lib_png] をクリックして "
"'RELAY_2RT' をインポートします。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1224
msgid ""
"You can now modify the component as you like. Hover over the label "
"'RELAY_2RT', press the e key and rename it 'MY_RELAY_2RT'."
msgstr ""
"これでコンポーネントを好きなように変更できます。マウスカーソルをラベル "
"'RELAY_2RT' に重ねて \"e\" キーを押して 'MY_RELAY_2RT' にリネームします。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1231
msgid ""
"Click on 'Update current component in current library' icon image:images/"
"icons/save_part_in_mem.png[save_part_in_mem_png] in the top toolbar. Save "
"all changes by clicking on the 'Save current loaded library on disk' icon "
"image:images/icons/save_library.png[save_library_png] in the top toolbar."
msgstr ""
"トップツールバーにある '現在のライブラリ内の現在のコンポーネントを更新' のア"
"イコン image:images/icons/save_part_in_mem.png[save_part_in_mem_png] をクリッ"
"クします。トップツールバーにある 'ディスクに現在のライブラリを保存' のアイコ"
"ン image:images/icons/save_library.png[save_library_png] をクリックして変更を"
"全て保存します。"

#. type: Title ===
#: getting_started_in_kicad.adoc:1233
#, no-wrap
msgid "Make schematic components with quicklib"
msgstr "quicklibによる回路図コンポーネントの作成"

#. type: Plain text
#: getting_started_in_kicad.adoc:1238
msgid ""
"This section presents an alternative way of creating the schematic component "
"for MYCONN3 (see <<myconn3,MYCONN3>> above) using the Internet tool "
"__quicklib__."
msgstr ""
"この章では、インターネットのツール __quicklib__ を使った、回路図コンポーネン"
"ト MYCONN3 (前の <<myconn3, 「MYCONN3」>> 参照) の別の作成方法を紹介します。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1241
msgid ""
"Head to the _quicklib_ web page: http://kicad.rohrbacher.net/quicklib.php"
msgstr ""
"_quicklib_ のウェブページに行きましょう: http://kicad.rohrbacher.net/"
"quicklib.php"

#. type: Plain text
#: getting_started_in_kicad.adoc:1244
msgid ""
"Fill out the page with the following information: Component name: MYCONN3 "
"Reference Prefix: J Pin Layout Style: SIL Pin Count, N: 3"
msgstr ""
"ページに次の情報を入力しましょう: Component name: MYCONN3、 Reference "
"Prefix: J、 Pin Layout Style: SIL、 Pin Count, N: 3"

#. type: Plain text
#: getting_started_in_kicad.adoc:1248
msgid ""
"Click on the 'Assign Pins' icon. Fill out the page with the following "
"information: Pin 1: VCC Pin 2: input Pin 3: GND.  Type : Passive for all 3 "
"pins."
msgstr ""
"'Assign Pins' をクリックします。ページに次の情報を入力しましょう: Pin 1: "
"VCC、 Pin 2: input、 Pin 3: GND 。Type は3つのピンとも Passive を選択します。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1252
msgid ""
"Click on the icon 'Preview it' and, if you are satisfied, click on the "
"'Build Library Component'. Download the file and rename it __tutorial1/"
"library/myQuickLib.lib.__. You are done!"
msgstr ""
"'Preview' をクリックします。満足なら 'Build Library Component' をクリックしま"
"す。 ファイルをダウンロードして __tutorial1/library/myQuickLib.lib__ と名付け"
"ます。できました！"

#. type: Plain text
#: getting_started_in_kicad.adoc:1258
msgid ""
"Have a look at it using KiCad. From the KiCad project manager, start "
"__Eeschema__, click on the 'Library Editor' icon image:images/icons/libedit."
"png[libedit_png], click on the 'Import Component' icon image:images/icons/"
"import.png[import_png], navigate to _tutorial1/library/_ and select "
"_myQuickLib.lib._"
msgstr ""
"それをKiCadを使って見てみましょう。KiCadプロジェクト・マネージャから  "
"__Eeschema__ を起動して、 'コンポーネント・ライブラリ・エディタ' のアイコン "
"image:images/icons/libedit.png[libedit_png] をクリックし、 'コンポーネントの"
"インポート' のアイコン image:images/icons/import.png[import_png] をクリック"
"し、 _tutorial1/library/_ へ行き _myQuickLib.lib_ を選択します。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1259
#, no-wrap
msgid "images/gsik_myconn3_quicklib.png"
msgstr "images/gsik_myconn3_quicklib.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:1266
msgid ""
"You can make this component and the whole library _myQuickLib.lib_ available "
"to you by adding it to the KiCad library path. From __Eeschema__, go to "
"*Preferences* -> *Component Libraries* and add _library_ in 'User defined "
"search path' and _myQuickLib.lib_ in 'Component library files'."
msgstr ""
"ライブラリパスに追加することで、このコンポーネントとライブラリ全体 "
"_myQuickLib.lib_ が利用できるようになります。 __Eeschema__ から *設定* -> *コ"
"ンポーネントライブラリ* として、 _library/_ を 'ユーザ定義の検索パス' に追加"
"し、 _myQuickLib.lib_ を 'コンポーネントライブラリファイル' に追加します。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1270
msgid ""
"As you might guess, this method of creating library components can be quite "
"effective when you want to create components with a large pin count."
msgstr ""
"このコンポーネント作成方法は、たくさんのピンを持つコンポーネントを作りたい時"
"に非常に効果的であると想像できるでしょう。"

#. type: Title ===
#: getting_started_in_kicad.adoc:1272
#, no-wrap
msgid "Make a high pin count schematic component"
msgstr "大量ピンの回路図コンポーネントの作成"

#. type: Plain text
#: getting_started_in_kicad.adoc:1279
msgid ""
"In the section titled _Make Schematic Components in quicklib_ we saw how to "
"make a schematic component using the _quicklib_ web-based tool.  However, "
"you will occasionally find that you need to create a schematic component "
"with a high number of pins (some hundreds of pins). In KiCad, this is not a "
"very complicated task."
msgstr ""
"_quicklibによる回路図コンポーネントの作成_ の章で、ウェブベースのツール "
"_quicklib_ を使った回路図コンポーネントの作成方法を見ました。しかし、時に、大"
"量ピン(数百のピン)を持つ回路図コンポーネントを作る必要があることに気付くで"
"しょう。KiCadでは、これはそんなにややこしい仕事ではありません。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1285
msgid ""
"Suppose that you want to create a schematic component for a device with 50 "
"pins. It is common practise to draw it using multiple low pin-count "
"drawings, for example two drawings with 25 pins each. This component "
"representation allows for easy pin connection."
msgstr ""
"50ピンのデバイスのための回路図コンポーネントを作成したいとします。複数の少量"
"ピンの図形、例えば25ピンの図形を2つ、を使ってそれを描くのが一般的な方法です。"
"このコンポーネント表現はピン接続が容易でしょう。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1290
msgid ""
"The best way to create our component is to use _quicklib_ to generate two 25-"
"pin components separately, re-number their pins using a Python script and "
"finally merge the two by using copy and paste to make them into one single "
"DEF and ENDDEF component."
msgstr ""
"このコンポーネントを作成する最良の方法は、_quicklib_ を使って別々に25ピンのコ"
"ンポーネントを生成して、Pythonスクリプトでそれらのピン番号を振り直し、最終的"
"に2つを統合して一組のDEFとENDDEFの中にコピー＆ペーストすることです。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1296
msgid ""
"You will find an example of a simple Python script below that can be used in "
"conjunction with an _in.txt_ file and an _out.txt_ file to re-number the "
"line: +X PIN1 1 -750 600 300 R 50 50 1 1 I+ into +X PIN26 26 -750 600 300 R "
"50 50 1 1 I+ this is done for all lines in the file __in.txt__."
msgstr ""
"以下に _in.txt_ ファイルと _out.txt_ ファイルと連動して使えるシンプルなPython"
"スクリプトの例を示します。これは __in.txt__ ファイルの中の全ての行に対して、 "
"+X PIN1 1 -750 600 300 R 50 50 1 1 I+ を +X PIN26 26 -750 600 300 R 50 50 1 "
"1 I+ のように数字の振り替えをします。"

#. type: Block title
#: getting_started_in_kicad.adoc:1297
#, no-wrap
msgid "Simple script"
msgstr "シンプルなスクリプト"

#. type: delimited block -
#: getting_started_in_kicad.adoc:1320
#, no-wrap
msgid ""
"#!/usr/bin/env python\n"
"''' simple script to manipulate KiCad component pins numbering'''\n"
"import sys, re\n"
"try:\n"
"    fin=open(sys.argv[1],'r')\n"
"    fout=open(sys.argv[2],'w')\n"
"except:\n"
"    print \"oh, wrong use of this app, try:\", sys.argv[0], \"in.txt out.txt\"\n"
"    sys.exit()\n"
"for ln in fin.readlines():\n"
"    obj=re.search(\"(X PIN)(\\d*)(\\s)(\\d*)(\\s.*)\",ln)\n"
"if obj:\n"
"    num = int(obj.group(2))+25\n"
"    ln=obj.group(1) + str(num) + obj.group(3) + str(num) + obj.group(5) +'\\n'\n"
"    fout.write(ln)\n"
"fin.close(); fout.close()\n"
"#\n"
"# for more info about regular expression syntax and KiCad component generation:\n"
"# http://gskinner.com/RegExr/\n"
"# http://kicad.rohrbacher.net/quicklib.php\n"
msgstr ""
"#!/usr/bin/env python\n"
"''' simple script to manipulate KiCad component pins numbering'''\n"
"import sys, re\n"
"try:\n"
"    fin=open(sys.argv[1],'r')\n"
"    fout=open(sys.argv[2],'w')\n"
"except:\n"
"    print \"oh, wrong use of this app, try:\", sys.argv[0], \"in.txt out.txt\"\n"
"    sys.exit()\n"
"for ln in fin.readlines():\n"
"    obj=re.search(\"(X PIN)(\\d*)(\\s)(\\d*)(\\s.*)\",ln)\n"
"if obj:\n"
"    num = int(obj.group(2))+25\n"
"    ln=obj.group(1) + str(num) + obj.group(3) + str(num) + obj.group(5) +'\\n'\n"
"    fout.write(ln)\n"
"fin.close(); fout.close()\n"
"#\n"
"# for more info about regular expression syntax and KiCad component generation:\n"
"# http://gskinner.com/RegExr/\n"
"# http://kicad.rohrbacher.net/quicklib.php\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:1326
msgid ""
"While merging the two components into one, it is necessary to use the "
"Library Editor from Eeschema to move the first component so that the second "
"does not end up on top of it. Below you will find the final .lib file and "
"its representation in __Eeschema__."
msgstr ""
"2つのコンポーネントを一つに統合するために、 Eeschema からコンポーネント・ライ"
"ブラリ・エディタを使って、1番目のコンポーネントを移動し、2番目に重ならないよ"
"うにしてやる必要があるでしょう。以下に最終的な .lib ファイルとその "
"__Eeschema__ での表現を示します。"

#. type: Block title
#: getting_started_in_kicad.adoc:1327
#, no-wrap
msgid "Contents of a *.lib file"
msgstr "*.lib ファイルの内容"

#. type: delimited block -
#: getting_started_in_kicad.adoc:1339
#, no-wrap
msgid ""
"EESchema-LIBRARY Version 2.3\n"
"#encoding utf-8\n"
"# COMP\n"
"DEF COMP U 0 40 Y Y 1 F N\n"
"F0 \"U\" -1800 -100 50 H V C CNN\n"
"F1 \"COMP\" -1800 100 50 H V C CNN\n"
"DRAW\n"
"S -2250 -800 -1350 800 0 0 0 N\n"
"S -450 -800 450 800 0 0 0 N\n"
"X PIN1 1 -2550 600 300 R 50 50 1 1 I\n"
msgstr ""
"Eeschema-LIBRARY Version 2.3\n"
"#encoding utf-8\n"
"# COMP\n"
"DEF COMP U 0 40 Y Y 1 F N\n"
"F0 \"U\" -1800 -100 50 H V C CNN\n"
"F1 \"COMP\" -1800 100 50 H V C CNN\n"
"DRAW\n"
"S -2250 -800 -1350 800 0 0 0 N\n"
"S -450 -800 450 800 0 0 0 N\n"
"X PIN1 1 -2550 600 300 R 50 50 1 1 I\n"

#. type: delimited block -
#: getting_started_in_kicad.adoc:1341
#, no-wrap
msgid "...\n"
msgstr "...\n"

#. type: delimited block -
#: getting_started_in_kicad.adoc:1346
#, no-wrap
msgid ""
"X PIN49 49 750 -500 300 L 50 50 1 1 I\n"
"ENDDRAW\n"
"ENDDEF\n"
"#End Library\n"
msgstr ""
"X PIN49 49 750 -500 300 L 50 50 1 1 I\n"
"ENDDRAW\n"
"ENDDEF\n"
"#End Library\n"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1348
#, no-wrap
msgid "images/gsik_high_number_pins.png"
msgstr "images/gsik_high_number_pins.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:1354
msgid ""
"The Python script presented here is a very powerful tool for manipulating "
"both pin numbers and pin labels. Mind, however, that all its power comes for "
"the arcane and yet amazingly useful Regular Expression syntax: _http://"
"gskinner.com/RegExr/._"
msgstr ""
"ここで紹介しているPythonスクリプトは、ピン番号とピンラベルを操作するとても強"
"力なツールです。その威力は、難解ではありますが驚くほどに便利な正規表現構文に"
"よる、ということを覚えておいて下さい: http://gskinner.com/RegExr/"

#. type: Title ==
#: getting_started_in_kicad.adoc:1356
#, no-wrap
msgid "Make component footprints"
msgstr "フットプリントの作成"

#. type: Plain text
#: getting_started_in_kicad.adoc:1362
msgid ""
"Unlike other EDA software tools, which have one type of library that "
"contains both the schematic symbol and the footprint variations, KiCad _."
"lib_ files contain schematic symbols and _.kicad_mod_ files contain "
"footprints. _Cvpcb_ is used to successfully map footprints to symbols."
msgstr ""
"他の、一種類のライブラリに回路図記号とフットプリントの両方を含むEDAソフトウェ"
"ア・ツールと異なり、KiCadの _.lib_ ファイルはコンポーネントを、 _.kicad_mod_ "
"ファイルはフットプリントを含んでいます。 _CvPcb_ はコンポーネントにフットプリ"
"ントを割り当てるのに使われます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1365
msgid ""
"As for _.lib_ files, _.kicad_mod_ library files are text files that can "
"contain anything from one to several parts."
msgstr ""
"_.lib_ と同様に、 _.kicad_mod_ ファイルはテキストファイルで、一つのフットプリ"
"ントを含むことができます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1369
msgid ""
"There is an extensive footprint library with KiCad, however on occasion you "
"might find that the footprint you need is not in the KiCad library.  Here "
"are the steps for creating a new PCB footprint in KiCad:"
msgstr ""
"KiCadには豊富なフットプリントのライブラリがありますが、あなたが必要とするフッ"
"トプリントがKiCadのライブラリ内にないこともあるでしょう。ここではKiCadで新し"
"いPCBフットプリントを作成する手順を示します:"

#. type: Title ===
#: getting_started_in_kicad.adoc:1371
#, no-wrap
msgid "Using Footprint Editor"
msgstr "フットプリント・エディタの使用"

#. type: Plain text
#: getting_started_in_kicad.adoc:1377
msgid ""
"From the KiCad project manager start the _Pcbnew_ tool. Click on the 'Open "
"Footprint Editor' icon image:images/icons/edit_module.png[edit_module_png] "
"on the top toolbar. This will open the 'Footprint Editor'."
msgstr ""
"KiCadプロジェクト・マネージャから _Pcbnew_ ツールを起動します。トップツール"
"バーにある 'フットプリント エディタを開く' のアイコン image:images/icons/"
"edit_module.png[edit_module_png] をクリックします。 'フットプリント・エディ"
"タ' が開きます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1389
msgid ""
"We are going to save the new footprint 'MYCONN3' in the new footprint "
"library 'myfootprint'.  Create a new folder _myfootprint.pretty_ in the "
"_tutorial1/_ project folder.  Click on the *Preferences* -> **Footprint "
"Libraries Manager** and press 'Append Library' button. In the table, enter "
"\"myfootprint\" as Nickname, enter \"$\\{KIPRJMOD\\}/myfootprint.pretty\" as "
"Library Path and enter \"KiCad\" as Plugin Type.  Press OK to close the PCB "
"Library Tables window.  Click on the 'Select active library' icon image:"
"images/icons/library.png[library_png] on the top toolbar. Select the "
"'myfootprint' library."
msgstr ""
"新しいフットプリント 'MYCONN3' を新しいフットプリントライブラリ "
"'myfootprint' に保存します。プロジェクトのフォルダ _tutorial1/_ 内に新しく  "
"_myfootprint.pretty/_ フォルダを作成して下さい。 *設定* -> **フットプリント "
"ライブラリの管理** をクリックして 'ライブラリの追加' ボタンを押します。テーブ"
"ルに次のように入力します。別名（ニックネーム）には \"myfootprint\" 、ライブラ"
"リのパスには \"$\\{KIPRJMOD\\}/myfootprint.pretty\" 、プラグインの種類には "
"\"KiCad\"。入力したらOKを押して、PCBライブラリ一覧のダイアログを閉じます。"
"トップツールバーにある 'アクティブなライブラリを選択' のアイコン image:"
"images/icons/library.png[library_png] をクリックします。そして 'myfootprint' "
"ライブラリを選択しましょう。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1397
msgid ""
"Click on the 'New Footprint' icon image:images/icons/new_footprint."
"png[new_footprint_png] on the top toolbar.  Type 'MYCONN3' as the 'footprint "
"name'. In the middle of the screen the 'MYCONN3' label will appear. Under "
"the label you can see the 'REF*__' label. Right click on 'MYCONN3' and move "
"it above 'REF*__'. Right click on 'REF__*', select 'Edit Text' and rename it "
"to 'SMD'. Set the 'Display' value to 'Invisible'."
msgstr ""
"トップツールバーにある '新規フットプリント' のアイコン  image:images/icons/"
"new_footprint.png[new_footprint_png] をクリックします。 'フットプリント名' "
"に 'MYCONN3' を入力します。画面中央に 'MYCONN3' ラベルが表示されます。そのラ"
"ベルの下に 'REF*__' があります。 'MYCONN3' の上で右クリックし、 'REF' の上方"
"に移動します。 'REF*__' 上で右クリックして、 'テキストの編集' を選び、 'SMD' "
"にリネームします。テキストプロパティの '表示' の項目で '非表示' を選択しま"
"す。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1402
msgid ""
"Select the 'Add Pads' icon image:images/icons/pad.png[pad_png] on the right "
"toolbar. Click on the working sheet to place the pad. Right click on the new "
"pad and click 'Edit Pad'. You can otherwise use the e key shortcut."
msgstr ""
"右ツールバーにある 'パッド入力' のアイコン image:images/icons/pad."
"png[pad_png] を選択します。パッドを配置するため画面をクリックします。新しい"
"パッド上で右クリックし 'パッドの編集' をクリックします。代わりに \"e\" キーの"
"ショートカットも使えます。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1403
#, no-wrap
msgid "images/pad_properties.png"
msgstr "images/ja/pad_properties.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:1408
msgid ""
"Set the 'Pad Num' to '1', 'Pad Shape' to 'Rect', 'Pad Type' to 'SMD', 'Shape "
"Size X' to '0.4', and 'Shape Size Y' to '0.8'. Click OK.  Click on 'Add "
"Pads' again and place two more pads."
msgstr ""
"'パッド番号' を '1' に、 '形状' を '四角' に、 'パッド形状' を 'SMD' に、 'サ"
"イズX' を '0.4' に、 'サイズY' を '0.8' に設定し、OKをクリックします。再度 "
"'パッド入力' をクリックし、 もう2つパッドを配置します。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1412
msgid ""
"If you want to change the grid size, *Right click* -> **Grid Select**. Be "
"sure to select the appropriate grid size before laying down the components."
msgstr ""
"グリッドサイズを変更したいなら *右クリック* -> **グリッドの選択** とします。"
"配置する前に適切なグリッドサイズを選択しましょう。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1415
msgid ""
"Move the 'MYCONN3' label and the 'SMD' label out of the way so that it looks "
"like the image shown above."
msgstr "上の図のように 'MYCONN3' と 'SMD' のラベルを外側に移動します。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1422
msgid ""
"When placing pads it is often necessary to measure relative distances. Place "
"the cursor where you want the relative coordinate point _(0,0)_ to be and "
"press the space bar. While moving the cursor around, you will see a relative "
"indication of the position of the cursor at the bottom of the page. Press "
"the space bar at any time to set the new origin."
msgstr ""
"パッドを配置する時には、相対的な距離を測る必要があります。相対座標軸の "
"_(0,0)_ としたい所にカーソルを置き、スペースキーを押します。カーソルを動かす"
"と、カーソル位置の相対的な指標がウィンドウの下方に見えるでしょう。新しい原点"
"を設定するにはスペースキーを押しましょう。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1427
msgid ""
"Now add a footprint contour. Click on the 'Add graphic line or polygon' "
"button image:images/icons/add_polygon.png[add_polygon_png] in the right "
"toolbar. Draw an outline of the connector around the component."
msgstr ""
"フットプリントの輪郭を加えましょう。右ツールバーにある '図形ライン（またはポ"
"リゴン）を入力' のボタン image:images/icons/add_polygon.png[add_polygon_png] "
"をクリックします。パーツの周囲にコネクタの外形を描きます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1431
msgid ""
"Click on the 'Save Footprint in Active Library' icon image:images/icons/"
"save_library.png[save_library_png] on the top toolbar, using the default "
"name MYCONN3."
msgstr ""
"トップツールバーにある 'アクティブなライブラリへフットプリントを保存' のアイ"
"コン image:images/icons/save_library.png[save_library_png] をクリックし、デ"
"フォルト名のMYCONN3で保存します。"

#. type: Title ==
#: getting_started_in_kicad.adoc:1433
#, no-wrap
msgid "Note about portability of KiCad project files"
msgstr "KiCadプロジェクトファイルの可搬性について"

#. type: Plain text
#: getting_started_in_kicad.adoc:1437
msgid ""
"What files do you need to send to someone so that they can fully load and "
"use your KiCad project?"
msgstr ""
"あなたのKiCadプロジェクトを、他の人が完全に取り込んで使えるために、どのファイ"
"ルを送る必要があるでしょうか？"

#. type: Plain text
#: getting_started_in_kicad.adoc:1444
msgid ""
"When you have a KiCad project to share with somebody, it is important that "
"the schematic file __.sch__, the board file __.kicad_pcb__, the project file "
"_.pro_ and the netlist file __.net__, are sent together with both the "
"schematic parts file _.lib_ and the footprints file __.kicad_mod__. Only "
"this way will people have total freedom to modify the schematic and the "
"board."
msgstr ""
"誰かとKiCadのプロジェクトを共有する時、回路図ファイル __.sch__ 、基板ファイ"
"ル __.kicad_pcb__ 、プロジェクトファイル _.pro_ 、ネットリストファイル __."
"net__ を、コンポーネントライブラリファイル _.lib_ 及びフットプリントライブラ"
"リファイル __.kicad_mod__ と一緒に送ることが重要です。この方法でのみ完全に自"
"由に回路図と基板を変更することができます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1456
msgid ""
"With KiCad schematics, people need the _.lib_ files that contain the "
"symbols. Those library files need to be loaded in the _Eeschema_ "
"preferences. On the other hand, with boards (__.kicad_pcb__ files), "
"footprints can be stored inside the _.kicad_pcb_ file. You can send someone "
"a _.kicad_pcb_ file and nothing else, and they would still be able to look "
"at and edit the board. However, when they want to load components from a "
"netlist, the footprint libraries (__.kicad_mod__ files) need to be present "
"and loaded in the _Pcbnew_ preferences just as for schematics. Also, it is "
"necessary to load the _.kicad_mod_ files in the preferences of _Pcbnew_ in "
"order for those footprints to show up in __Cvpcb__."
msgstr ""
"KiCadの回路図では、回路図記号を含む _.lib_ ファイルが必要です。それらのライブ"
"ラリファイルは _Eeschema_ の設定で読み込まれる必要があります。一方、基板( __."
"kicad_pcb__ ファイル)では、フットプリントは _.kicad_pcb_ ファイルの中に保存さ"
"せることができます。誰かに _.kicad_pcb_ ファイルだけを送っても、彼はその基板"
"を見たり編集したりできるわけです。しかし、もし彼がネットリストからコンポーネ"
"ントを読み込みたいのであれば、フットプリントライブラリ (__.kicad_mod__ ファイ"
"ル) が存在し、回路図の場合と同様に、 _Pcbnew_ の設定で読み込まれている必要が"
"あります。同様に、 __CvPcb__ でモジュールが表示されるようにするためには、 "
"_Pcbnew_ の設定で _.kicad_mod_ ファイルが読み込まれていることが必要です。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1464
msgid ""
"If someone sends you a _.kicad_pcb_ file with footprints you would like to "
"use in another board, you can open the Footprint Editor, load a footprint "
"from the current board, and save or export it into another footprint "
"library. You can also export all the footprints from a _.kicad_pcb_ file at "
"once via *Pcbnew* -> *File* -> *Archive* -> *Footprints* -> **Create "
"footprint archive**, which will create a new _.kicad_mod_ file with all the "
"board's footprints."
msgstr ""
"もし誰かが フットプリント付きの _.kicad_pcb_ ファイルを送ってくれたら、あなた"
"はそれを他の基板でも利用したいでしょう。フットプリント・エディタを開き、現在"
"の基板からフットプリントを読み込み、保存するか別のフットプリント・ライブラ"
"リ・ファイルにエクスポートします。 _.kicad_pcb_ ファイルから全てのフットプリ"
"ントを一度にエクスポートすることもできます。 *Pcbnew* -> *ファイル* -> *フッ"
"トプリントのアーカイブ* -> **フットプリントアーカイブの作成** で、基板上の全"
"てのフットプリントの _.kicad_mod_ ファイルが生成されます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1470
msgid ""
"Bottom line, if the PCB is the only thing you want to distribute, then the "
"board file _.kicad_pcb_ is enough. However, if you want to give people the "
"full ability to use and modify your schematic, its components and the PCB, "
"it is highly recommended that you zip and send the following project "
"directory:"
msgstr ""
"結論として、PCBだけを配布したいのなら、基板ファイル _.kicad_pcb_ だけで十分で"
"す。しかし、あなたが他の人に、回路図と部品と基板の、利用と変更の完全な自由を"
"与えたいのならば、以下のプロジェクトディレクトリをzipして送ることをお勧めいた"
"します。"

#. type: delimited block -
#: getting_started_in_kicad.adoc:1488
#, no-wrap
msgid ""
"tutorial1/\n"
"|-- tutorial1.pro\n"
"|-- tutorial1.sch\n"
"|-- tutorial1.kicad_pcb\n"
"|-- tutorial1.net\n"
"|-- library/\n"
"|   |-- myLib.lib\n"
"|   |-- myOwnLib.lib\n"
"|   \\-- myQuickLib.lib\n"
"|\n"
"|-- myfootprint.pretty/\n"
"|   \\-- MYCONN3.kicad_mod\n"
"|\n"
"\\-- gerber/\n"
"    |-- ...\n"
"    \\-- ...\n"
msgstr ""
"tutorial1/\n"
"|-- tutorial1.pro\n"
"|-- tutorial1.sch\n"
"|-- tutorial1.kicad_pcb\n"
"|-- tutorial1.net\n"
"|-- library/\n"
"|   |-- myLib.lib\n"
"|   |-- myOwnLib.lib\n"
"|   \\-- myQuickLib.lib\n"
"|\n"
"|-- myfootprint.pretty/\n"
"|   \\-- MYCONN3.kicad_mod\n"
"|\n"
"\\-- gerber/\n"
"    |-- ...\n"
"    \\-- ...\n"

#. type: Title ==
#: getting_started_in_kicad.adoc:1491
#, no-wrap
msgid "More about KiCad documentation"
msgstr "KiCadドキュメントの詳細"

#. type: Plain text
#: getting_started_in_kicad.adoc:1496
msgid ""
"This has been a quick guide on most of the features in KiCad. For more "
"detailed instructions consult the help files which you can access through "
"each KiCad module. Click on *Help* -> **Manual**."
msgstr ""
"この文書はKiCadの大部分の機能のクイックガイドでした。より詳細な手順について"
"は、それぞれのKiCadツールから参照できるヘルプファイルを参照して下さい。 *ヘル"
"プ* -> *マニュアル* をクリックです。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1499
msgid ""
"KiCad comes with a pretty good set of multi-language manuals for all its "
"four software components."
msgstr ""
"KiCadには、その4つのソフトウェアコンポーネント全てに、とても良い多言語のマ"
"ニュアルが付いてきます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1501
msgid "The English version of all KiCad manuals are distributed with KiCad."
msgstr "全KiCadマニュアルの英語版はKiCadと一緒に配布されます。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1507
msgid ""
"In addition to its manuals, KiCad is distributed with this tutorial, which "
"has been translated into other languages. All the different versions of this "
"tutorial are distributed free of charge with all recent versions of KiCad. "
"This tutorial as well as the manuals should be packaged with your version of "
"KiCad on your given platform."
msgstr ""
"マニュアルに加えて、KiCadはこの、他の言語にも翻訳されたチュートリアルと一緒に"
"配布されます。このチュートリアルは無料で最新版のKiCadと共に配布されます。この"
"チュートリアルとマニュアルはご利用のKiCadと共にパッケージされています。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1510
msgid ""
"For example, on Linux the typical locations are in the following "
"directories, depending on your exact distribution:"
msgstr ""
"Linux の場合、ディストリビューションにもよりますが、一般的に次のディレクトリ"
"でしょう:"

#. type: Plain text
#: getting_started_in_kicad.adoc:1513
#, no-wrap
msgid ""
" /usr/share/doc/kicad/help/en/\n"
" /usr/local/share/doc/kicad/help/en\n"
msgstr ""
" /usr/share/doc/kicad/help/en/\n"
" /usr/local/share/doc/kicad/help/en\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:1515
msgid "On Windows it is in:"
msgstr "Windows の場合:"

#. type: Plain text
#: getting_started_in_kicad.adoc:1517
#, no-wrap
msgid " <installation directory>/share/doc/kicad/help/en\n"
msgstr " <installation directory>/share/doc/kicad/help/en\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:1519
msgid "On OS X:"
msgstr "OS X の場合:"

#. type: Plain text
#: getting_started_in_kicad.adoc:1521
#, no-wrap
msgid " /Library/Application Support/kicad/help/en\n"
msgstr " /Library/Application Support/kicad/help/en\n"

#. type: Title ===
#: getting_started_in_kicad.adoc:1523
#, no-wrap
msgid "KiCad documentation on the Web"
msgstr "Web上のKiCadドキュメント"

#. type: Plain text
#: getting_started_in_kicad.adoc:1526
msgid ""
"Latest KiCad documentations are available in multiple languages on the Web."
msgstr ""
"最新のKiCadのドキュメンテーションは、複数の言語に翻訳されてWeb上にあります。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1528
msgid "http://kicad-pcb.org/help/documentation/"
msgstr "http://kicad-pcb.org/help/documentation/"
