# Getting Started in KiCad Manual Duch Translation
# Copyright (C) 2015-2018 The KiCad Translation Team
# This file is distributed under the same license as the KiCad package.
# Melroy van den Berg <webmaster1989@gmail.com>, 2015.
#
msgid ""
msgstr ""
"Project-Id-Version: 0.1\n"
"POT-Creation-Date: 2019-01-03 18:10+0100\n"
"PO-Revision-Date: 2018-06-07 08:40+0200\n"
"Last-Translator: Melroy van den Berg <webmaster1989@gmail.com>\n"
"Language-Team: Dutch <nl@li.org>\n"
"Language: nl\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: getting_started_in_kicad.adoc:7
#, no-wrap
msgid "Getting Started in KiCad"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:11
msgid ""
"_Essential and concise guide to mastering KiCad for the successful "
"development of sophisticated electronic printed circuit boards._"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:14
#, no-wrap
msgid "*Copyright*\n"
msgstr "*Copyright*\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:20
msgid ""
"This document is Copyright (C) 2010-2018 by its contributors as listed "
"below. You may distribute it and/or modify it under the terms of either the "
"GNU General Public License (http://www.gnu.org/licenses/gpl.html), version 3 "
"or later, or the Creative Commons Attribution License (http://"
"creativecommons.org/licenses/by/3.0/), version 3.0 or later."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:22
msgid "All trademarks within this guide belong to their legitimate owners."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:25
#, no-wrap
msgid "*Contributors*\n"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:27
msgid ""
"David Jahshan, Phil Hutchinson, Fabrizio Tappero, Christina Jarron, Melroy "
"van den Berg."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:30
#, no-wrap
msgid "*Feedback*\n"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:32
msgid "Please direct any bug reports, suggestions or new versions to here:"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:34
msgid "About KiCad document: https://github.com/KiCad/kicad-doc/issues"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:36
msgid "About KiCad software: https://bugs.launchpad.net/kicad"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:38
msgid ""
"About KiCad software internationalization (i18n): https://github.com/KiCad/"
"kicad-i18n/issues"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:41
#, no-wrap
msgid "*Publication date*\n"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:43
msgid "2015, May 16."
msgstr ""

#. type: Title ==
#: getting_started_in_kicad.adoc:46
#, no-wrap
msgid "Introduction to KiCad"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:52
msgid ""
"KiCad is an open-source software tool for the creation of electronic "
"schematic diagrams and PCB artwork. Beneath its singular surface, KiCad "
"incorporates an elegant ensemble of the following stand-alone software tools:"
msgstr ""

#. type: delimited block |
#: getting_started_in_kicad.adoc:63
#, no-wrap
msgid ""
"|Program name|Description|File extension\n"
"|KiCad |Project manager|+*.pro+\n"
"|Eeschema |Schematic and component editor|+*.sch, *.lib, *.net+\n"
"|Pcbnew |Circuit board and footprint editor|+*.kicad_pcb, *.kicad_mod+\n"
"|GerbView |Gerber and drill file viewer|+\\*.g\\*, *.drl, etc.+\n"
"|Bitmap2Component |Convert bitmap images to components or footprints|+*.lib, *.kicad_mod, *.kicad_wks+\n"
"|PCB Calculator |Calculator for components, track width, electrical spacing, color codes, and more...|None\n"
"|Pl Editor |Page layout editor|+*.kicad_wks+\n"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:68
msgid ""
"The file extension list is not complete and only contains a subset of the "
"files that KiCad supports. It is useful for the basic understanding of which "
"files are used for each KiCad application."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:72
msgid ""
"KiCad can be considered mature enough to be used for the successful "
"development and maintenance of complex electronic boards."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:78
msgid ""
"KiCad does not present any board-size limitation and it can easily handle up "
"to 32 copper layers, up to 14 technical layers and up to 4 auxiliary "
"layers.  KiCad can create all the files necessary for building printed "
"boards, Gerber files for photo-plotters, drilling files, component location "
"files and a lot more."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:82
msgid ""
"Being open source (GPL licensed), KiCad represents the ideal tool for "
"projects oriented towards the creation of electronic hardware with an open-"
"source flavour."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:84
msgid "On the Internet, the homepage of KiCad is:"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:86
msgid "http://www.kicad-pcb.org/"
msgstr ""

#. type: Title ===
#: getting_started_in_kicad.adoc:89
#, no-wrap
msgid "Downloading and installing KiCad"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:93
msgid ""
"KiCad runs on GNU/Linux, Apple macOS and Windows.  You can find the most up "
"to date instructions and download links at:"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:95
msgid "http://www.kicad-pcb.org/download/"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:105
msgid ""
"KiCad stable releases occur periodically per the http://ci.kicad-pcb.org/job/"
"kicad-doxygen/ws/Documentation/doxygen/html/"
"md_Documentation_development_stable-release-policy.html[KiCad Stable Release "
"Policy]. New features are continually being added to the development branch. "
"If you would like to take advantage of these new features and help out by "
"testing them, please download the latest nightly build package for your "
"platform. Nightly builds may introduce bugs such as file corruption, "
"generation of bad Gerbers, etc., but it is the goal of the KiCad Development "
"Team to keep the development branch as usable as possible during new feature "
"development."
msgstr ""

#. type: Title ====
#: getting_started_in_kicad.adoc:107
#, no-wrap
msgid "Under GNU/Linux"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:113
msgid ""
"Stable releases of KiCad can be found in most distribution's package "
"managers as kicad and kicad-doc. If your distribution does not provide "
"latest stable version, please follow the instruction for unstable builds and "
"select and install the latest stable version."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:116
msgid ""
"Under Ubuntu, the easiest way to install an unstable nightly build of KiCad "
"is via _PPA_ and __Aptitude__. Type the following into your Terminal:"
msgstr ""

#. type: delimited block -
#: getting_started_in_kicad.adoc:121
#, no-wrap
msgid ""
"sudo add-apt-repository ppa:js-reynaud/ppa-kicad\n"
"sudo aptitude update && sudo aptitude safe-upgrade\n"
"sudo aptitude install kicad kicad-doc-en\n"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:124
msgid "Under Debian, the easiest way to install backports build of KiCad is:"
msgstr ""

#. type: delimited block -
#: getting_started_in_kicad.adoc:132
#, no-wrap
msgid ""
"# Set up Debian Backports\n"
"echo -e \"\n"
"# stretch-backports\n"
"deb http://ftp.us.debian.org/debian/ stretch-backports main contrib non-free \n"
"deb-src http://ftp.us.debian.org/debian/ stretch-backports main contrib non-free\n"
"\" | sudo tee -a /etc/apt/sources.list > /dev/null\n"
msgstr ""

#. type: delimited block -
#: getting_started_in_kicad.adoc:136
#, no-wrap
msgid ""
"# Run an Update & Install KiCad\n"
"sudo apt-get update\n"
"sudo apt-get install -t stretch-backports kicad\n"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:140
msgid ""
"Under Fedora the easiest way to install an unstable nightly build is via "
"__copr__.  To install KiCad via copr type the following in to copr:"
msgstr ""

#. type: delimited block -
#: getting_started_in_kicad.adoc:144
#, no-wrap
msgid ""
"sudo dnf copr enable mangelajo/kicad\n"
"sudo dnf install kicad\n"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:148
msgid ""
"Alternatively, you can download and install a pre-compiled version of KiCad, "
"or directly download the source code, compile and install KiCad."
msgstr ""

#. type: Title ====
#: getting_started_in_kicad.adoc:150
#, no-wrap
msgid "Under Apple macOS"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:154
msgid ""
"Stable builds of KiCad for macOS can be found at: http://downloads.kicad-pcb."
"org/osx/stable/"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:157
msgid ""
"Unstable nightly development builds can be found at: http://downloads.kicad-"
"pcb.org/osx/"
msgstr ""

#. type: Title ====
#: getting_started_in_kicad.adoc:159
#, no-wrap
msgid "Under Windows"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:163
msgid ""
"Stable builds of KiCad for Windows can be found at: http://downloads.kicad-"
"pcb.org/windows/stable/"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:166
msgid ""
"For Windows you can find nightly development builds at: http://downloads."
"kicad-pcb.org/windows/"
msgstr ""

#. type: Title ===
#: getting_started_in_kicad.adoc:168
#, no-wrap
msgid "Support"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:170
msgid "If you have ideas, remarks or questions, or if you just need help:"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:172
msgid "https://forum.kicad.info/[Visit the forum]"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:173
msgid ""
"Join the http://webchat.freenode.net/?channels=kicad[#kicad IRC channel] on "
"Freenode"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:174
msgid "http://www.kicad-pcb.org/help/tutorials/[Watch tutorials]"
msgstr ""

#. type: Title ==
#: getting_started_in_kicad.adoc:176
#, no-wrap
msgid "KiCad Workflow"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:182
msgid ""
"Despite its similarities with other PCB design software, KiCad is "
"characterised by a unique workflow in which schematic components and "
"footprints are separate. Only after creating a schematic are footprints "
"assigned to the components."
msgstr ""

#. type: Title ===
#: getting_started_in_kicad.adoc:184
#, no-wrap
msgid "Overview"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:190
msgid ""
"The KiCad workflow is comprised of two main tasks: drawing the schematic and "
"laying out the board. Both a schematic component library and a PCB footprint "
"library are necessary for these two tasks. KiCad includes many components "
"and footprints, and also has the tools to create new ones."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:194
msgid ""
"In the picture below, you see a flowchart representing the KiCad workflow.  "
"The flowchart explains which steps you need to take, and in which order.  "
"When applicable, the icon is added for convenience."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:195
#, no-wrap
msgid "KiCad Flowchart"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:195
#, no-wrap
msgid "images/kicad_flowchart.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:201
msgid ""
"For more information about creating a component, read <<make-schematic-"
"symbols-in-kicad,Making schematic symbols>>.  And for information about how "
"to create a new footprint, see <<make-component-footprints,Making component "
"footprints>>."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:207
msgid ""
"http://kicad.rohrbacher.net/quicklib.php[Quicklib] is a tool that allows you "
"to quickly create KiCad library components with a web-based interface. For "
"more information about Quicklib, refer to <<make-schematic-components-with-"
"quicklib,Making Schematic Components With Quicklib>>."
msgstr ""

#. type: Title ===
#: getting_started_in_kicad.adoc:209
#, no-wrap
msgid "Forward and backward annotation"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:215
msgid ""
"Once an electronic schematic has been fully drawn, the next step is to "
"transfer it to a PCB. Often, additional components might need to be added, "
"parts changed to a different size, net renamed, etc. This can be done in two "
"ways: Forward Annotation or Backward Annotation."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:222
msgid ""
"Forward Annotation is the process of sending schematic information to a "
"corresponding PCB layout. This is a fundamental feature because you must do "
"it at least once to initially import the schematic into the PCB.  "
"Afterwards, forward annotation allows sending incremental schematic changes "
"to the PCB. Details about Forward Annotation are discussed in the section "
"<<forward-annotation-in-kicad,Forward Annotation>>."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:229
msgid ""
"Backward Annotation is the process of sending a PCB layout change back to "
"its corresponding schematic. Two common causes for Backward Annotation are "
"gate swaps and pin swaps. In these situations, there are gates or pins which "
"are functionally equivalent, but it may only be during layout that there is "
"a strong case for choosing the exact gate or pin. Once the choice is made in "
"the PCB, this change is then pushed back to the schematic."
msgstr ""

#. type: Title ==
#: getting_started_in_kicad.adoc:232
#, no-wrap
msgid "Using KiCad"
msgstr ""

#. type: Title ===
#: getting_started_in_kicad.adoc:234
#, no-wrap
msgid "Shortcut keys"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:239
msgid ""
"KiCad has two kinds of related but different shortcut keys: accelerator keys "
"and hotkeys. Both are used to speed up working in KiCad by using the "
"keyboard instead of the mouse to change commands."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:240 getting_started_in_kicad.adoc:248
#, no-wrap
msgid "Accelerator keys"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:245
msgid ""
"Accelerator keys have the same effect as clicking on a menu or toolbar icon: "
"the command will be entered but nothing will happen until the left mouse "
"button is clicked. Use an accelerator key when you want to enter a command "
"mode but do not want any immediate action."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:247
msgid "Accelerator keys are shown on the right side of all menu panes:"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:248
#, no-wrap
msgid "images/gsik_accelerator_keys.png"
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:250 getting_started_in_kicad.adoc:258
#, no-wrap
msgid "Hotkeys"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:254
msgid ""
"A hotkey is equal to an accelerator key plus a left mouse click. Using a "
"hotkey starts the command immediately at the current cursor location. Use a "
"hotkey to quickly change commands without interrupting your workflow."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:257
msgid ""
"To view hotkeys within any KiCad tool go to *_Help -> List Hotkeys_* or "
"press Ctrl+F1:"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:258
#, no-wrap
msgid "images/gsik_hotkeys.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:262
msgid ""
"You can edit the assignment of hotkeys, and import or export them, from the "
"*_Preferences -> Hotkeys Options_* menu."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:265
msgid ""
"In this document, hotkeys are expressed with brackets like this: [a].  If "
"you see [a], just type the \"a\" key on the keyboard."
msgstr ""

#. type: Title ====
#: getting_started_in_kicad.adoc:266
#, no-wrap
msgid "Example"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:268
msgid "Consider the simple example of adding a wire in a schematic."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:272
msgid ""
"To use an accelerator key, press \"Shift + W\" to invoke the \"Add wire\" "
"command (note the cursor will change). Next, left click on the desired wire "
"start location to begin drawing the wire."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:275
msgid ""
"With a hotkey, simply press [w] and the wire will immediately start from the "
"current cursor location."
msgstr ""

#. type: Title ==
#: getting_started_in_kicad.adoc:277
#, no-wrap
msgid "Draw electronic schematics"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:281
msgid ""
"In this section we are going to learn how to draw an electronic schematic "
"using KiCad."
msgstr ""

#. type: Title ===
#: getting_started_in_kicad.adoc:283
#, no-wrap
msgid "Using Eeschema"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:292
msgid ""
"Under Windows run kicad.exe. Under Linux type 'kicad' in your Terminal. You "
"are now in the main window of the KiCad project manager.  From here you have "
"access to eight stand-alone software tools: __Eeschema__, __Schematic "
"Library Editor__, __Pcbnew__, __PCB Footprint Editor__, __GerbView__, "
"__Bitmap2Component__, __PCB Calculator__ and __Pl Editor__. Refer to the "
"work-flow chart to give you an idea how the main tools are used."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:293
#, no-wrap
msgid "KiCad Main Window"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:293
#, no-wrap
msgid "images/kicad_main_window.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:301
msgid ""
"Create a new project: *File* -> **New** -> **Project**.  Name the project "
"file 'tutorial1'. The project file will automatically take the extension \"."
"pro\". The exact appearance of the dialog depends on the used platform, but "
"there should be a checkbox for creating a new directory. Let it stay checked "
"unless you already have a dedicated directory.  All your project files will "
"be saved there."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:305
msgid ""
"Let's begin by creating a schematic. Start the schematic editor "
"__Eeschema__, image:images/icons/eeschema.png[Eeschema]. It is the first "
"button from the left."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:314
msgid ""
"Click on the 'Page Settings' icon image:images/icons/sheetset.png[Sheet "
"settings icon] on the top toolbar. Set the appropriate 'paper "
"size' ('A4','8.5x11' etc.)  and enter the Title as 'Tutorial1'.  You will "
"see that more information can be entered here if necessary. Click OK. This "
"information will populate the schematic sheet at the bottom right corner. "
"Use the mouse wheel to zoom in.  Save the whole schematic: *File* -> **Save**"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:318
msgid ""
"We will now place our first component. Click on the 'Place symbol' icon "
"image:images/icons/add_component.png[Add component Icon] in the right "
"toolbar. You may also press the 'Add Symbol' hotkey [a]."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:326
msgid ""
"Click on the middle of your schematic sheet. A __Choose Symbol__ window will "
"appear on the screen.  We're going to place a resistor. Search / filter on "
"the 'R' of **R**esistor.  You may notice the 'Device' heading above the "
"Resistor. This 'Device' heading is the name of the library where the "
"component is located, which is quite a generic and useful library."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:327
#, no-wrap
msgid "Choose Symbol"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:327
#, no-wrap
msgid "images/choose_component.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:332
msgid ""
"Double click on it. This will close the 'Choose Symbol' window.  Place the "
"component in the schematic sheet by clicking where you want it to be."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:336
msgid ""
"Click on the magnifier icon to zoom in on the component.  Alternatively, use "
"the mouse wheel to zoom in and zoom out. Press the wheel (central)  mouse "
"button to pan horizontally and vertically."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:340
msgid ""
"Try to hover the mouse over the component 'R' and press [r]. The component "
"should rotate. You do not need to actually click on the component to rotate "
"it."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:345
msgid ""
"Sometimes, if your mouse is also over something else, a menu will appear.  "
"You will see the Clarify Selection menu often in KiCad; it allows working on "
"objects that are on top of each other. In this case, tell KiCad you want to "
"perform the action on the 'Symbol ...R...' if the menu appears."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:351
msgid ""
"Right click in the middle of the component and select *Properties* -> **Edit "
"Value**. You can achieve the same result by hovering over the component and "
"pressing [v]. Alternatively, [e] will take you to the more general "
"Properties window. Notice how the right-click menu below shows the hotkeys "
"for all available actions."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:352
#, no-wrap
msgid "Edit component menu"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:352
#, no-wrap
msgid "images/edit_component_dropdown.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:356
msgid ""
"The Edit Value Field window will appear. Replace the current value 'R' with "
"'1 k'. Click OK."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:359
msgid ""
"Do not change the Reference field (R?), this will be done automatically "
"later on. The value above the resistor should now be '1 k'."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:360
#, no-wrap
msgid "Resistor Value"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:360
#, no-wrap
msgid "images/resistor_value.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:364
msgid ""
"To place another resistor, simply click where you want the resistor to "
"appear. The symbol selection window will appear again."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:367
msgid ""
"The resistor you previously chose is now in your history list, appearing as "
"'R'. Click OK and place the component."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:368
#, no-wrap
msgid "Component history"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:368
#, no-wrap
msgid "images/component_history.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:374
msgid ""
"In case you make a mistake and want to delete a component, right click on "
"the component and click 'Delete'. This will remove the component from the "
"schematic. Alternatively, you can hover over the component you want to "
"delete and press [Delete]."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:378
msgid ""
"You can also duplicate a component already on your schematic sheet by "
"hovering over it and pressing [c]. Click where you want to place the new "
"duplicated component."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:384
msgid ""
"Right click on the second resistor. Select 'Drag'.  Reposition the component "
"and left click to drop. The same functionality can be achieved by hovering "
"over the component and by pressing [g].  [r] will rotate the component while "
"[x] and [y] will flip it about its x- or y-axis."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:388
#, no-wrap
msgid ""
"*Right-Click* -> *Move* or [m] is also a valuable option\n"
"for moving anything around, but it is better to use this only for component\n"
"labels and components yet to be connected. We will see later on why this is the case.\n"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:391
msgid ""
"Edit the second resistor by hovering over it and pressing [v]. Replace 'R' "
"with '100'. You can undo any of your editing actions with Ctrl+Z."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:397
msgid ""
"Change the grid size. You have probably noticed that on the schematic sheet "
"all components are snapped onto a large pitch grid. You can easily change "
"the size of the grid by *Right-Click* -> **Grid**.  __In general, it is "
"recommended to use a grid of 50.0 mils for the schematic sheet__."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:406
msgid ""
"We are going to add a component from a library that may not be configured in "
"the default project. In the menu, choose *Preferences* -> **Manage Symbol "
"Libraries**.  In the Symbol Libraries window you can see two tabs: Global "
"Libraries and Project Specific Libraries. Each one has one sym-lib-table "
"file. For a library (.lib file) to be available it must be in one of those "
"sym-lib-table files.  If you have a library file in your file system and "
"it's not yet available, you can add it to either one of the sym-lib-table "
"files.  For practice we will now add a library which already is available."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:417
msgid ""
"Select the Project Specific table.  Click the file browser button below the "
"table.  You need to find where the official KiCad libraries are installed on "
"your computer. Look for a `library` directory containing a hundred of `.dcm` "
"and `.lib` files. Try in `C:\\Program Files (x86)\\KiCad\\share\\` (Windows) "
"and `/usr/share/kicad/library/` (Linux). When you have found the directory, "
"choose and add the 'MCU_Microchip_PIC12.lib' library and close the window.  "
"It will be added to the end of of the list.  Now click its nickname and "
"change it to 'microchip_pic12mcu'.  Close the Symbol Libraries window with "
"OK."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:421
msgid ""
"Repeat the add-component steps, however this time select the "
"'microchip_pic12mcu' library instead of the 'Device' library and pick the "
"'PIC12C508A-ISN' component."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:425
msgid ""
"Hover the mouse over the microcontroller component. Notice that [x] and [y] "
"again flip the component. Keep the symbol mirrored around the Y axis so that "
"the pins G0 and G1 point to right."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:428
msgid ""
"Repeat the add-component steps, this time choosing the 'Device' library and "
"picking the 'LED' component from it."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:430
msgid "Organise all components on your schematic sheet as shown below."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:431
#, no-wrap
msgid "gsik_tutorial1_010_png"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:431
#, no-wrap
msgid "images/gsik_tutorial1_010.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:438
msgid ""
"We now need to create the schematic component 'MYCONN3' for our 3-pin "
"connector. You can jump to the section titled <<make-schematic-components-in-"
"kicad,Make Schematic Components in KiCad>> to learn how to make this "
"component from scratch and then return to this section to continue with the "
"board."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:441
msgid ""
"You can now place the freshly made component. Press [a] and pick the "
"'MYCONN3' component in the 'myLib' library."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:447
msgid ""
"The component identifier 'J?' will appear under the 'MYCONN3' label.  If you "
"want to change its position, right click on 'J?' and click on 'Move "
"Field' (equivalent to [m]). It might be helpful to zoom in before/while "
"doing this. Reposition 'J?' under the component as shown below. Labels can "
"be moved around as many times as you please."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:448
#, no-wrap
msgid "gsik_myconn3_s_png"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:448
#, no-wrap
msgid "images/gsik_myconn3_s.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:455
msgid ""
"It is time to place the power and ground symbols. Click on the 'Place power "
"port' button image:images/icons/add_power.png[add_power_png] on the right "
"toolbar. Alternatively, press [p]. In the component selection window, scroll "
"down and select 'VCC' from the 'power' library.  Click OK."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:461
msgid ""
"Click above the pin of the 1 k resistor to place the VCC part. Click on the "
"area above the microcontroller 'VDD'. In the 'Component Selection history' "
"section select 'VCC' and place it next to the VDD pin. Repeat the add "
"process again and place a VCC part above the VCC pin of 'MYCONN3'. Move "
"references and values out of the way if needed."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:466
msgid ""
"Repeat the add-pin steps but this time select the GND part. Place a GND part "
"under the GND pin of 'MYCONN3'. Place another GND symbol on the left of the "
"VSS pin of the microcontroller. Your schematic should now look something "
"like this:"
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:467
#, no-wrap
msgid "gsik_tutorial1_020_png"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:467
#, no-wrap
msgid "images/gsik_tutorial1_020.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:472
msgid ""
"Next, we will wire all our components. Click on the 'Place wire' icon image:"
"images/icons/add_line.png[Place wire] on the right toolbar."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:477
msgid ""
"Be careful not to pick 'Place bus', which appears directly beneath this "
"button but has thicker lines. The section <<bus-connections-in-kicad,Bus "
"Connections in KiCad>> will explain how to use a bus section."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:483
msgid ""
"Click on the little circle at the end of pin 7 of the microcontroller and "
"then click on the little circle on pin 1 of the LED.  Click once when you "
"are drawing the wire to create a corner.  You can zoom in while you are "
"placing the connection."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:487
msgid ""
"If you want to reposition wired components, it is important to use [g] (to "
"grab) and not [m] (to move). Using grab will keep the wires connected. "
"Review step 24 in case you have forgotten how to move a component."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:488
#, no-wrap
msgid "gsik_tutorial1_030_png"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:488
#, no-wrap
msgid "images/gsik_tutorial1_030.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:495
msgid ""
"Repeat this process and wire up all the other components as shown below. To "
"terminate a wire just double-click. When wiring up the VCC and GND symbols, "
"the wire should touch the bottom of the VCC symbol and the middle top of the "
"GND symbol. See the screenshot below."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:496
#, no-wrap
msgid "gsik_tutorial1_040_png"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:496
#, no-wrap
msgid "images/gsik_tutorial1_040.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:502
msgid ""
"We will now consider an alternative way of making a connection using labels. "
"Pick a net labelling tool by clicking on the 'Place net label' icon image:"
"images/icons/add_line_label.png[add_line_label_png] on the right toolbar. "
"You can also use [l]."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:505
msgid ""
"Click in the middle of the wire connected to pin 6 of the microcontroller. "
"Name this label 'INPUT'."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:514
msgid ""
"Follow the same procedure and place another label on line on the right of "
"the 100 ohm resistor. Also name it 'INPUT'. The two labels, having the same "
"name, create an invisible connection between pin 6 of the PIC and the 100 "
"ohm resistor. This is a useful technique when connecting wires in a complex "
"design where drawing the lines would make the whole schematic messier. To "
"place a label you do not necessarily need a wire, you can simply attach the "
"label to a pin."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:520
msgid ""
"Labels can also be used to simply label wires for informative purposes. "
"Place a label on pin 7 of the PIC. Enter the name 'uCtoLED'.  Name the wire "
"between the resistor and the LED as 'LEDtoR'. Name the wire between "
"'MYCONN3' and the resistor as 'INPUTtoR'."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:523
msgid ""
"You do not have to label the VCC and GND lines because the labels are "
"implied from the power objects they are connected to."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:525
msgid "Below you can see what the final result should look like."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:526
#, no-wrap
msgid "gsik_tutorial1_050_png"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:526
#, no-wrap
msgid "images/gsik_tutorial1_050.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:533
msgid ""
"Let's now deal with unconnected wires. Any pin or wire that is not connected "
"will generate a warning when checked by KiCad. To avoid these warnings you "
"can either instruct the program that the unconnected wires are deliberate or "
"manually flag each unconnected wire or pin as unconnected."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:538
msgid ""
"Click on the 'Place no connection flag' icon image:images/icons/noconn."
"png[noconn_png] on the right toolbar. Click on pins 2, 3, 4 and 5. An X will "
"appear to signify that the lack of a wire connection is intentional."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:539
#, no-wrap
msgid "gsik_tutorial1_060_png"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:539
#, no-wrap
msgid "images/gsik_tutorial1_060.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:547
msgid ""
"Some components have power pins that are invisible. You can make them "
"visible by clicking on the 'Show hidden pins' icon image:images/icons/"
"hidden_pin.png[hidden_pin_png] on the left toolbar. Hidden power pins get "
"automatically connected if VCC and GND naming is respected. Generally "
"speaking, you should try not to make hidden power pins."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:552
msgid ""
"It is now necessary to add a 'Power Flag' to indicate to KiCad that power "
"comes in from somewhere. Press [a] and search for 'PWR_FLAG' which is in "
"'power' library. Place two of them.  Connect them to a GND pin and to VCC as "
"shown below."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:553
#, no-wrap
msgid "gsik_tutorial1_070_png"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:553
#, no-wrap
msgid "images/gsik_tutorial1_070.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:557
msgid ""
"This will avoid the classic schematic checking warning: _Pin connected to "
"some other pins but no pin to drive it_."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:561
msgid ""
"Sometimes it is good to write comments here and there. To add comments on "
"the schematic use the 'Place text' icon image:images/icons/text."
"png[text_png] on the right toolbar."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:567
msgid ""
"All components now need to have unique identifiers. In fact, many of our "
"components are still named 'R?' or 'J?'. Identifier assignation can be done "
"automatically by clicking on the 'Annotate schematic symbols' icon image:"
"images/icons/annotate.png[annotate_png] on the top toolbar."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:574
msgid ""
"In the Annotate Schematic window, select 'Use the entire schematic' and "
"click on the 'Annotate' button. Click 'Close'.  Notice how all the '?' have "
"been replaced with numbers. Each identifier is now unique. In our example, "
"they have been named 'R1', 'R2', 'U1', 'D1' and 'J1'."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:583
msgid ""
"We will now check our schematic for errors. Click on the 'Perform electrical "
"rules check' icon image:images/icons/erc.png[erc_png] on the top toolbar. "
"Click on the 'Run' button. A report informing you of any errors or warnings "
"such as disconnected wires is generated. You should have 0 Errors and 0 "
"Warnings. In case of errors or warnings, a small green arrow will appear on "
"the schematic in the position where the error or the warning is located. "
"Check 'Create ERC file report' and press the 'Run' button again to receive "
"more information about the errors."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:587
msgid ""
"If you have a warning with \"No default editor found, you must choose it\", "
"try setting the path to `c:\\windows\\notepad.exe` (windows) or `/usr/bin/"
"gedit` (Linux)."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:593
msgid ""
"The schematic is now finished. We can now create a Netlist file to which we "
"will add the footprint of each component. Click on the 'Generate netlist' "
"icon image:images/icons/netlist.png[netlist_png] on the top toolbar. Click "
"on the 'Generate Netlist' button and save under the default file name."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:598
msgid ""
"Netlist was necessary in previous versions of KiCad.  In the recent versions "
"you can ignore it and instead use *Tools* -> *Update PCB from Schematic*. If "
"you do that you have to assign footprints to symbols first."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:603
msgid ""
"After generating the Netlist file, click on the 'Run Cvpcb' icon image:"
"images/icons/cvpcb.png[cvpcb_png] on the top toolbar. If a missing file "
"error window pops up, just ignore it and click OK."
msgstr ""

#. type: delimited block =
#: getting_started_in_kicad.adoc:607
msgid "There are many more ways to add footprints to symbols."
msgstr ""

#. type: delimited block =
#: getting_started_in_kicad.adoc:609
msgid "Right click on a symbol -> *Properties* -> *Edit Footprint*"
msgstr ""

#. type: delimited block =
#: getting_started_in_kicad.adoc:611
msgid ""
"Double click on a symbol, or right click on a symbol -> *Properties* -> "
"*Edit Properties* -> Footprint"
msgstr ""

#. type: delimited block =
#: getting_started_in_kicad.adoc:612
#, no-wrap
msgid "*Tools* -> *Edit Symbol Fields*\n"
msgstr ""

#. type: delimited block =
#: getting_started_in_kicad.adoc:614
#, no-wrap
msgid ""
"Check _Show footprint previews in symbol chooser_ in Eeschema's preferences\n"
"and select the footprint when you select a new symbol to place\n"
msgstr ""

#.  missing image here?
#. type: Plain text
#: getting_started_in_kicad.adoc:621
msgid ""
"_Cvpcb_ allows you to link all the components in your schematic with "
"footprints in the KiCad library. The pane on the center shows all the "
"components used in your schematic. Here select 'D1'. In the pane on the "
"right you have all the available footprints, here scroll down to 'LED_THT:"
"LED-D5.0mm' and double click on it."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:629
msgid ""
"It is possible that the pane on the right shows only a selected subgroup of "
"available footprints. This is because KiCad is trying to suggest to you a "
"subset of suitable footprints. Click on the icons image:images/icons/"
"module_filtered_list.png[module_filtered_list_png], image:images/icons/"
"module_pin_filtered_list.png[module_pin_filtered_list_png] and image:images/"
"icons/module_library_list.png[module_library_list_png] to enable or disable "
"these filters."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:634
msgid ""
"For 'U1' select the 'Package_DIP:DIP-8_W7.62mm' footprint.  For 'J1' select "
"the 'Connector:Banana_Jack_3Pin' footprint.  For 'R1' and 'R2' select the "
"'Resistor_THT:R_Axial_DIN0207_L6.3mm_D2.5mm_P2.54mm_Vertical' footprint."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:639
msgid ""
"If you are interested in knowing what the footprint you are choosing looks "
"like, you can click on the 'View selected footprint' icon image:images/icons/"
"show_footprint.png[show_footprint_png] for a preview of the current "
"footprint."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:643
msgid ""
"You are done. You can save the schematic now by clicking *File* -> **Save "
"Schematic** or with the button 'Apply, Save Schematic & Continue'."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:651
msgid ""
"You can close _Cvpcb_ and go back to the _Eeschema_ schematic editor. If you "
"didn't save it in Cvpcb save it now by clicking on *File* -> **Save**. "
"Create the netlist again. Your netlist file has now been updated with all "
"the footprints. Note that if you are missing the footprint of any device, "
"you will need to make your own footprints. This will be explained in a later "
"section of this document."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:657
msgid ""
"Now every symbol has a footprint. Instead of the net list and the next two "
"steps you can use *Tools* -> *Update PCB from Schematic*.  If you do that, "
"Pcbnew is opened with _Update PCB from Schematic_ dialog.  Click _Update "
"PCB_.  Then You can follow the instructions in the Pcbnew section of this "
"tutorial."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:660
msgid ""
"Switch to the KiCad project manager.  You can see the net list file in the "
"file list."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:664
msgid ""
"The netlist file describes all components and their respective pin "
"connections. The netlist file is actually a text file that you can easily "
"inspect, edit or script."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:667
msgid ""
"Library files (__*.lib__) are text files too and they are also easily "
"editable or scriptable."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:674
msgid ""
"To create a Bill Of Materials (BOM), go to the _Eeschema_ schematic editor "
"and click on the 'Generate bill of materials' icon image:images/icons/bom."
"png[bom_png] on the top toolbar.  By default there is no plugin active. You "
"add one, by clicking on *Add Plugin* button. Select the *.xsl file you want "
"to use, in this case, we select __bom2csv.xsl__."
msgstr ""

#. type: delimited block =
#: getting_started_in_kicad.adoc:678
#, no-wrap
msgid "*Linux:*\n"
msgstr ""

#. type: delimited block =
#: getting_started_in_kicad.adoc:680
msgid "If xsltproc is missing, you can download and install it with:"
msgstr ""

#. type: delimited block =
#: getting_started_in_kicad.adoc:682
#, no-wrap
msgid " sudo apt-get install xsltproc\n"
msgstr ""

#. type: delimited block =
#: getting_started_in_kicad.adoc:684
msgid "for a Debian derived distro like Ubuntu, or"
msgstr ""

#. type: delimited block =
#: getting_started_in_kicad.adoc:686
#, no-wrap
msgid " sudo yum install xsltproc\n"
msgstr ""

#. type: delimited block =
#: getting_started_in_kicad.adoc:689
msgid ""
"for a RedHat derived distro. If you use neither of the two kind of distro, "
"use your distro package manager command to install the xsltproc package."
msgstr ""

#. type: delimited block =
#: getting_started_in_kicad.adoc:691
msgid "xsl files are located at: _/usr/lib/kicad/plugins/_."
msgstr ""

#. type: delimited block =
#: getting_started_in_kicad.adoc:693
#, no-wrap
msgid "*Apple OS X:*\n"
msgstr ""

#. type: delimited block =
#: getting_started_in_kicad.adoc:696
msgid ""
"If xsltproc is missing, you can either install the Apple Xcode tool from the "
"Apple site that should contain it, or download and install it with:"
msgstr ""

#. type: delimited block =
#: getting_started_in_kicad.adoc:698
#, no-wrap
msgid " brew install libxslt\n"
msgstr ""

#. type: delimited block =
#: getting_started_in_kicad.adoc:700
msgid ""
"xsl files are located at: _/Library/Application Support/kicad/plugins/_."
msgstr ""

#. type: delimited block =
#: getting_started_in_kicad.adoc:702
#, no-wrap
msgid "*Windows:*\n"
msgstr ""

#. type: delimited block =
#: getting_started_in_kicad.adoc:706
msgid ""
"xsltproc.exe and the included xsl files will be located at _＜KiCad install "
"directory＞\\bin_ and _＜KiCad install directory＞\\bin\\scripting"
"\\plugins_, respectively."
msgstr ""

#. type: delimited block =
#: getting_started_in_kicad.adoc:708
#, no-wrap
msgid "*All platforms:*\n"
msgstr ""

#. type: delimited block =
#: getting_started_in_kicad.adoc:710
msgid "You can get the latest bom2csv.xsl via:"
msgstr ""

#. type: delimited block =
#: getting_started_in_kicad.adoc:712
msgid ""
"https://raw.githubusercontent.com/KiCad/kicad-source-mirror/master/eeschema/"
"plugins/xsl_scripts/bom2csv.xsl"
msgstr ""

#. type: Block title
#: getting_started_in_kicad.adoc:714
#, no-wrap
msgid "KiCad automatically generates the command, for example:"
msgstr ""

#. type: delimited block -
#: getting_started_in_kicad.adoc:717
#, no-wrap
msgid "xsltproc -o \"%O\" \"/home/<user>/kicad/eeschema/plugins/bom2csv.xsl\" \"%I\"\n"
msgstr ""

#. type: Block title
#: getting_started_in_kicad.adoc:719
#, no-wrap
msgid "You may want to add the extension, so change this command line to:"
msgstr ""

#. type: delimited block -
#: getting_started_in_kicad.adoc:722
#, no-wrap
msgid "xsltproc -o \"%O.csv\" \"/home/<user>/kicad/eeschema/plugins/bom2csv.xsl\" \"%I\"\n"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:725
msgid "Press Help button for more info."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:729
msgid ""
"Now press 'Generate'. The file (same name as your project) is located in "
"your project folder.  Open the **.csv* file with LibreOffice Calc or Excel. "
"An import window will appear, press OK."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:733
msgid ""
"You are now ready to move to the PCB layout part, which is presented in the "
"next section. However, before moving on let's take a quick look at how to "
"connect component pins using a bus line."
msgstr ""

#. type: Title ===
#: getting_started_in_kicad.adoc:735
#, no-wrap
msgid "Bus connections in KiCad"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:741
msgid ""
"Sometimes you might need to connect several sequential pins of component A "
"with some other sequential pins of component B. In this case you have two "
"options: the labelling method we already saw or the use of a bus connection. "
"Let's see how to do it."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:748
msgid ""
"Let us suppose that you have three 4-pin connectors that you want to connect "
"together pin to pin. Use the label option (press [l])  to label pin 4 of the "
"P4 part. Name this label 'a1'. Now press [Insert] to have the same item "
"automatically added on the pin below pin 4 (PIN 3). Notice how the label is "
"automatically renamed 'a2'."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:752
msgid ""
"Press [Insert] two more times. This key corresponds to the action 'Repeat "
"last item' and it is an infinitely useful command that can make your life a "
"lot easier."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:763
msgid ""
"Repeat the same labelling action on the two other connectors CONN_2 and "
"CONN_3 and you are done. If you proceed and make a PCB you will see that the "
"three connectors are connected to each other. Figure 2 shows the result of "
"what we described. For aesthetic purposes it is also possible to add a "
"series of 'Place wire to bus entry' using the icon image:images/icons/"
"add_line2bus.png[Place wire to bus entry] and bus line using the icon image:"
"images/icons/add_bus2bus.png[Place bus to bus entry], as shown in Figure 3. "
"Mind, however, that there will be no effect on the PCB."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:767
msgid ""
"It should be pointed out that the short wire attached to the pins in Figure "
"2 is not strictly necessary. In fact, the labels could have been applied "
"directly to the pins."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:774
msgid ""
"Let's take it one step further and suppose that you have a fourth connector "
"named CONN_4 and, for whatever reason, its labelling happens to be a little "
"different (b1, b2, b3, b4). Now we want to connect _Bus a_ with _Bus b_ in a "
"pin to pin manner. We want to do that without using pin labelling (which is "
"also possible) but by instead using labelling on the bus line, with one "
"label per bus."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:781
msgid ""
"Connect and label CONN_4 using the labelling method explained before. Name "
"the pins b1, b2, b3 and b4. Connect the pin to a series of 'Wire to bus "
"entry' using the icon image:images/icons/add_line2bus.png[add_line2bus_png] "
"and to a bus line using the icon image:images/icons/add_bus."
"png[add_bus_png]. See Figure 4."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:784
msgid "Put a label (press [l]) on the bus of CONN_4 and name it 'b[1..4]'."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:787
msgid "Put a label (press [l]) on the previous bus and name it 'a[1..4]'."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:790
msgid ""
"What we can now do is connect bus a[1..4] with bus b[1..4] using a bus line "
"with the button image:images/icons/add_bus.png[add_bus_png]."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:794
msgid ""
"By connecting the two buses together, pin a1 will be automatically connected "
"to pin b1, a2 will be connected to b2 and so on. Figure 4 shows what the "
"final result looks like."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:799
msgid ""
"The 'Repeat last item' option accessible via [Insert] can be successfully "
"used to repeat period item insertions. For instance, the short wires "
"connected to all pins in Figure 2, Figure 3 and Figure 4 have been placed "
"with this option."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:803
msgid ""
"The 'Repeat last item' option accessible via [Insert] has also been "
"extensively used to place the many series of 'Wire to bus entry' using the "
"icon image:images/icons/add_line2bus.png[add_line2bus_png]."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:804
#, no-wrap
msgid "gsik_bus_connection_png"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:804
#, no-wrap
msgid "images/gsik_bus_connection.png"
msgstr ""

#. type: Title ==
#: getting_started_in_kicad.adoc:807
#, no-wrap
msgid "Layout printed circuit boards"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:811
msgid ""
"It is now time to use the netlist file you generated to lay out the PCB.  "
"This is done with the _Pcbnew_ tool."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:816
msgid ""
"If you used _Update PCB from Schematic_ from _Eeschema_ you don't need the "
"netlist and step 5.  You can now drop the footprints into the board as in "
"steps 6 and 7, then enter sheet information and design rules with steps "
"2...4."
msgstr ""

#. type: Title ===
#: getting_started_in_kicad.adoc:818
#, no-wrap
msgid "Using Pcbnew"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:826
msgid ""
"From the KiCad project manager, click on the 'Pcb layout editor' icon image:"
"images/icons/pcbnew.png[pcbnew_png]. You can also use the corresponding "
"toolbar button from _Eeschema_.  The 'Pcbnew' window will open. If you get a "
"message saying that a _*.kicad_pcb_ file does not exist and asks if you want "
"to create it, just click Yes."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:831
msgid ""
"Begin by entering some schematic information. Click on the 'Page settings' "
"icon image:images/icons/sheetset.png[sheetset_png] on the top toolbar. Set "
"the appropriate 'paper size' ('A4','8.5x11' etc.)  and 'title' as "
"'Tutorial1'."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:840
msgid ""
"It is a good idea to start by setting the *clearance* and the *minimum track "
"width* to those required by your PCB manufacturer. In general you can set "
"the clearance to '0.25' and the minimum track width to '0.25'. Click on the "
"*Setup* -> *Design Rules* menu. If it does not show already, click on the "
"'Net Classes Editor' tab. Change the 'Clearance' field at the top of the "
"window to '0.25' and the 'Track Width' field to '0.25' as shown below. "
"Measurements here are in mm."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:841
#, no-wrap
msgid "Design Rules Window"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:841
#, no-wrap
msgid "images/design_rules.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:846
msgid ""
"Click on the 'Global Design Rules' tab and set 'Minimum track width' to "
"'0.25'. Click the OK button to commit your changes and close the Design "
"Rules Editor window."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:853
msgid ""
"Now we will import the netlist file if you created one.  Click on the 'Read "
"netlist' icon image:images/icons/netlist.png[netlist_png] on the top "
"toolbar. The netlist file 'tutorial1.net' should be selected in the 'Netlist "
"file' field if it was created from Eeschema.  Click on 'Read Current "
"Netlist'. Then click the 'Close' button."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:856
msgid ""
"All components should now be visible. They are selected and follow the mouse "
"cursor."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:860
msgid ""
"Move the components to the middle of the board. If necessary you can zoom in "
"and out while you move the components. Click the left mouse button."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:866
msgid ""
"All components are connected via a thin group of wires called __ratsnest__. "
"Make sure that the 'Show/hide board ratsnest' button image:images/icons/"
"general_ratsnest.png[general_ratsnest_png] is pressed. In this way you can "
"see the ratsnest linking all components."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:873
msgid ""
"You can move each component by hovering over it and pressing [m].  Click "
"where you want to place them. Alternatively you can select a component by "
"clicking on it and then drag it.  Press [r] to rotate a component.  Move all "
"components around until you minimise the number of wire crossovers."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:874
#, no-wrap
msgid "gsik_tutorial1_080_png"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:874
#, no-wrap
msgid "images/gsik_tutorial1_080.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:881
msgid ""
"Note how one pin of the 100 ohm resistor is connected to pin 6 of the PIC "
"component. This is the result of the labelling method used to connect pins. "
"Labels are often preferred to actual wires because they make the schematic "
"much less messy."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:889
msgid ""
"Now we will define the edge of the PCB. Select the 'Edge.Cuts' layer from "
"the drop-down menu in the top toolbar. Click on the 'Add graphic lines' icon "
"image:images/icons/add_dashed_line.png[add_dashed_line_png] on the right "
"toolbar. Trace around the edge of the board, clicking at each corner, and "
"remember to leave a small gap between the edge of the green and the edge of "
"the PCB."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:890
#, no-wrap
msgid "Select the Edge.Cuts layer"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:890
#, no-wrap
msgid "images/select_edge_cuts.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:895
msgid ""
"Next, connect up all the wires except GND. In fact, we will connect all GND "
"connections in one go using a ground plane placed on the bottom copper "
"(called __B.Cu__) of the board."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:899
msgid ""
"Now we must choose which copper layer we want to work on. Select 'F.Cu "
"(PgUp)' in the drop-down menu on the top toolbar. This is the front top "
"copper layer."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:900
#, no-wrap
msgid "Select the Front top copper layer"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:900
#, no-wrap
msgid "images/select_top_copper.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:907
msgid ""
"If you decide, for instance, to do a 4 layer PCB instead, go to *Setup* -> "
"*Layers Setup* and change 'Copper Layers' to 4. In the 'Layers' table you "
"can name layers and decide what they can be used for.  Notice that there are "
"very useful presets that can be selected via the 'Preset Layer Groupings' "
"menu."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:915
msgid ""
"Click on the 'Route tracks' icon image:images/icons/add_tracks."
"png[add_tracks_png] on the right toolbar. Click on pin 1 of 'J1' and run a "
"track to pad 'R2'. Double-click to set the point where the track will end. "
"The width of this track will be the default 0.250 mm. You can change the "
"track width from the drop-down menu in the top toolbar. Mind that by default "
"you have only one track width available."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:916
#, no-wrap
msgid "pcbnew_select_track_width_png"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:916
#, no-wrap
msgid "images/pcbnew_select_track_width.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:923
msgid ""
"If you would like to add more track widths go to: *Setup* -> *Design Rules* -"
"> *Global Design Rules* tab and at the bottom right of this window add any "
"other width you would like to have available. You can then choose the widths "
"of the track from the drop-down menu while you lay out your board. See the "
"example below (inches)."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:924
#, no-wrap
msgid "custom_tracks_width_png"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:924
#, no-wrap
msgid "images/custom_tracks_width.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:932
msgid ""
"Alternatively, you can add a Net Class in which you specify a set of "
"options. Go to *Setup* -> *Design Rules* -> *Net Classes Editor* and add a "
"new class called 'power'. Change the track width from 8 mil (indicated as "
"0.0080) to 24 mil (indicated as 0.0240). Next, add everything but ground to "
"the 'power' class (select 'default' at left and 'power' at right and use the "
"arrows)."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:936
msgid ""
"If you want to change the grid size, *Right click* -> **Grid**.  Be sure to "
"select the appropriate grid size before or after laying down the components "
"and connecting them together with tracks."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:939
msgid ""
"Repeat this process until all wires, except pin 3 of J1, are connected. Your "
"board should look like the example below."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:940
#, no-wrap
msgid "gsik_tutorial1_090_png"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:940
#, no-wrap
msgid "images/gsik_tutorial1_090.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:948
msgid ""
"Let's now run a track on the other copper side of the PCB. Select 'B.Cu' in "
"the drop-down menu on the top toolbar. Click on the 'Route tracks' icon "
"image:images/icons/add_tracks.png[add_tracks_png]. Draw a track between pin "
"3 of J1 and pin 8 of U1. This is actually not necessary since we could do "
"this with the ground plane. Notice how the colour of the track has changed."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:954
#, no-wrap
msgid ""
"**Go from pin A to pin B by changing layer**. It is possible to\n"
"change the copper plane while you are running a track by placing a\n"
"via.  While you are running a track on the upper copper plane,\n"
"right click and select 'Place Via' or simply press [v]. This will\n"
"take you to the bottom layer where you can complete your track.\n"
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:955
#, no-wrap
msgid "place_a_via_png"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:955
#, no-wrap
msgid "images/place_a_via.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:962
msgid ""
"When you want to inspect a particular connection you can click on the "
"'Highlight net' icon image:images/icons/net_highlight.png[net_highlight_png] "
"on the right toolbar.  Click on pin 3 of J1. The track itself and all pads "
"connected to it should become highlighted."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:970
msgid ""
"Now we will make a ground plane that will be connected to all GND pins. "
"Click on the 'Add filled zones' icon image:images/icons/add_zone."
"png[add_zone_png] on the right toolbar. We are going to trace a rectangle "
"around the board, so click where you want one of the corners to be. In the "
"dialogue that appears, set 'Default pad connection' to 'Thermal relief' and "
"'Outline slope' to 'H,V and 45 deg only' and click OK."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:976
msgid ""
"Trace around the outline of the board by clicking each corner in rotation.  "
"Finish your rectangle by clicking the first corner second time. Right click "
"inside the area you have just traced.  Click on 'Zones'->'Fill or Refill All "
"Zones'. The board should fill in with green and look something like this:"
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:977
#, no-wrap
msgid "gsik_tutorial1_100_png"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:977
#, no-wrap
msgid "images/gsik_tutorial1_100.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:984
msgid ""
"Run the design rules checker by clicking on the 'Perform design rules check' "
"icon image:images/icons/drc.png[drc_png] on the top toolbar.  Click on "
"'Start DRC'. There should be no errors. Click on 'List Unconnected'. There "
"should be no unconnected items. Click OK to close the DRC Control dialogue."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:987
msgid ""
"Save your file by clicking on *File* -> **Save**. To admire your board in "
"3D, click on *View* -> **3D Viewer**."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:988
#, no-wrap
msgid "pcbnew_3d_viewer_png"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:988
#, no-wrap
msgid "images/pcbnew_3d_viewer.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:991
msgid "You can drag your mouse around to rotate the PCB."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:994
msgid ""
"Your board is complete. To send it off to a manufacturer you will need to "
"generate all Gerber files."
msgstr ""

#. type: Title ===
#: getting_started_in_kicad.adoc:996
#, no-wrap
msgid "Generate Gerber files"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1001
msgid ""
"Once your PCB is complete, you can generate Gerber files for each layer and "
"send them to your favourite PCB manufacturer, who will make the board for "
"you."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1003
msgid "From KiCad, open the _Pcbnew_ board editor."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1007
msgid ""
"Click on *File* -> **Plot**. Select 'Gerber' as the 'Plot format' and select "
"the folder in which to put all Gerber files.  Proceed by clicking on the "
"'Plot' button."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1010
msgid ""
"To generate the drill file, from _Pcbnew_ go again to the *File* -> *Plot* "
"option. Default settings should be fine."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1013
msgid ""
"These are the layers you need to select for making a typical 2-layer PCB:"
msgstr ""

#. type: delimited block |
#: getting_started_in_kicad.adoc:1024
#, no-wrap
msgid ""
"|Layer |KiCad Layer Name |Default Gerber Extension\n"
"    |\"Use Protel filename extensions\" is enabled\n"
"|Bottom Layer |B.Cu |.GBR |.GBL\n"
"|Top Layer |F.Cu |.GBR |.GTL\n"
"|Top Overlay |F.SilkS |.GBR |.GTO\n"
"|Bottom Solder Resist |B.Mask |.GBR |.GBS\n"
"|Top Solder Resist |F.Mask |.GBR |.GTS\n"
"|Edges |Edge.Cuts |.GBR |.GM1\n"
msgstr ""

#. type: Title ===
#: getting_started_in_kicad.adoc:1027
#, no-wrap
msgid "Using GerbView"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1036
msgid ""
"To view all your Gerber files go to the KiCad project manager and click on "
"the 'GerbView' icon.  On the drop-down menu or in the Layers manager select "
"'Graphic layer 1'.  Click on *File* -> *Open Gerber file(s)* or click on the "
"icon image:images/icons/gerber_file.png[gerber_file_png]. Select and open "
"all generated Gerber files. Note how they all get displayed one on top of "
"the other."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1038
msgid "Open the drill files with *File* -> *Open Excellon Drill File(s)*."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1041
msgid ""
"Use the Layers manager on the right to select/deselect which layer to show.  "
"Carefully inspect each layer before sending them for production."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1044
msgid ""
"The view works similarly to Pcbnew. Right click inside the view and click "
"'Grid' to change the grid."
msgstr ""

#. type: Title ===
#: getting_started_in_kicad.adoc:1046
#, no-wrap
msgid "Automatically route with FreeRouter"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1053
msgid ""
"Routing a board by hand is quick and fun, however, for a board with lots of "
"components you might want to use an autorouter. Remember that you should "
"first route critical traces by hand and then set the autorouter to do the "
"boring bits. Its work will only account for the unrouted traces. The "
"autorouter we will use here is FreeRouting."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1058
msgid ""
"FreeRouting is an open source java application.  Currently FreeRouting "
"exists in several more or less identical copies which you can find by doing "
"an internet search for \"freerouting\".  It may be found in source only form "
"or as a precompiled java package."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1063
msgid ""
"From _Pcbnew_ click on *File* -> *Export* -> *Specctra DSN* and save the "
"file locally.  Launch FreeRouter and click on the 'Open Your Own Design' "
"button, browse for the _dsn_ file and load it."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1069
msgid ""
"FreeRouter has some features that KiCad does not currently have, both for "
"manual routing and for automatic routing. FreeRouter operates in two main "
"steps: first, routing the board and then optimising it. Full optimisation "
"can take a long time, however you can stop it at any time need be."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1077
msgid ""
"You can start the automatic routing by clicking on the 'Autorouter' button "
"on the top bar. The bottom bar gives you information about the on-going "
"routing process. If the 'Pass' count gets above 30, your board probably can "
"not be autorouted with this router. Spread your components out more or "
"rotate them better and try again. The goal in rotation and position of parts "
"is to lower the number of crossed airlines in the ratsnest."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1082
msgid ""
"Making a left-click on the mouse can stop the automatic routing and "
"automatically start the optimisation process. Another left-click will stop "
"the optimisation process. Unless you really need to stop, it is better to "
"let FreeRouter finish its job."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1086
msgid ""
"Click on the *File* -> *Export Specctra Session File* menu and save the "
"board file with the _.ses_ extension. You do not really need to save the "
"FreeRouter rules file."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1090
msgid ""
"Back to __Pcbnew__. You can import your freshly routed board by clicking on "
"*File* -> *Import* -> *Spectra Session* and selecting your _.ses_ file."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1095
msgid ""
"If there is any routed trace that you do not like, you can delete it and re-"
"route it again, using [Delete] and the routing tool, which is the 'Route "
"tracks' icon image:images/icons/add_tracks.png[Add Track icon] on the right "
"toolbar."
msgstr ""

#. type: Title ==
#: getting_started_in_kicad.adoc:1097
#, no-wrap
msgid "Forward annotation in KiCad"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1103
msgid ""
"Once you have completed your electronic schematic, the footprint assignment, "
"the board layout and generated the Gerber files, you are ready to send "
"everything to a PCB manufacturer so that your board can become reality."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1111
msgid ""
"Often, this linear work-flow turns out to be not so uni-directional. For "
"instance, when you have to modify/extend a board for which you or others "
"have already completed this work-flow, it is possible that you need to move "
"components around, replace them with others, change footprints and much "
"more. During this modification process, what you do not want to do is to re-"
"route the whole board again from scratch. Instead, this is how you do it:"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1114
msgid ""
"Let's suppose that you want to replace a hypothetical connector CON1 with "
"CON2."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1116
msgid "You already have a completed schematic and a fully routed PCB."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1122
msgid ""
"From KiCad, start __Eeschema__, make your modifications by deleting CON1 and "
"adding CON2. Save your schematic project with the icon image:images/icons/"
"save.png[Save icon] and c lick on the 'Netlist generation' icon image:images/"
"icons/netlist.png[netlist_png] on the top toolbar."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1125
msgid ""
"Click on 'Netlist' then on 'save'. Save to the default file name.  You have "
"to rewrite the old one."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1131
msgid ""
"Now assign a footprint to CON2. Click on the 'Run Cvpcb' icon image:images/"
"icons/cvpcb.png[cvpcb] on the top toolbar. Assign the footprint to the new "
"device CON2. The rest of the components still have the previous footprints "
"assigned to them. Close __Cvpcb__."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1134
msgid ""
"Back in the schematic editor, save the project by clicking on 'File' -> "
"'Save Whole Schematic Project'. Close the schematic editor."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1137
msgid ""
"From the KiCad project manager, click on the 'Pcbnew' icon. The 'Pcbnew' "
"window will open."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1141
msgid ""
"The old, already routed, board should automatically open. Let's import the "
"new netlist file. Click on the 'Read Netlist' icon image:images/icons/"
"netlist.png[netlist_png] on the top toolbar."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1145
msgid ""
"Click on the 'Browse Netlist Files' button, select the netlist file in the "
"file selection dialogue, and click on 'Read Current Netlist'.  Then click "
"the 'Close' button."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1150
msgid ""
"At this point you should be able to see a layout with all previous "
"components already routed. On the top left corner you should see all "
"unrouted components, in our case the CON2. Select CON2 with the mouse.  Move "
"the component to the middle of the board."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1153
msgid ""
"Place CON2 and route it. Once done, save and proceed with the Gerber file "
"generation as usual."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1161
msgid ""
"The process described here can easily be repeated as many times as you need. "
"Beside the Forward Annotation method described above, there is another "
"method known as Backward Annotation. This method allows you to make "
"modifications to your already routed PCB from Pcbnew and updates those "
"modifications in your schematic and netlist file. The Backward Annotation "
"method, however, is not that useful and is therefore not described here."
msgstr ""

#. type: Title ==
#: getting_started_in_kicad.adoc:1163
#, no-wrap
msgid "Make schematic symbols in KiCad"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1170
msgid ""
"Sometimes a symbol that you want to place on your schematic is not in a "
"KiCad library. This is quite normal and there is no reason to worry. In this "
"section we will see how a new schematic symbol can be quickly created with "
"KiCad. Nevertheless, remember that you can always find KiCad components on "
"the Internet."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1176
msgid ""
"In KiCad, a symbol is a piece of text that starts with 'DEF' and ends with "
"'ENDDEF'. One or more symbols are normally placed in a library file with the "
"extension __.lib__. If you want to add symbols to a library file you can "
"just use the cut and paste commands of a text editor."
msgstr ""

#. type: Title ===
#: getting_started_in_kicad.adoc:1178
#, no-wrap
msgid "Using Component Library Editor"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1184
msgid ""
"We can use the _Component Library Editor_ (part of __Eeschema__)  to make "
"new components. In our project folder 'tutorial1' let's create a folder "
"named 'library'. Inside we will put our new library file _myLib.lib_ as soon "
"as we have created our new component."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1199
msgid ""
"Now we can start creating our new component. From KiCad, start __Eeschema__, "
"click on the 'Library Editor' icon image:images/icons/libedit."
"png[libedit_png] and then click on the 'New component' icon image:images/"
"icons/new_component.png[new_component_png]. The Component Properties window "
"will appear. Name the new component 'MYCONN3', set the 'Default reference "
"designator' as 'J', and the 'Number of units per package' as '1'. Click OK. "
"If the warning appears just click yes.  At this point the component is only "
"made of its labels. Let's add some pins. Click on the 'Add Pins' icon image:"
"images/icons/pin.png[pin_png] on the right toolbar. To place the pin, left "
"click in the centre of the part editor sheet just below the 'MYCONN3' label."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1203
msgid ""
"In the Pin Properties window that appears, set the pin name to 'VCC', set "
"the pin number to '1', and the 'Electrical type' to 'Power input' then click "
"OK."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:1204
#, no-wrap
msgid "Pin Properties"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1204
#, no-wrap
msgid "images/pin_properties.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1208
msgid ""
"Place the pin by clicking on the location you would like it to go, right "
"below the 'MYCONN3' label."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1212
msgid ""
"Repeat the place-pin steps, this time 'Pin name' should be 'INPUT', 'Pin "
"number' should be '2', and 'Electrical Type' should be 'Passive'."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1218
msgid ""
"Repeat the place-pin steps, this time 'Pin name' should be 'GND', 'Pin "
"number' should be '3', and 'Electrical Type' should be 'Passive'.  Arrange "
"the pins one on top of the other. The component label 'MYCONN3' should be in "
"the centre of the page (where the blue lines cross)."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1226
msgid ""
"Next, draw the contour of the component. Click on the 'Add rectangle' icon "
"image:images/icons/add_rectangle.png[add_rectangle_png]. We want to draw a "
"rectangle next to the pins, as shown below. To do this, click where you want "
"the top left corner of the rectangle to be (do not hold the mouse button "
"down). Click again where you want the bottom right corner of the rectangle "
"to be."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:1227
#, no-wrap
msgid "gsik_myconn3_l_png"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1227
#, no-wrap
msgid "images/gsik_myconn3_l.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1233
msgid ""
"If you want to fill the rectangle with yellow, set the fill colour to "
"'yellow 4' in *Preferences* -> *Select color scheme*, then select the "
"rectangle in the editing screen with [e], selecting 'Fill background'."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1238
msgid ""
"Save the component in your library __myLib.lib__. Click on the 'New Library' "
"icon image:images/icons/new_library.png[new_library_png], navigate into "
"_tutorial1/library/_ folder and save the new library file with the name "
"__myLib.lib__."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1241
msgid ""
"Go to *Preferences* -> *Component Libraries* and add both _tutorial1/library/"
"_ in 'User defined search path' and _myLib.lib in_ 'Component library files'."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1247
msgid ""
"Click on the 'Select working library' icon image:images/icons/library."
"png[library_png]. In the Select Library window click on _myLib_ and click "
"OK. Notice how the heading of the window indicates the library currently in "
"use, which now should be __myLib__."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1256
msgid ""
"Click on the 'Update current component in current library' icon image:images/"
"icons/save_part_in_mem.png[save_part_in_mem_png] in the top toolbar. Save "
"all changes by clicking on the 'Save current loaded library on disk' icon "
"image:images/icons/save_library.png[save_library_png] in the top toolbar. "
"Click 'Yes' in any confirmation messages that appear.  The new schematic "
"component is now done and available in the library indicated in the window "
"title bar."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1260
msgid ""
"You can now close the Component library editor window. You will return to "
"the schematic editor window. Your new component will now be available to you "
"from the library __myLib__."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1265
msgid ""
"You can make any library _file.lib_ file available to you by adding it to "
"the library path. From __Eeschema__, go to *Preferences* -> *Library* and "
"add both the path to it in 'User defined search path' and _file.lib_ in "
"'Component library files'."
msgstr ""

#. type: Title ===
#: getting_started_in_kicad.adoc:1267
#, no-wrap
msgid "Export, import and modify library components"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1273
msgid ""
"Instead of creating a library component from scratch it is sometimes easier "
"to start from one already made and modify it. In this section we will see "
"how to export a component from the KiCad standard library 'device' to your "
"own library _myOwnLib.lib_ and then modify it."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1281
msgid ""
"From KiCad, start __Eeschema__, click on the 'Library Editor' icon image:"
"images/icons/libedit.png[libedit_png], click on the 'Select working library' "
"icon image:images/icons/library.png[library_png] and choose the library "
"'device'. Click on 'Load component to edit from the current lib' icon image:"
"images/icons/import_cmp_from_lib.png[import_cmp_from_lib_png] and import the "
"'RELAY_2RT'."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1285
msgid ""
"Click on the 'Export component' icon image:images/icons/export."
"png[export_png], navigate into the _library/_ folder and save the new "
"library file with the name _myOwnLib.lib._"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1291
msgid ""
"You can make this component and the whole library _myOwnLib.lib_ available "
"to you by adding it to the library path. From __Eeschema__, go to "
"*Preferences* -> *Component Libraries* and add both _library/_ in 'User "
"defined search path' and _myOwnLib.lib_ in the 'Component library files'. "
"Close the window."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1297
msgid ""
"Click on the 'Select working library' icon image:images/icons/library."
"png[library_png]. In the Select Library window click on _myOwnLib_ and click "
"OK. Notice how the heading of the window indicates the library currently in "
"use, it should be __myOwnLib__."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1301
msgid ""
"Click on the 'Load component to edit from the current lib' icon image:images/"
"icons/import_cmp_from_lib.png[import_cmp_from_lib_png] and import the "
"'RELAY_2RT'."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1304
msgid ""
"You can now modify the component as you like. Hover over the label "
"'RELAY_2RT', press [e] and rename it 'MY_RELAY_2RT'."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1311
msgid ""
"Click on 'Update current component in current library' icon image:images/"
"icons/save_part_in_mem.png[save_part_in_mem_png] in the top toolbar. Save "
"all changes by clicking on the 'Save current loaded library on disk' icon "
"image:images/icons/save_library.png[save_library_png] in the top toolbar."
msgstr ""

#. type: Title ===
#: getting_started_in_kicad.adoc:1313
#, no-wrap
msgid "Make schematic components with quicklib"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1318
msgid ""
"This section presents an alternative way of creating the schematic component "
"for MYCONN3 (see <<myconn3,MYCONN3>> above) using the Internet tool "
"__quicklib__."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1321
msgid ""
"Head to the _quicklib_ web page: http://kicad.rohrbacher.net/quicklib.php"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1324
msgid ""
"Fill out the page with the following information: Component name: MYCONN3 "
"Reference Prefix: J Pin Layout Style: SIL Pin Count, N: 3"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1328
msgid ""
"Click on the 'Assign Pins' icon. Fill out the page with the following "
"information: Pin 1: VCC Pin 2: input Pin 3: GND.  Type : Passive for all 3 "
"pins."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1332
msgid ""
"Click on the icon 'Preview it' and, if you are satisfied, click on the "
"'Build Library Component'. Download the file and rename it __tutorial1/"
"library/myQuickLib.lib.__. You are done!"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1338
msgid ""
"Have a look at it using KiCad. From the KiCad project manager, start "
"__Eeschema__, click on the 'Library Editor' icon image:images/icons/libedit."
"png[libedit_png], click on the 'Import Component' icon image:images/icons/"
"import.png[import_png], navigate to _tutorial1/library/_ and select "
"_myQuickLib.lib._"
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:1339
#, no-wrap
msgid "gsik_myconn3_quicklib_png"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1339
#, no-wrap
msgid "images/gsik_myconn3_quicklib.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1346
msgid ""
"You can make this component and the whole library _myQuickLib.lib_ available "
"to you by adding it to the KiCad library path. From __Eeschema__, go to "
"*Preferences* -> *Component Libraries* and add _library_ in 'User defined "
"search path' and _myQuickLib.lib_ in 'Component library files'."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1350
msgid ""
"As you might guess, this method of creating library components can be quite "
"effective when you want to create components with a large pin count."
msgstr ""

#. type: Title ===
#: getting_started_in_kicad.adoc:1352
#, no-wrap
msgid "Make a high pin count schematic component"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1359
msgid ""
"In the section titled _Make Schematic Components in quicklib_ we saw how to "
"make a schematic component using the _quicklib_ web-based tool.  However, "
"you will occasionally find that you need to create a schematic component "
"with a high number of pins (some hundreds of pins). In KiCad, this is not a "
"very complicated task."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1365
msgid ""
"Suppose that you want to create a schematic component for a device with 50 "
"pins. It is common practise to draw it using multiple low pin-count "
"drawings, for example two drawings with 25 pins each. This component "
"representation allows for easy pin connection."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1370
msgid ""
"The best way to create our component is to use _quicklib_ to generate two 25-"
"pin components separately, re-number their pins using a Python script and "
"finally merge the two by using copy and paste to make them into one single "
"DEF and ENDDEF component."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1376
msgid ""
"You will find an example of a simple Python script below that can be used in "
"conjunction with an _in.txt_ file and an _out.txt_ file to re-number the "
"line: +X PIN1 1 -750 600 300 R 50 50 1 1 I+ into +X PIN26 26 -750 600 300 R "
"50 50 1 1 I+ this is done for all lines in the file __in.txt__."
msgstr ""

#. type: Block title
#: getting_started_in_kicad.adoc:1377
#, no-wrap
msgid "Simple script"
msgstr ""

#. type: delimited block -
#: getting_started_in_kicad.adoc:1400
#, no-wrap
msgid ""
"#!/usr/bin/env python\n"
"''' simple script to manipulate KiCad component pins numbering'''\n"
"import sys, re\n"
"try:\n"
"    fin=open(sys.argv[1],'r')\n"
"    fout=open(sys.argv[2],'w')\n"
"except:\n"
"    print \"oh, wrong use of this app, try:\", sys.argv[0], \"in.txt out.txt\"\n"
"    sys.exit()\n"
"for ln in fin.readlines():\n"
"    obj=re.search(\"(X PIN)(\\d*)(\\s)(\\d*)(\\s.*)\",ln)\n"
"if obj:\n"
"    num = int(obj.group(2))+25\n"
"    ln=obj.group(1) + str(num) + obj.group(3) + str(num) + obj.group(5) +'\\n'\n"
"    fout.write(ln)\n"
"fin.close(); fout.close()\n"
"#\n"
"# for more info about regular expression syntax and KiCad component generation:\n"
"# http://gskinner.com/RegExr/\n"
"# http://kicad.rohrbacher.net/quicklib.php\n"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1406
msgid ""
"While merging the two components into one, it is necessary to use the "
"Library Editor from Eeschema to move the first component so that the second "
"does not end up on top of it. Below you will find the final .lib file and "
"its representation in __Eeschema__."
msgstr ""

#. type: Block title
#: getting_started_in_kicad.adoc:1407
#, no-wrap
msgid "Contents of a *.lib file"
msgstr ""

#. type: delimited block -
#: getting_started_in_kicad.adoc:1419
#, no-wrap
msgid ""
"EESchema-LIBRARY Version 2.3\n"
"#encoding utf-8\n"
"# COMP\n"
"DEF COMP U 0 40 Y Y 1 F N\n"
"F0 \"U\" -1800 -100 50 H V C CNN\n"
"F1 \"COMP\" -1800 100 50 H V C CNN\n"
"DRAW\n"
"S -2250 -800 -1350 800 0 0 0 N\n"
"S -450 -800 450 800 0 0 0 N\n"
"X PIN1 1 -2550 600 300 R 50 50 1 1 I\n"
msgstr ""

#. type: delimited block -
#: getting_started_in_kicad.adoc:1421
#, no-wrap
msgid "...\n"
msgstr ""

#. type: delimited block -
#: getting_started_in_kicad.adoc:1426
#, no-wrap
msgid ""
"X PIN49 49 750 -500 300 L 50 50 1 1 I\n"
"ENDDRAW\n"
"ENDDEF\n"
"#End Library\n"
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:1428
#, no-wrap
msgid "gsik_high_number_pins_png"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1428
#, no-wrap
msgid "images/gsik_high_number_pins.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1434
msgid ""
"The Python script presented here is a very powerful tool for manipulating "
"both pin numbers and pin labels. Mind, however, that all its power comes for "
"the arcane and yet amazingly useful Regular Expression syntax: _http://"
"gskinner.com/RegExr/._"
msgstr ""

#. type: Title ==
#: getting_started_in_kicad.adoc:1436
#, no-wrap
msgid "Make component footprints"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1442
msgid ""
"Unlike other EDA software tools, which have one type of library that "
"contains both the schematic symbol and the footprint variations, KiCad _."
"lib_ files contain schematic symbols and _.kicad_mod_ files contain "
"footprints. _Cvpcb_ is used to map footprints to symbols."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1445
msgid ""
"As for _.lib_ files, _.kicad_mod_ library files are text files that can "
"contain anything from one to several parts."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1449
msgid ""
"There is an extensive footprint library with KiCad, however on occasion you "
"might find that the footprint you need is not in the KiCad library.  Here "
"are the steps for creating a new PCB footprint in KiCad:"
msgstr ""

#. type: Title ===
#: getting_started_in_kicad.adoc:1451
#, no-wrap
msgid "Using Footprint Editor"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1457
msgid ""
"From the KiCad project manager start the _Pcbnew_ tool. Click on the 'Open "
"Footprint Editor' icon image:images/icons/edit_module.png[edit_module_png] "
"on the top toolbar. This will open the 'Footprint Editor'."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1469
msgid ""
"We are going to save the new footprint 'MYCONN3' in the new footprint "
"library 'myfootprint'.  Create a new folder _myfootprint.pretty_ in the "
"_tutorial1/_ project folder.  Click on the *Preferences* -> **Footprint "
"Libraries Manager** and press 'Append Library' button. In the table, enter "
"\"myfootprint\" as Nickname, enter \"$\\{KIPRJMOD\\}/myfootprint.pretty\" as "
"Library Path and enter \"KiCad\" as Plugin Type.  Press OK to close the PCB "
"Library Tables window.  Click on the 'Select active library' icon image:"
"images/icons/open_library.png[open_library_png] on the top toolbar.  Select "
"the 'myfootprint' library."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1477
msgid ""
"Click on the 'New Footprint' icon image:images/icons/new_footprint."
"png[new_footprint_png] on the top toolbar.  Type 'MYCONN3' as the 'footprint "
"name'. In the middle of the screen the 'MYCONN3' label will appear. Under "
"the label you can see the 'REF*__' label. Right click on 'MYCONN3' and move "
"it above 'REF*__'. Right click on 'REF__*', select 'Edit Text' and rename it "
"to 'SMD'. Set the 'Display' value to 'Invisible'."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1481
msgid ""
"Select the 'Add Pads' icon image:images/icons/pad.png[pad_png] on the right "
"toolbar. Click on the working sheet to place the pad. Right click on the new "
"pad and click 'Edit Pad'. You can also use [e]."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:1482
#, no-wrap
msgid "Pad Properties"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1482
#, no-wrap
msgid "images/pad_properties.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1487
msgid ""
"Set the 'Pad Num' to '1', 'Pad Shape' to 'Rect', 'Pad Type' to 'SMD', 'Shape "
"Size X' to '0.4', and 'Shape Size Y' to '0.8'. Click OK.  Click on 'Add "
"Pads' again and place two more pads."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1491
msgid ""
"If you want to change the grid size, *Right click* -> **Grid Select**. Be "
"sure to select the appropriate grid size before laying down the components."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1494
msgid ""
"Move the 'MYCONN3' label and the 'SMD' label out of the way so that it looks "
"like the image shown above."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1501
msgid ""
"When placing pads it is often necessary to measure relative distances. Place "
"the cursor where you want the relative coordinate point _(0,0)_ to be and "
"press the space bar. While moving the cursor around, you will see a relative "
"indication of the position of the cursor at the bottom of the page. Press "
"the space bar at any time to set the new origin."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1506
msgid ""
"Now add a footprint contour. Click on the 'Add graphic line or polygon' "
"button image:images/icons/add_polygon.png[add_polygon_png] in the right "
"toolbar. Draw an outline of the connector around the component."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1510
msgid ""
"Click on the 'Save Footprint in Active Library' icon image:images/icons/"
"save_library.png[save_library_png] on the top toolbar, using the default "
"name MYCONN3."
msgstr ""

#. type: Title ==
#: getting_started_in_kicad.adoc:1512
#, no-wrap
msgid "Note about portability of KiCad project files"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1516
msgid ""
"What files do you need to send to someone so that they can fully load and "
"use your KiCad project?"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1523
msgid ""
"When you have a KiCad project to share with somebody, it is important that "
"the schematic file __.sch__, the board file __.kicad_pcb__, the project file "
"_.pro_ and the netlist file __.net__, are sent together with both the "
"schematic parts file _.lib_ and the footprints file __.kicad_mod__. Only "
"this way will people have total freedom to modify the schematic and the "
"board."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1535
msgid ""
"With KiCad schematics, people need the _.lib_ files that contain the "
"symbols. Those library files need to be loaded in the _Eeschema_ "
"preferences. On the other hand, with boards (__.kicad_pcb__ files), "
"footprints can be stored inside the _.kicad_pcb_ file. You can send someone "
"a _.kicad_pcb_ file and nothing else, and they would still be able to look "
"at and edit the board. However, when they want to load components from a "
"netlist, the footprint libraries (__.kicad_mod__ files) need to be present "
"and loaded in the _Pcbnew_ preferences just as for schematics. Also, it is "
"necessary to load the _.kicad_mod_ files in the preferences of _Pcbnew_ in "
"order for those footprints to show up in __Cvpcb__."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1543
msgid ""
"If someone sends you a _.kicad_pcb_ file with footprints you would like to "
"use in another board, you can open the Footprint Editor, load a footprint "
"from the current board, and save or export it into another footprint "
"library. You can also export all the footprints from a _.kicad_pcb_ file at "
"once via *Pcbnew* -> *File* -> *Archive* -> *Footprints* -> **Create "
"footprint archive**, which will create a new _.kicad_mod_ file with all the "
"board's footprints."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1549
msgid ""
"Bottom line, if the PCB is the only thing you want to distribute, then the "
"board file _.kicad_pcb_ is enough. However, if you want to give people the "
"full ability to use and modify your schematic, its components and the PCB, "
"it is highly recommended that you zip and send the following project "
"directory:"
msgstr ""

#. type: delimited block -
#: getting_started_in_kicad.adoc:1567
#, no-wrap
msgid ""
"tutorial1/\n"
"|-- tutorial1.pro\n"
"|-- tutorial1.sch\n"
"|-- tutorial1.kicad_pcb\n"
"|-- tutorial1.net\n"
"|-- library/\n"
"|   |-- myLib.lib\n"
"|   |-- myOwnLib.lib\n"
"|   \\-- myQuickLib.lib\n"
"|\n"
"|-- myfootprint.pretty/\n"
"|   \\-- MYCONN3.kicad_mod\n"
"|\n"
"\\-- gerber/\n"
"    |-- ...\n"
"    \\-- ...\n"
msgstr ""

#. type: Title ==
#: getting_started_in_kicad.adoc:1570
#, no-wrap
msgid "More about KiCad documentation"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1575
msgid ""
"This has been a quick guide on most of the features in KiCad. For more "
"detailed instructions consult the help files which you can access through "
"each KiCad module. Click on *Help* -> **Manual**."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1578
msgid ""
"KiCad comes with a pretty good set of multi-language manuals for all its "
"four software components."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1580
msgid "The English version of all KiCad manuals are distributed with KiCad."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1586
msgid ""
"In addition to its manuals, KiCad is distributed with this tutorial, which "
"has been translated into other languages. All the different versions of this "
"tutorial are distributed free of charge with all recent versions of KiCad. "
"This tutorial as well as the manuals should be packaged with your version of "
"KiCad on your given platform."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1589
msgid ""
"For example, on Linux the typical locations are in the following "
"directories, depending on your exact distribution:"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1592
#, no-wrap
msgid ""
" /usr/share/doc/kicad/help/en/\n"
" /usr/local/share/doc/kicad/help/en\n"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1594
msgid "On Windows it is in:"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1596
#, no-wrap
msgid " <installation directory>/share/doc/kicad/help/en\n"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1598
msgid "On OS X:"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1600
#, no-wrap
msgid " /Library/Application Support/kicad/help/en\n"
msgstr ""

#. type: Title ===
#: getting_started_in_kicad.adoc:1602
#, no-wrap
msgid "KiCad documentation on the Web"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1605
msgid ""
"Latest KiCad documentations are available in multiple languages on the Web."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1607
msgid "http://kicad-pcb.org/help/documentation/"
msgstr ""
