# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# taotieren <admin@taotieren.com>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Getting_Started_in_KiCad_zh_CN_v0.4\n"
"POT-Creation-Date: 2019-07-17 09:02+0000\n"
"PO-Revision-Date: 2019-07-17 17:10+0800\n"
"Last-Translator: taotieren <admin@taotieren.com>\n"
"Language-Team: \n"
"Language: zh\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.2.3\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Title =
#: getting_started_in_kicad.adoc:7
#, no-wrap
msgid "Getting Started in KiCad"
msgstr "KiCad 入门"

#. type: Plain text
#: getting_started_in_kicad.adoc:11
msgid ""
"_Essential and concise guide to mastering KiCad for the successful "
"development of sophisticated electronic printed circuit boards._"
msgstr "_掌握 KiCad 成功开发复杂电子印刷电路板的必要和简明指南。_"

#. type: Plain text
#: getting_started_in_kicad.adoc:14
#, no-wrap
msgid "*Copyright*\n"
msgstr "*Copyright*\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:20
msgid ""
"This document is Copyright (C) 2010-2018 by its contributors as listed "
"below. You may distribute it and/or modify it under the terms of either the "
"GNU General Public License (http://www.gnu.org/licenses/gpl.html), version 3 "
"or later, or the Creative Commons Attribution License (http://"
"creativecommons.org/licenses/by/3.0/), version 3.0 or later."
msgstr ""
"本文件是以下列出的贡献者的版权 (c) 2010-2018。您可以根据 GNU 通用公共许可证 "
"(http://www.gnu.org/licenses/gpl.html) 版本3或更高版本或知识共享归因许可证 "
"(http://creativecommons.org/licenses/by/3.0/) 版本的条款分发和/修改它3.0 或更"
"高版本。"

#. type: Plain text
#: getting_started_in_kicad.adoc:22
msgid "All trademarks within this guide belong to their legitimate owners."
msgstr "本指南中的所有商标均属于其合法所有者。"

#. type: Plain text
#: getting_started_in_kicad.adoc:25
#, no-wrap
msgid "*Contributors*\n"
msgstr "*贡献者*\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:27
msgid ""
"David Jahshan, Phil Hutchinson, Fabrizio Tappero, Christina Jarron, Melroy "
"van den Berg."
msgstr ""
"David Jahshan, Phil Hutchinson, Fabrizio Tappero, Christina Jarron, Melroy "
"van den Berg."

#. type: Plain text
#: getting_started_in_kicad.adoc:30
#, no-wrap
msgid "*Feedback*\n"
msgstr "*反馈*\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:32
msgid "Please direct any bug reports, suggestions or new versions to here:"
msgstr "请将任何错误报告、建议或新版本引导到此处:"

#. type: Plain text
#: getting_started_in_kicad.adoc:34
msgid "About KiCad document: https://github.com/KiCad/kicad-doc/issues"
msgstr "关于 KiCad 文档: https://github.com/KiCad/kicad-doc/issues"

#. type: Plain text
#: getting_started_in_kicad.adoc:36
msgid "About KiCad software: https://bugs.launchpad.net/kicad"
msgstr "关于 KiCad 软件: https://bugs.launchpad.net/kicad"

#. type: Plain text
#: getting_started_in_kicad.adoc:38
msgid ""
"About KiCad software internationalization (i18n): https://github.com/KiCad/"
"kicad-i18n/issues"
msgstr ""
"关于 KiCad 软件国际化 (i18n): https://github.com/KiCad/kicad-i18n/issues"

#. type: Plain text
#: getting_started_in_kicad.adoc:41
#, no-wrap
msgid "*Publication date*\n"
msgstr "*发布日期*\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:43
msgid "2015, May 16."
msgstr "2015年5月16日。"

#. type: Title ==
#: getting_started_in_kicad.adoc:46
#, no-wrap
msgid "Introduction to KiCad"
msgstr "KiCad 简介"

#. type: Plain text
#: getting_started_in_kicad.adoc:52
msgid ""
"KiCad is an open-source software tool for the creation of electronic "
"schematic diagrams and PCB artwork. Beneath its singular surface, KiCad "
"incorporates an elegant ensemble of the following stand-alone software tools:"
msgstr ""
"KiCad 是一个开源软件工具，用于创建电子原理图和 PCB 图形。 在其独特的表面下，"
"KiCad 融合了以下独立软件工具的优雅集合："

#. type: Table
#: getting_started_in_kicad.adoc:63
#, no-wrap
msgid ""
"|Program name|Description|File extension\n"
"|KiCad |Project manager|+*.pro+\n"
"|Eeschema |Schematic and component editor|+*.sch, *.lib, *.net+\n"
"|Pcbnew |Circuit board and footprint editor|+*.kicad_pcb, *.kicad_mod+\n"
"|GerbView |Gerber and drill file viewer|+\\*.g\\*, *.drl, etc.+\n"
"|Bitmap2Component |Convert bitmap images to components or footprints|+*.lib, *.kicad_mod, *.kicad_wks+\n"
"|PCB Calculator |Calculator for components, track width, electrical spacing, color codes, and more...|None\n"
"|Pl Editor |Page layout editor|+*.kicad_wks+\n"
msgstr ""
"|程序名称|描述|文件扩展\n"
"|KiCad |项目管理器|+*.pro+\n"
"|Eeschema |原理图和元件库编辑器|+*.sch, *.lib, *.net+\n"
"|Pcbnew |PCB 和封装编辑器|+*.kicad_pcb, *.kicad_mod+\n"
"|GerbView |光绘文件及钻孔文件查看|+\\*.g\\*, *.drl, etc.+\n"
"|Bitmap2Component |将位图转换为元件符号或封装|+*.lib, *.kicad_mod, *.kicad_wks+\n"
"|PCB Calculator |便携式计算器，可以用于方便的计算线宽/电气间隙/色环代码等等|无\n"
"|Pl Editor |页面布局编辑器|+*.kicad_wks+\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:68
msgid ""
"The file extension list is not complete and only contains a subset of the "
"files that KiCad supports. It is useful for the basic understanding of which "
"files are used for each KiCad application."
msgstr ""
"上述文件扩展名列表不完整, 仅包含 KiCad 支持的文件的子集。但是它能帮助你了解 "
"KiCad 使用的基本的文件。"

#. type: Plain text
#: getting_started_in_kicad.adoc:72
msgid ""
"KiCad can be considered mature enough to be used for the successful "
"development and maintenance of complex electronic boards."
msgstr "有充分的理由认为, KiCad 已足够成熟, 并可以用于开发和维护复杂的电路板。"

#. type: Plain text
#: getting_started_in_kicad.adoc:78
msgid ""
"KiCad does not present any board-size limitation and it can easily handle up "
"to 32 copper layers, up to 14 technical layers and up to 4 auxiliary "
"layers.  KiCad can create all the files necessary for building printed "
"boards, Gerber files for photo-plotters, drilling files, component location "
"files and a lot more."
msgstr ""
"KiCad 对电路板的大小不做任何限制, 它可以轻松地处理多达 32 个铜层、多达 14 个"
"技术层和多达 4 个辅助层的电路板。 KiCad 可以创建制造印刷电路板所需的所有文"
"件、用于照片绘图仪的 Gerber 文件、钻孔文件、元件位置文件等等。"

#. type: Plain text
#: getting_started_in_kicad.adoc:82
msgid ""
"Being open source (GPL licensed), KiCad represents the ideal tool for "
"projects oriented towards the creation of electronic hardware with an open-"
"source flavour."
msgstr ""
"作为开源 (GPL 许可)软件, KiCad 是面向有意创建开源电子硬件的项目的工程师的理想"
"工具。"

#. type: Plain text
#: getting_started_in_kicad.adoc:84
msgid "On the Internet, the homepage of KiCad is:"
msgstr "在互联网上, KiCad 的主页是:"

#. type: Plain text
#: getting_started_in_kicad.adoc:86
msgid "http://www.kicad-pcb.org/"
msgstr "http://www.kicad-pcb.org/"

#. type: Title ===
#: getting_started_in_kicad.adoc:89
#, no-wrap
msgid "Downloading and installing KiCad"
msgstr "下载和安装 KiCad"

#. type: Plain text
#: getting_started_in_kicad.adoc:93
msgid ""
"KiCad runs on GNU/Linux, Apple macOS and Windows.  You can find the most up "
"to date instructions and download links at:"
msgstr ""
"KiCad 运行在 GNU/Linux，Apple macOS 和 Windows 上。 您可以在以下位置找到最新"
"的说明和下载链接："

#. type: Plain text
#: getting_started_in_kicad.adoc:95
msgid "http://www.kicad-pcb.org/download/"
msgstr "http://www.kicad-pcb.org/download/"

#. type: Plain text
#: getting_started_in_kicad.adoc:105
msgid ""
"KiCad stable releases occur periodically per the http://ci.kicad-pcb.org/job/"
"kicad-doxygen/ws/Documentation/doxygen/html/"
"md_Documentation_development_stable-release-policy.html[KiCad Stable Release "
"Policy]. New features are continually being added to the development branch. "
"If you would like to take advantage of these new features and help out by "
"testing them, please download the latest nightly build package for your "
"platform. Nightly builds may introduce bugs such as file corruption, "
"generation of bad Gerbers, etc., but it is the goal of the KiCad Development "
"Team to keep the development branch as usable as possible during new feature "
"development."
msgstr ""
"根据 http://ci.kicad-pcb.org/job/kicad-doxygen/ws/Documentation/doxygen/html/"
"md_Documentation_development_stable-release-policy.html[KiCad 稳定版本发布政"
"策]，KiCad 定期发布。 新功能不断添加到开发分支中。 如果您想利用这些新功能并通"
"过测试帮助，请下载适用于您平台的最新每晚构建包。 每夜构建可能会引入诸如文件损"
"坏，生成坏 Gerbers 等错误，但 KiCad 开发团队的目标是在新功能开发期间尽可能保"
"持开发分支的可用性。"

#. type: Title ====
#: getting_started_in_kicad.adoc:107
#, no-wrap
msgid "Under GNU/Linux"
msgstr "在 GNU/Linux 下"

#. type: Plain text
#: getting_started_in_kicad.adoc:113
msgid ""
"Stable releases of KiCad can be found in most distribution's package "
"managers as kicad and kicad-doc. If your distribution does not provide "
"latest stable version, please follow the instruction for unstable builds and "
"select and install the latest stable version."
msgstr ""
"KiCad 的稳定版本，包括如 KiCad 和 kicad-doc，可以在大多数发行版的软件包管理器"
"中找到。如果您的发行版没有提供最新的稳定版本, 请按照针对不稳定版本发布的说明"
"进行操作, 并安装最新的版本。"

#. type: Plain text
#: getting_started_in_kicad.adoc:116
msgid ""
"Under Ubuntu, the easiest way to install an unstable nightly build of KiCad "
"is via _PPA_ and __Aptitude__. Type the following into your Terminal:"
msgstr ""
"在 Ubuntu 下，安装不稳定的夜间构建 KiCad 的最简单方法是通过 _PPA_ 和"
"__Aptitude__。 在终端中键入以下内容："

#. type: delimited block -
#: getting_started_in_kicad.adoc:121
#, no-wrap
msgid ""
"sudo add-apt-repository ppa:js-reynaud/ppa-kicad\n"
"sudo aptitude update && sudo aptitude safe-upgrade\n"
"sudo aptitude install kicad kicad-doc-en\n"
msgstr ""
"sudo add-apt-repository ppa:js-reynaud/ppa-kicad\n"
"sudo aptitude update && sudo aptitude safe-upgrade\n"
"sudo aptitude install kicad kicad-doc-en\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:124
msgid "Under Debian, the easiest way to install backports build of KiCad is:"
msgstr "在 Debian 下，安装 KiCad 的 backports 构建的最简单方法是："

#. type: delimited block -
#: getting_started_in_kicad.adoc:132
#, no-wrap
msgid ""
"# Set up Debian Backports\n"
"echo -e \"\n"
"# stretch-backports\n"
"deb http://ftp.us.debian.org/debian/ stretch-backports main contrib non-free \n"
"deb-src http://ftp.us.debian.org/debian/ stretch-backports main contrib non-free\n"
"\" | sudo tee -a /etc/apt/sources.list > /dev/null\n"
msgstr ""
"# Set up Debian Backports\n"
"echo -e \"\n"
"# stretch-backports\n"
"deb http://ftp.us.debian.org/debian/ stretch-backports main contrib non-free \n"
"deb-src http://ftp.us.debian.org/debian/ stretch-backports main contrib non-free\n"
"\" | sudo tee -a /etc/apt/sources.list > /dev/null\n"

#. type: delimited block -
#: getting_started_in_kicad.adoc:136
#, no-wrap
msgid ""
"# Run an Update & Install KiCad\n"
"sudo apt-get update\n"
"sudo apt-get install -t stretch-backports kicad\n"
msgstr ""
"# Run an Update & Install KiCad\n"
"sudo apt-get update\n"
"sudo apt-get install -t stretch-backports kicad\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:140
msgid ""
"Under Fedora the easiest way to install an unstable nightly build is via "
"__copr__.  To install KiCad via copr type the following in to copr:"
msgstr ""
"在 Fedora 下安装不稳定的夜间构建的最简单方法是通过 __copr__。 要通过 copr 安"
"装 KiCad，请将以下内容输入到 copr 中："

#. type: delimited block -
#: getting_started_in_kicad.adoc:144
#, no-wrap
msgid ""
"sudo dnf copr enable @kicad/kicad\n"
"sudo dnf install kicad\n"
msgstr ""
"sudo dnf copr enable @kicad/kicad\n"
"sudo dnf install kicad\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:148
msgid ""
"Alternatively, you can download and install a pre-compiled version of KiCad, "
"or directly download the source code, compile and install KiCad."
msgstr ""
"或者，您可以下载并安装 KiCad 的预编译版本，或直接下载源代码，编译和安装 "
"KiCad。"

#. type: Title ====
#: getting_started_in_kicad.adoc:150
#, no-wrap
msgid "Under Apple macOS"
msgstr "在 Apple macOS 下"

#. type: Plain text
#: getting_started_in_kicad.adoc:154
msgid ""
"Stable builds of KiCad for macOS can be found at: http://downloads.kicad-pcb."
"org/osx/stable/"
msgstr ""
"适用于 macOS 的 KiCad 的稳定版本可在以下网址找到：http://downloads.kicad-pcb."
"org/osx/stable/"

#. type: Plain text
#: getting_started_in_kicad.adoc:157
msgid ""
"Unstable nightly development builds can be found at: http://downloads.kicad-"
"pcb.org/osx/"
msgstr ""
"不稳定的夜间开发版本可在以下网址找到：http//downloads.kicad-pcb.org/osx/"

#. type: Title ====
#: getting_started_in_kicad.adoc:159
#, no-wrap
msgid "Under Windows"
msgstr "在 Windows 下"

#. type: Plain text
#: getting_started_in_kicad.adoc:163
msgid ""
"Stable builds of KiCad for Windows can be found at: http://downloads.kicad-"
"pcb.org/windows/stable/"
msgstr ""
"适用于 Windows 的 KiCad 的稳定版本可在以下网址找到：http://downloads.kicad-"
"pcb.org/windows/stable/"

#. type: Plain text
#: getting_started_in_kicad.adoc:166
msgid ""
"For Windows you can find nightly development builds at: http://downloads."
"kicad-pcb.org/windows/"
msgstr ""
"对于Windows，您可以在以下网址找到夜间开发版本：http://downloads.kicad-pcb."
"org/windows/"

#. type: Title ===
#: getting_started_in_kicad.adoc:168
#, no-wrap
msgid "Support"
msgstr "支持"

#. type: Plain text
#: getting_started_in_kicad.adoc:170
msgid "If you have ideas, remarks or questions, or if you just need help:"
msgstr "如果您有想法，评论或问题，或者您只是需要帮助："

#. type: Plain text
#: getting_started_in_kicad.adoc:172
msgid "https://forum.kicad.info/[Visit the forum]"
msgstr "https://forum.kicad.info/[访问论坛]"

#. type: Plain text
#: getting_started_in_kicad.adoc:173
msgid ""
"Join the http://webchat.freenode.net/?channels=kicad[#kicad IRC channel] on "
"Freenode"
msgstr ""
"加入 Freenode 上的 http://webchat.freenode.net/?channels=kicad[#kicad IRC "
"channel]"

#. type: Plain text
#: getting_started_in_kicad.adoc:174
msgid "http://www.kicad-pcb.org/help/tutorials/[Watch tutorials]"
msgstr "http://www.kicad-pcb.org/help/tutorials/[观看教程]"

#. type: Title ==
#: getting_started_in_kicad.adoc:176
#, no-wrap
msgid "KiCad Workflow"
msgstr "KiCad 工作流程"

#. type: Plain text
#: getting_started_in_kicad.adoc:182
msgid ""
"Despite its similarities with other PCB design software, KiCad is "
"characterised by a unique workflow in which schematic components and "
"footprints are separate. Only after creating a schematic are footprints "
"assigned to the components."
msgstr ""
"尽管与其他 PCB 设计软件具有相似性，但 KiCad 的特点是独特的工作流程，其中原理"
"图元件和封装是分开的。 仅在创建原理图后才会为元件分配封装。"

#. type: Title ===
#: getting_started_in_kicad.adoc:184
#, no-wrap
msgid "Overview"
msgstr "概述"

#. type: Plain text
#: getting_started_in_kicad.adoc:190
msgid ""
"The KiCad workflow is comprised of two main tasks: drawing the schematic and "
"laying out the board. Both a schematic component library and a PCB footprint "
"library are necessary for these two tasks. KiCad includes many components "
"and footprints, and also has the tools to create new ones."
msgstr ""
"KiCad 工作流由两个主要任务组成: 绘制原理图和布置电路板。原理图元件库和 PCB 封"
"装库对于这两个任务都是必需的。KiCad 库中包括许多元件和封装, 并且还具有创建新"
"元件的工具。"

#. type: Plain text
#: getting_started_in_kicad.adoc:194
msgid ""
"In the picture below, you see a flowchart representing the KiCad workflow.  "
"The flowchart explains which steps you need to take, and in which order.  "
"When applicable, the icon is added for convenience."
msgstr ""
"在下图中, 您将看到一个表示 KiCad 工作流的流程图。 流程图说明了您需要采取哪些"
"步骤, 以及以何种顺序采取这些步骤。 在适用的情况下, 为方便起见, 添加了图标。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:195
#, no-wrap
msgid "KiCad Flowchart"
msgstr "KiCad 流程图"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:195
#, no-wrap
msgid "images/kicad_flowchart.png"
msgstr "images/zh/kicad_flowchart.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:201
msgid ""
"For more information about creating a component, read <<make-schematic-"
"symbols-in-kicad,Making schematic symbols>>.  And for information about how "
"to create a new footprint, see <<make-component-footprints,Making component "
"footprints>>."
msgstr ""
"有关创建元件的详细信息, 请阅读 《make-schematic-symbols-in-kicad,Making "
"schematic symbols》。 有关如何创建新封装的信息, 请参阅 《make-component-"
"footprints,Making component footprints》。"

#. type: Plain text
#: getting_started_in_kicad.adoc:207
msgid ""
"http://kicad.rohrbacher.net/quicklib.php[Quicklib] is a tool that allows you "
"to quickly create KiCad library components with a web-based interface. For "
"more information about Quicklib, refer to <<make-schematic-components-with-"
"quicklib,Making Schematic Components With Quicklib>>."
msgstr ""
"http://kicad.rohrbacher.net/quicklib.php[Quicklib] 是一个工具，允许您使用基"
"于 Web 的界面快速创建 KiCad 库元件。 有关 Quicklib 的更多信息，请参阅《 make-"
"schematic-components-with-quicklib，使用 Quicklib 制作原理图元件》。"

#. type: Title ===
#: getting_started_in_kicad.adoc:209
#, no-wrap
msgid "Forward and backward annotation"
msgstr "前向和后向注释"

#. type: Plain text
#: getting_started_in_kicad.adoc:215
msgid ""
"Once an electronic schematic has been fully drawn, the next step is to "
"transfer it to a PCB. Often, additional components might need to be added, "
"parts changed to a different size, net renamed, etc. This can be done in two "
"ways: Forward Annotation or Backward Annotation."
msgstr ""
"完成电子原理图绘制后，下一步就是将其传输到 PCB。 通常，可能需要添加其他元件，"
"将部件更改为不同的大小，进行网络重命名等。这可以通过两种方式完成：前向注释或"
"后向注释。"

#. type: Plain text
#: getting_started_in_kicad.adoc:222
msgid ""
"Forward Annotation is the process of sending schematic information to a "
"corresponding PCB layout. This is a fundamental feature because you must do "
"it at least once to initially import the schematic into the PCB.  "
"Afterwards, forward annotation allows sending incremental schematic changes "
"to the PCB. Details about Forward Annotation are discussed in the section "
"<<forward-annotation-in-kicad,Forward Annotation>>."
msgstr ""
"正向注释是将原理图信息发送到相应PCB布局的过程。 这是一个基本功能，因为您必须"
"至少执行一次才能将原理图初始导入 PCB。 之后，正向注释允许向PCB发送增量原理图"
"更改。 有关前向注释的详细信息，请参阅《 forward-annotation-in-kicad，Forward "
"Annotation 》部分。"

#. type: Plain text
#: getting_started_in_kicad.adoc:229
msgid ""
"Backward Annotation is the process of sending a PCB layout change back to "
"its corresponding schematic. Two common causes for Backward Annotation are "
"gate swaps and pin swaps. In these situations, there are gates or pins which "
"are functionally equivalent, but it may only be during layout that there is "
"a strong case for choosing the exact gate or pin. Once the choice is made in "
"the PCB, this change is then pushed back to the schematic."
msgstr ""
"向后注释是将 PCB 布局更改发送回其相应原理图的过程。 向后注释的两个常见原因是"
"门交换和引脚交换。 在这些情况下，存在功能相同的门或引脚，但可能仅在布局期间存"
"在选择精确栅极或引脚的强有力的情况。 一旦在 PCB 中做出选择，则该更改将被推回"
"原理图。"

#. type: Title ==
#: getting_started_in_kicad.adoc:232
#, no-wrap
msgid "Using KiCad"
msgstr "使用 KiCad"

#. type: Title ===
#: getting_started_in_kicad.adoc:234
#, no-wrap
msgid "Shortcut keys"
msgstr "快捷键"

#. type: Plain text
#: getting_started_in_kicad.adoc:239
msgid ""
"KiCad has two kinds of related but different shortcut keys: accelerator keys "
"and hotkeys. Both are used to speed up working in KiCad by using the "
"keyboard instead of the mouse to change commands."
msgstr ""
"KiCad 有两种相关但不同的快捷键: 快捷键(accelerator keys) 和热键(hotkeys)。两"
"者都用于通过使用键盘而不是鼠标来执行命令以提高使用 KiCad 的生产效率。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:240 getting_started_in_kicad.adoc:248
#, no-wrap
msgid "Accelerator keys"
msgstr "快捷键"

#. type: Plain text
#: getting_started_in_kicad.adoc:245
msgid ""
"Accelerator keys have the same effect as clicking on a menu or toolbar icon: "
"the command will be entered but nothing will happen until the left mouse "
"button is clicked. Use an accelerator key when you want to enter a command "
"mode but do not want any immediate action."
msgstr ""
"快捷键的效果与单击菜单或工具栏图标的效果相同: 将输入该命令, 但在单击鼠标左键"
"之前不会发生任何情况。如果要进入命令模式, 但不希望立即执行任何操作, 请使用快"
"捷键。"

#. type: Plain text
#: getting_started_in_kicad.adoc:247
msgid "Accelerator keys are shown on the right side of all menu panes:"
msgstr "快捷键显示在所有菜单窗格的右侧:"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:248
#, no-wrap
msgid "images/gsik_accelerator_keys.png"
msgstr "images/gsik_accelerator_keys.png"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:250 getting_started_in_kicad.adoc:258
#, no-wrap
msgid "Hotkeys"
msgstr "热键"

#. type: Plain text
#: getting_started_in_kicad.adoc:254
msgid ""
"A hotkey is equal to an accelerator key plus a left mouse click. Using a "
"hotkey starts the command immediately at the current cursor location. Use a "
"hotkey to quickly change commands without interrupting your workflow."
msgstr ""
"热键等于加速器键加上鼠标左键单击。使用热键会立即在当前光标位置启动该命令。使"
"用热键可以在不中断工作流的情况下快速更改命令。"

#. type: Plain text
#: getting_started_in_kicad.adoc:257
msgid ""
"To view hotkeys within any KiCad tool go to *_Help -> List Hotkeys_* or "
"press Ctrl+F1:"
msgstr ""
"要查看任何 KiCad 工具中的热键，请转到 *_帮助 -> 列出热键_* 或按 __Ctrl+F1__ "
"："

#. type: Target for macro image
#: getting_started_in_kicad.adoc:258
#, no-wrap
msgid "images/gsik_hotkeys.png"
msgstr "images/gsik_hotkeys.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:262
msgid ""
"You can edit the assignment of hotkeys, and import or export them, from the "
"*_Preferences -> Hotkeys Options_* menu."
msgstr "您可以从 *_首选项 -> 热键选项_* 菜单编辑热键的分配，并导入或导出它们。"

#. type: Plain text
#: getting_started_in_kicad.adoc:265
msgid ""
"In this document, hotkeys are expressed with brackets like this: [a].  If "
"you see [a], just type the \"a\" key on the keyboard."
msgstr ""
"在本文档中，热键用括号表示，如下所示：[a]。 如果看到 [a]，只需在键盘上键入 "
"_a_ 键即可。"

#. type: Title ====
#: getting_started_in_kicad.adoc:266
#, no-wrap
msgid "Example"
msgstr "例子"

#. type: Plain text
#: getting_started_in_kicad.adoc:268
msgid "Consider the simple example of adding a wire in a schematic."
msgstr "考虑在原理图中添加走线的简单示例。"

#. type: Plain text
#: getting_started_in_kicad.adoc:272
msgid ""
"To use an accelerator key, press \"Shift + W\" to invoke the \"Add wire\" "
"command (note the cursor will change). Next, left click on the desired wire "
"start location to begin drawing the wire."
msgstr ""
"要使用快捷键, 请按 _Shift + W_ 调用 _添加导线_ 命令 (请注意光标将会更改)。接"
"下来, 左键单击所需的导线开始位置, 开始绘制导线。"

#. type: Plain text
#: getting_started_in_kicad.adoc:275
msgid ""
"With a hotkey, simply press [w] and the wire will immediately start from the "
"current cursor location."
msgstr "使用热键，只需按 [w]，线将立即从当前光标位置开始。"

#. type: Title ==
#: getting_started_in_kicad.adoc:277
#, no-wrap
msgid "Draw electronic schematics"
msgstr "绘制电路原理图"

#. type: Plain text
#: getting_started_in_kicad.adoc:281
msgid ""
"In this section we are going to learn how to draw an electronic schematic "
"using KiCad."
msgstr "在本节中, 我们将学习如何使用 KiCad 绘制电路原理图。"

#. type: Title ===
#: getting_started_in_kicad.adoc:283
#, no-wrap
msgid "Using Eeschema"
msgstr "使用 Eeschema"

#. type: Plain text
#: getting_started_in_kicad.adoc:292
msgid ""
"Under Windows run kicad.exe. Under Linux type 'kicad' in your Terminal. You "
"are now in the main window of the KiCad project manager.  From here you have "
"access to eight stand-alone software tools: __Eeschema__, __Schematic "
"Library Editor__, __Pcbnew__, __PCB Footprint Editor__, __GerbView__, "
"__Bitmap2Component__, __PCB Calculator__ and __Pl Editor__. Refer to the "
"work-flow chart to give you an idea how the main tools are used."
msgstr ""
"在 Windows 下运行 kicad.exe。 在 Linux 下，在终端中键入 _kicad_ 。 您现在位"
"于 KiCad 项目管理器的主窗口中。 从这里您可以访问八个独立的软件工具："
"__Eeschema__， __原理图库编辑器__，__Pcbnew__，__PCB 封装编辑器__，"
"__Pcbnew__，__GerbView__，__Bitmap2Component__，__PCB 计算器__ 和 __Pl 编辑器"
"__。请参阅工作流程图，了解如何使用主要工具。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:293
#, no-wrap
msgid "KiCad Main Window"
msgstr "KiCad 主窗口"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:293
#, no-wrap
msgid "images/kicad_main_window.png"
msgstr "images/zh/kicad_main_window.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:301
msgid ""
"Create a new project: *File* -> **New** -> **Project**.  Name the project "
"file 'tutorial1'. The project file will automatically take the extension \"."
"pro\". The exact appearance of the dialog depends on the used platform, but "
"there should be a checkbox for creating a new directory. Let it stay checked "
"unless you already have a dedicated directory.  All your project files will "
"be saved there."
msgstr ""
"创建一个新项目： *文件* -> **新** -> **项目**。 将项目文件命名为 __教程1__。 "
"项目文件将自动采用扩展名 __.pro__。 对话框的确切外观取决于使用的平台，但应该"
"有一个用于创建新目录的复选框。 除非您已有专用目录，否则请保持检查状态。 您的"
"所有项目文件都将保存在那里。"

#. type: Plain text
#: getting_started_in_kicad.adoc:305
msgid ""
"Let's begin by creating a schematic. Start the schematic editor "
"__Eeschema__, image:images/icons/eeschema.png[Eeschema]. It is the first "
"button from the left."
msgstr ""
"从创建原理图开始。开始原理图编辑器 __eeschema__ , image:images/icons/"
"eeschema.png[eeschema] 。它是左边的第一个按钮。"

#. type: Plain text
#: getting_started_in_kicad.adoc:314
msgid ""
"Click on the 'Page Settings' icon image:images/icons/sheetset.png[Sheet "
"settings icon] on the top toolbar. Set the appropriate 'paper "
"size' ('A4','8.5x11' etc.)  and enter the Title as 'Tutorial1'.  You will "
"see that more information can be entered here if necessary. Click OK. This "
"information will populate the schematic sheet at the bottom right corner. "
"Use the mouse wheel to zoom in.  Save the whole schematic: *File* -> **Save**"
msgstr ""
"单击顶部工具栏上的 _页面设置_ 图标 image:images/icons/sheetset.png[工作表设置"
"图标]。 设置适当的 __纸张尺寸__（'A4'，'8.5x11'等）并输入标题为 __教程1__ 。 "
"如有必要，您将在此处看到可以输入更多信息。 单击确定。 此信息将填充右下角的原"
"理图表。 使用鼠标滚轮放大。保存整个原理图：*文件* -> **保存**"

#. type: Plain text
#: getting_started_in_kicad.adoc:318
msgid ""
"We will now place our first component. Click on the 'Place symbol' icon "
"image:images/icons/add_component.png[Add component Icon] in the right "
"toolbar. You may also press the 'Add Symbol' hotkey [a]."
msgstr ""
"我们现在将放置第一个元件。 单击右侧工具栏中的 _放置符号_ 图标 image:images/"
"icons/add_component.png[添加元件图标]。 您也可以按 _添加符号_ 热键 [a]。"

#. type: Plain text
#: getting_started_in_kicad.adoc:326
msgid ""
"Click on the middle of your schematic sheet. A __Choose Symbol__ window will "
"appear on the screen.  We're going to place a resistor. Search / filter on "
"the 'R' of **R**esistor.  You may notice the 'Device' heading above the "
"Resistor. This 'Device' heading is the name of the library where the "
"component is located, which is quite a generic and useful library."
msgstr ""
"单击原理图工作表的中间部分。 屏幕上将出现 __选择符号__ 窗口。 我们要放一个电"
"阻器。 搜索/过滤 **R**esistor 的 __R__。 您可能会注意到电阻器上方的 _设备_ 标"
"题。 此 _设备_ 标题是元件所在库的名称，这是一个非常通用且有用的库。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:327
#, no-wrap
msgid "Choose Symbol"
msgstr "选择符号"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:327
#, no-wrap
msgid "images/choose_component.png"
msgstr "images/zh/choose_component.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:332
msgid ""
"Double click on it. This will close the 'Choose Symbol' window.  Place the "
"component in the schematic sheet by clicking where you want it to be."
msgstr ""
"双击它。这将关闭 _选择符号_ 窗口。 通过单击元件在原理图中的的位置将其放置在原"
"理图中。"

#. type: Plain text
#: getting_started_in_kicad.adoc:336
msgid ""
"Click on the magnifier icon to zoom in on the component.  Alternatively, use "
"the mouse wheel to zoom in and zoom out. Press the wheel (central)  mouse "
"button to pan horizontally and vertically."
msgstr ""
"单击放大镜图标可放大元件。 也可以使用使用鼠标滚轮进行放大和缩小。按下滚轮 (中"
"央) 鼠标按钮将可以水平和垂直平移。"

#. type: Plain text
#: getting_started_in_kicad.adoc:340
msgid ""
"Try to hover the mouse over the component 'R' and press [r]. The component "
"should rotate. You do not need to actually click on the component to rotate "
"it."
msgstr ""
"尝试将鼠标悬停在元件 _R_ 上, 然后按 [r]。元件应旋转。您不需要实际单击元件来旋"
"转它。"

#. type: Plain text
#: getting_started_in_kicad.adoc:345
msgid ""
"Sometimes, if your mouse is also over something else, a menu will appear.  "
"You will see the Clarify Selection menu often in KiCad; it allows working on "
"objects that are on top of each other. In this case, tell KiCad you want to "
"perform the action on the 'Symbol ...R...' if the menu appears."
msgstr ""
"有时，如果您的鼠标也在其他地方，则会出现一个菜单。 您将在 KiCad 中经常看到澄"
"清选择菜单; 它允许处理彼此重叠的对象。 在这种情况下，如果出现菜单，请告诉 "
"KiCad 您要对 _符号... R..._执行操作。"

#. type: Plain text
#: getting_started_in_kicad.adoc:351
msgid ""
"Right click in the middle of the component and select *Properties* -> **Edit "
"Value**. You can achieve the same result by hovering over the component and "
"pressing [v]. Alternatively, [e] will take you to the more general "
"Properties window. Notice how the right-click menu below shows the hotkeys "
"for all available actions."
msgstr ""
"右键单击元件的中间, 然后选择 *属性* -> **编辑值**。您可以通过将鼠标悬停在元件"
"上并按 [v] 来实现相同的结果。或者，按下[e] 将打开到更通用的 _属性_ 窗口。请注"
"意, 下面的右键单击菜单显示所有可用操作的热键。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:352
#, no-wrap
msgid "Edit component menu"
msgstr "编辑元件菜单"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:352
#, no-wrap
msgid "images/edit_component_dropdown.png"
msgstr "images/zh/edit_component_dropdown.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:356
msgid ""
"The Edit Value Field window will appear. Replace the current value 'R' with "
"'1 k'. Click OK."
msgstr "将出现 _编辑值字段_ 窗口。 用 _1k_ 替换当前值 __R__。 单击确定。"

#. type: Plain text
#: getting_started_in_kicad.adoc:359
msgid ""
"Do not change the Reference field (R?), this will be done automatically "
"later on. The value above the resistor should now be '1 k'."
msgstr ""
"不要更改参考字段（R?），稍后会自动完成。 电阻器上方的值现在应为 _1k_ 。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:360
#, no-wrap
msgid "Resistor Value"
msgstr "电阻值"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:360
#, no-wrap
msgid "images/resistor_value.png"
msgstr "images/resistor_value.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:364
msgid ""
"To place another resistor, simply click where you want the resistor to "
"appear. The symbol selection window will appear again."
msgstr "要放置另一个电阻，只需单击要显示电阻的位置。 符号选择窗口将再次出现。"

#. type: Plain text
#: getting_started_in_kicad.adoc:367
msgid ""
"The resistor you previously chose is now in your history list, appearing as "
"'R'. Click OK and place the component."
msgstr ""
"您之前选择的电阻现在位于历史列表中，显示为 _R_ 。 单击 _确定_ 并放置元件。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:368
#, no-wrap
msgid "Component history"
msgstr "元件历史记录"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:368
#, no-wrap
msgid "images/component_history.png"
msgstr "images/zh/component_history.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:374
msgid ""
"In case you make a mistake and want to delete a component, right click on "
"the component and click 'Delete'. This will remove the component from the "
"schematic. Alternatively, you can hover over the component you want to "
"delete and press [Delete]."
msgstr ""
"如果您输入错误并想要删除元件，请右键单击该元件并单击 _删除_ 。 这将从原理图中"
"删除元件。 或者，您可以将鼠标悬停在要删除的元件上，然后按[Delete]。"

#. type: Plain text
#: getting_started_in_kicad.adoc:378
msgid ""
"You can also duplicate a component already on your schematic sheet by "
"hovering over it and pressing [c]. Click where you want to place the new "
"duplicated component."
msgstr ""
"您还可以通过将鼠标悬停在原理图页上并按[C]来复制已经存在于原理图页上的元件。单"
"击要放置新复制元件的位置。"

#. type: Plain text
#: getting_started_in_kicad.adoc:384
msgid ""
"Right click on the second resistor. Select 'Drag'.  Reposition the component "
"and left click to drop. The same functionality can be achieved by hovering "
"over the component and by pressing [g].  [r] will rotate the component while "
"[x] and [y] will flip it about its x- or y-axis."
msgstr ""
"右键单击第二个电阻。 选择 _拖动_ 。 重新定位元件并左键单击以放下。 将鼠标悬停"
"在元件上并按[g]可以实现相同的功能。 [r]将旋转元件，而[x]和[y]将围绕其 x 轴或 "
"y 轴翻转。"

#. type: Plain text
#: getting_started_in_kicad.adoc:388
#, no-wrap
msgid ""
"*Right-Click* -> *Move* or [m] is also a valuable option\n"
"for moving anything around, but it is better to use this only for component\n"
"labels and components yet to be connected. We will see later on why this is the case.\n"
msgstr ""
"*右键单击* -> *移动* 或[m]也是一个有价值的选项\n"
"移动任何东西，但最好只将它用于元件\n"
"标签和元件尚未连接。 我们稍后会看到为什么会这样。\n"
"\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:391
msgid ""
"Edit the second resistor by hovering over it and pressing [v]. Replace 'R' "
"with '100'. You can undo any of your editing actions with Ctrl+Z."
msgstr ""
"将鼠标悬停在第二个电阻上，然后按[V]键编辑该电阻。将 _R_ 替换为 _100_ 。可以使"
"用 Ctrl+Z 撤消任何编辑操作。"

#. type: Plain text
#: getting_started_in_kicad.adoc:397
msgid ""
"Change the grid size. You have probably noticed that on the schematic sheet "
"all components are snapped onto a large pitch grid. You can easily change "
"the size of the grid by *Right-Click* -> **Grid**.  __In general, it is "
"recommended to use a grid of 50.0 mils for the schematic sheet__."
msgstr ""
"更改网格大小。 您可能已经注意到，在原理图表上，所有元件都被捕捉到大间距网格"
"上。 您可以通过 *右键单击* -> **网格** 轻松更改网格的大小。 __通常，建议使用 "
"50.0mils 的网格作为原理图表___ 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:406
msgid ""
"We are going to add a component from a library that may not be configured in "
"the default project. In the menu, choose *Preferences* -> **Manage Symbol "
"Libraries**.  In the Symbol Libraries window you can see two tabs: Global "
"Libraries and Project Specific Libraries. Each one has one sym-lib-table "
"file. For a library (.lib file) to be available it must be in one of those "
"sym-lib-table files.  If you have a library file in your file system and "
"it's not yet available, you can add it to either one of the sym-lib-table "
"files.  For practice we will now add a library which already is available."
msgstr ""
"我们将从库中添加一个可能未在默认项目中配置的元件。 在菜单中，选择 *首选项* -"
"> **管理符号库** 。 在符号库窗口中，您可以看到两个选项卡：全局库和项目专有"
"库。 每个都有一个符号表库文件。 要使库（.lib文件）可用，它必须位于其中一个符"
"号表库文件中。 如果文件系统中有库文件但尚未提供，则可以将其添加到其中一个符号"
"表库文件中。 为了练习，我们现在将添加一个已经可用的库。"

#. type: Plain text
#: getting_started_in_kicad.adoc:417
msgid ""
"Select the Project Specific table.  Click the file browser button below the "
"table.  You need to find where the official KiCad libraries are installed on "
"your computer. Look for a `library` directory containing a hundred of `.dcm` "
"and `.lib` files. Try in `C:\\Program Files (x86)\\KiCad\\share\\` (Windows) "
"and `/usr/share/kicad/library/` (Linux). When you have found the directory, "
"choose and add the 'MCU_Microchip_PIC12.lib' library and close the window.  "
"It will be added to the end of of the list.  Now click its nickname and "
"change it to 'microchip_pic12mcu'.  Close the Symbol Libraries window with "
"OK."
msgstr ""
"选择项目专用表。 单击表下方的文件浏览器按钮。 您需要找到计算机上安装官方 "
"KiCad 库的位置。 查找包含一百个 __.dcm__ 和 __.lib__ 文件的 _库_ 目录。 试试 "
"_C:\\Program Files (x86)\\KiCad\\share\\_ (Windows)和 _/usr/share/kicad/"
"library/_ (Linux)。 找到目录后，选择并添加 _MCU_Microchip_PIC12.lib_ 库并关闭"
"窗口。 它将添加到列表的末尾。 现在单击其昵称并将其更改为 "
"_microchip_pic12mcu_ 。 单击确定关闭符号库窗口。"

#. type: Plain text
#: getting_started_in_kicad.adoc:421
msgid ""
"Repeat the add-component steps, however this time select the "
"'microchip_pic12mcu' library instead of the 'Device' library and pick the "
"'PIC12C508A-ISN' component."
msgstr ""
"重复添加元件步骤，但这次选择 _microchip_pic12mcu_ 库而不是 _设备_ 库并选择 "
"_PIC12C508A-ISN_ 元件。"

#. type: Plain text
#: getting_started_in_kicad.adoc:425
msgid ""
"Hover the mouse over the microcontroller component. Notice that [x] and [y] "
"again flip the component. Keep the symbol mirrored around the Y axis so that "
"the pins G0 and G1 point to right."
msgstr ""
"将鼠标悬停在微控制器元件上。 请注意，[x] 和 [y] 再次翻转元件。 保持符号围绕Y"
"轴镜像，使引脚 G0 和 G1 指向右侧。"

#. type: Plain text
#: getting_started_in_kicad.adoc:428
msgid ""
"Repeat the add-component steps, this time choosing the 'Device' library and "
"picking the 'LED' component from it."
msgstr "重复添加元件步骤，这次选择 _设备_ 库并从中选择 _LED_ 元件。"

#. type: Plain text
#: getting_started_in_kicad.adoc:430
msgid "Organise all components on your schematic sheet as shown below."
msgstr "组织原理图纸上的所有元件，如下所示。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:431
#, no-wrap
msgid "gsik_tutorial1_010_png"
msgstr "gsik_tutorial1_010_png"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:431
#, no-wrap
msgid "images/gsik_tutorial1_010.png"
msgstr "images/gsik_tutorial1_010.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:438
msgid ""
"We now need to create the schematic component 'MYCONN3' for our 3-pin "
"connector. You can jump to the section titled <<make-schematic-symbols-in-"
"kicad,Make Schematic Symbols in KiCad>> to learn how to make this component "
"from scratch and then return to this section to continue with the board."
msgstr ""
"我们现在需要为我们的3针连接器创建原理图元件 “MYCONN3”。 您可以跳转到标题为 "
"“make-schematic-symbols-in-kicad，在 KiCad 中制作原理图符号” 的部分，了解如何"
"从头开始制作该元件，然后返回本节继续使用该板。"

#. type: Plain text
#: getting_started_in_kicad.adoc:441
msgid ""
"You can now place the freshly made component. Press [a] and pick the "
"'MYCONN3' component in the 'myLib' library."
msgstr ""
"您现在可以放置新制作的元件。 按 [a] 并选择 _myLib_ 库中的 _MYCONN3_ 元件。"

#. type: Plain text
#: getting_started_in_kicad.adoc:447
msgid ""
"The component identifier 'J?' will appear under the 'MYCONN3' label.  If you "
"want to change its position, right click on 'J?' and click on 'Move "
"Field' (equivalent to [m]). It might be helpful to zoom in before/while "
"doing this. Reposition 'J?' under the component as shown below. Labels can "
"be moved around as many times as you please."
msgstr ""
"元件标识符 _J?_ 将出现在 _MYCONN3_ 标签下。 如果要更改其位置，请右键单击 _J?"
"_ 然后单击 __移动字段__（相当于[m]）。 在执行此操作之前/之后放大可能会有所帮"
"助。 重新定位 J? 在如下所示的元件下。 标签可以随意移动多次。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:448
#, no-wrap
msgid "gsik_myconn3_s_png"
msgstr "gsik_myconn3_s_png"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:448
#, no-wrap
msgid "images/gsik_myconn3_s.png"
msgstr "images/gsik_myconn3_s.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:455
msgid ""
"It is time to place the power and ground symbols. Click on the 'Place power "
"port' button image:images/icons/add_power.png[add_power_png] on the right "
"toolbar. Alternatively, press [p]. In the component selection window, scroll "
"down and select 'VCC' from the 'power' library.  Click OK."
msgstr ""
"是时候放置电源和接地符号了。 单击右侧工具栏上的 _放置电源端口_ 按钮 image:"
"images/icons/add_power.png[add_power_png]。 或者，按[p]。 在元件选择窗口中，"
"向下滚动并从 _电源_ 库中选择 _VCC_ 。 单击确定。"

#. type: Plain text
#: getting_started_in_kicad.adoc:461
msgid ""
"Click above the pin of the 1 k resistor to place the VCC part. Click on the "
"area above the microcontroller 'VDD'. In the 'Component Selection history' "
"section select 'VCC' and place it next to the VDD pin. Repeat the add "
"process again and place a VCC part above the VCC pin of 'MYCONN3'. Move "
"references and values out of the way if needed."
msgstr ""
"单击 1k 电阻的引脚上方以放置 VCC 部件。 单击微控制器 _VDD_ 上方的区域。 在 _"
"元件选择历史记录_ 部分中，选择 _VCC_ 并将其放在 VDD 引脚旁边。 再次重复添加过"
"程，并将 VCC 部分放在 _MYCONN3_ 的 VCC 引脚上方。 如果需要，可以移动引用和"
"值。"

#. type: Plain text
#: getting_started_in_kicad.adoc:466
msgid ""
"Repeat the add-pin steps but this time select the GND part. Place a GND part "
"under the GND pin of 'MYCONN3'. Place another GND symbol on the left of the "
"VSS pin of the microcontroller. Your schematic should now look something "
"like this:"
msgstr ""
"重复添加引脚步骤，但这次选择 GND 部分。 将 GND 部分放在 _MYCONN3_ 的 GND 引脚"
"下。 在微控制器的 VSS 引脚左侧放置另一个 GND 符号。 您的原理图现在应该如下所"
"示："

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:467
#, no-wrap
msgid "gsik_tutorial1_020_png"
msgstr "gsik_tutorial1_020_png"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:467
#, no-wrap
msgid "images/gsik_tutorial1_020.png"
msgstr "images/gsik_tutorial1_020.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:472
msgid ""
"Next, we will wire all our components. Click on the 'Place wire' icon image:"
"images/icons/add_line.png[Place wire] on the right toolbar."
msgstr ""
"接下来，我们将连接所有元件。 单击右侧工具栏上的 _放置电线_ 图标 image:images/"
"icons/add_line.png[放置电线]。"

#. type: Plain text
#: getting_started_in_kicad.adoc:477
msgid ""
"Be careful not to pick 'Place bus', which appears directly beneath this "
"button but has thicker lines. The section <<bus-connections-in-kicad,Bus "
"Connections in KiCad>> will explain how to use a bus section."
msgstr ""
"小心不要选择 _放置总线_，它位于此按钮的正下方，但线条较粗。《bus-connections-"
"in-kicad，KiCad 中的总线连接》部分将解释如何使用总线部分。"

#. type: Plain text
#: getting_started_in_kicad.adoc:483
msgid ""
"Click on the little circle at the end of pin 7 of the microcontroller and "
"then click on the little circle on pin 1 of the LED.  Click once when you "
"are drawing the wire to create a corner.  You can zoom in while you are "
"placing the connection."
msgstr ""
"单击微控制器引脚7末端的小圆圈，然后单击 LED 引脚1上的小圆圈。 在绘制导线时单"
"击一次以创建拐角。 您可以在放置连接时放大。"

#. type: Plain text
#: getting_started_in_kicad.adoc:487
msgid ""
"If you want to reposition wired components, it is important to use [g] (to "
"grab) and not [m] (to move). Using grab will keep the wires connected. "
"Review step 24 in case you have forgotten how to move a component."
msgstr ""
"如果要重新定位连线元件，重要的是使用[g]（抓取）而不是[m]（移动）。 使用抓取将"
"保持电线连接。 如果您忘记了如何移动元件，请查看步骤 24。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:488
#, no-wrap
msgid "gsik_tutorial1_030_png"
msgstr "gsik_tutorial1_030_png"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:488
#, no-wrap
msgid "images/gsik_tutorial1_030.png"
msgstr "images/gsik_tutorial1_030.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:495
msgid ""
"Repeat this process and wire up all the other components as shown below. To "
"terminate a wire just double-click. When wiring up the VCC and GND symbols, "
"the wire should touch the bottom of the VCC symbol and the middle top of the "
"GND symbol. See the screenshot below."
msgstr ""
"重复此过程并连接所有其他元件，如下所示。 要双击终止电线。 当连接 VCC 和 GND "
"符号时，导线应接触 VCC 符号的底部和 GND 符号的中间顶部。 请参见下面的截图。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:496
#, no-wrap
msgid "gsik_tutorial1_040_png"
msgstr "gsik_tutorial1_040_png"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:496
#, no-wrap
msgid "images/gsik_tutorial1_040.png"
msgstr "images/gsik_tutorial1_040.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:502
msgid ""
"We will now consider an alternative way of making a connection using labels. "
"Pick a net labelling tool by clicking on the 'Place net label' icon image:"
"images/icons/add_line_label.png[add_line_label_png] on the right toolbar. "
"You can also use [l]."
msgstr ""
"我们现在将考虑使用标签建立连接的另一种方法。 通过单击右侧工具栏上的 _放置网络"
"标签_ 图标 image:images/icons/add_line_label.png[add_line_label_png] 来选择网"
"络标签工具。 你也可以用[l]。"

#. type: Plain text
#: getting_started_in_kicad.adoc:508
msgid ""
"Click in the middle of the wire connected to pin 6 of the microcontroller. "
"Name this label 'INPUT'. The label is still an independent item which you "
"can for example move, rotate and delete. The small anchor rectangle of the "
"label must be exactly on a wire or a pin for the label to take effect."
msgstr ""
"单击连接到微控制器引脚6的导线中间。 将此标签命名为“INPUT”。 标签仍然是一个独"
"立的项目，您可以移动，旋转和删除。 标签的小锚矩形必须正好在导线或引脚上才能使"
"标签生效。"

#. type: Plain text
#: getting_started_in_kicad.adoc:517
msgid ""
"Follow the same procedure and place another label on line on the right of "
"the 100 ohm resistor. Also name it 'INPUT'. The two labels, having the same "
"name, create an invisible connection between pin 6 of the PIC and the 100 "
"ohm resistor. This is a useful technique when connecting wires in a complex "
"design where drawing the lines would make the whole schematic messier. To "
"place a label you do not necessarily need a wire, you can simply attach the "
"label to a pin."
msgstr ""
"按照相同的步骤在100欧姆电阻的右侧放置另一个标签。 也可以将其命名为 "
"_INPUT_ 。 这两个标签具有相同的名称，在 PIC 的引脚6和100欧姆电阻之间产生不可"
"见的连接。 当在复杂设计中连接导线时，这是一种有用的技术，其中绘制线条会使整个"
"原理图变得更加混乱。 要放置标签，您不一定需要电线，只需将标签贴在引脚上即可。"

#. type: Plain text
#: getting_started_in_kicad.adoc:523
msgid ""
"Labels can also be used to simply label wires for informative purposes. "
"Place a label on pin 7 of the PIC. Enter the name 'uCtoLED'.  Name the wire "
"between the resistor and the LED as 'LEDtoR'. Name the wire between "
"'MYCONN3' and the resistor as 'INPUTtoR'."
msgstr ""
"标签也可用于简单地标记电线以用于提供信息。 在 PIC 的引脚7上放置一个标签。 输"
"入名称 _uCtoLED_ 。 将电阻和 LED 之间的导线命名为 _LEDtoR_ 。 将 _MYCONN3_ 和"
"电阻之间的导线命名为 _INPUTtoR_ 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:526
msgid ""
"You do not have to label the VCC and GND lines because the labels are "
"implied from the power objects they are connected to."
msgstr "您不必标记 VCC 和 GND 线，因为标签是从它们所连接的电源对象中隐含的。"

#. type: Plain text
#: getting_started_in_kicad.adoc:528
msgid "Below you can see what the final result should look like."
msgstr "下面是最终的结果。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:529
#, no-wrap
msgid "gsik_tutorial1_050_png"
msgstr "gsik_tutorial1_050_png"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:529
#, no-wrap
msgid "images/gsik_tutorial1_050.png"
msgstr "images/gsik_tutorial1_050.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:536
msgid ""
"Let's now deal with unconnected wires. Any pin or wire that is not connected "
"will generate a warning when checked by KiCad. To avoid these warnings you "
"can either instruct the program that the unconnected wires are deliberate or "
"manually flag each unconnected wire or pin as unconnected."
msgstr ""
"我们现在处理未连接的电线。 当 KiCad 检查时，任何未连接的引脚或电线都会产生警"
"告。 为了避免这些警告，您可以指示程序未经连接的电线是故意的，也可以手动将每个"
"未连接的电线或引脚标记为未连接。"

#. type: Plain text
#: getting_started_in_kicad.adoc:541
msgid ""
"Click on the 'Place no connection flag' icon image:images/icons/noconn."
"png[noconn_png] on the right toolbar. Click on pins 2, 3, 4 and 5. An X will "
"appear to signify that the lack of a wire connection is intentional."
msgstr ""
"单击右侧工具栏上的 _放置无连接标志_ 图标 image:images/icons/noconn."
"png[noconn_png] 。 单击引脚2,3,4和5，X似乎表示缺少有线连接是故意的。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:542
#, no-wrap
msgid "gsik_tutorial1_060_png"
msgstr "gsik_tutorial1_060_png"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:542
#, no-wrap
msgid "images/gsik_tutorial1_060.png"
msgstr "images/gsik_tutorial1_060.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:550
msgid ""
"Some components have power pins that are invisible. You can make them "
"visible by clicking on the 'Show hidden pins' icon image:images/icons/"
"hidden_pin.png[hidden_pin_png] on the left toolbar. Hidden power pins get "
"automatically connected if VCC and GND naming is respected. Generally "
"speaking, you should try not to make hidden power pins."
msgstr ""
"某些元件具有不可见的电源引脚。 您可以通过单击左侧工具栏上的 _显示隐藏的引脚_ "
"图标 image:images/icons/hidden_pin.png[hidden_pin_png] 使其可见。 如果遵守 "
"VCC 和 GND 命名，隐藏的电源引脚会自动连接。 一般来说，你应该尽量不要制作隐藏"
"的电源引脚。"

#. type: Plain text
#: getting_started_in_kicad.adoc:555
msgid ""
"It is now necessary to add a 'Power Flag' to indicate to KiCad that power "
"comes in from somewhere. Press [a] and search for 'PWR_FLAG' which is in "
"'power' library. Place two of them.  Connect them to a GND pin and to VCC as "
"shown below."
msgstr ""
"现在需要添加一个 _Power Flag_ 来向 KiCad 表明电源是从某个地方进来的。 按[a] "
"并搜索 _电源_ 库中的 _PWR_FLAG_ 。 放置其中两个。 将它们连接到 GND 引脚和 "
"VCC，如下所示。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:556
#, no-wrap
msgid "gsik_tutorial1_070_png"
msgstr "gsik_tutorial1_070_png"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:556
#, no-wrap
msgid "images/gsik_tutorial1_070.png"
msgstr "images/gsik_tutorial1_070.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:560
msgid ""
"This will avoid the classic schematic checking warning: _Pin connected to "
"some other pins but no pin to drive it_."
msgstr ""
"这将避免经典的原理图检查警告： _引脚连接到其他一些引脚但没有引脚来驱动它_ 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:564
msgid ""
"Sometimes it is good to write comments here and there. To add comments on "
"the schematic use the 'Place text' icon image:images/icons/text."
"png[text_png] on the right toolbar."
msgstr ""
"有时候在这里和那里写注释是件好事。 要在原理图上添加注释，请使用右侧工具栏上"
"的 _放置文本_ 图标 image:images/icons/text.png[text_png] 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:570
msgid ""
"All components now need to have unique identifiers. In fact, many of our "
"components are still named 'R?' or 'J?'. Identifier assignation can be done "
"automatically by clicking on the 'Annotate schematic symbols' icon image:"
"images/icons/annotate.png[annotate_png] on the top toolbar."
msgstr ""
"现在，所有元件都需要具有唯一标识符。 事实上，我们的许多元件仍被命名为 _R?_ 还"
"是 _J?_ 。 通过单击顶部工具栏上的 _注释原理图符号_ 图标 image:images/icons/"
"annotate.png[annotate_png] ，可以自动完成标识符分配。"

#. type: Plain text
#: getting_started_in_kicad.adoc:577
msgid ""
"In the Annotate Schematic window, select 'Use the entire schematic' and "
"click on the 'Annotate' button. Click 'Close'.  Notice how all the '?' have "
"been replaced with numbers. Each identifier is now unique. In our example, "
"they have been named 'R1', 'R2', 'U1', 'D1' and 'J1'."
msgstr ""
"在注释原理图窗口中，选择 _使用整个原理图_ 并单击 _注释_ 按钮。 点击 _关闭_。 "
"注意所有 _?_ 已被数字取代。 每个标识符现在都是唯一的 在我们的例子中，它们被命"
"名为 __R1__，__R2__，__U1__，__D1__ 和 __J1__ 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:586
msgid ""
"We will now check our schematic for errors. Click on the 'Perform electrical "
"rules check' icon image:images/icons/erc.png[erc_png] on the top toolbar. "
"Click on the 'Run' button. A report informing you of any errors or warnings "
"such as disconnected wires is generated. You should have 0 Errors and 0 "
"Warnings. In case of errors or warnings, a small green arrow will appear on "
"the schematic in the position where the error or the warning is located. "
"Check 'Create ERC file report' and press the 'Run' button again to receive "
"more information about the errors."
msgstr ""
"我们现在将检查原理图的错误。 单击顶部工具栏上的 _执行电气规则检查_ 图标 "
"image:images/icons/erc.png[erc_png] 。 单击 _运行_ 按钮。 生成一个报告，通知"
"您任何错误或警告，例如断开的电线。 你应该有 0个错误 和 0个警告。 如果出现错误"
"或警告，原理图中将出现一个小绿色箭头，指示错误或警告所在的位置。 选中 _创建"
"ERC文件报告_ 并再次按 _运行_ 按钮以接收有关错误的更多信息。"

#. type: Plain text
#: getting_started_in_kicad.adoc:590
msgid ""
"If you have a warning with \"No default editor found, you must choose it\", "
"try setting the path to `c:\\windows\\notepad.exe` (windows) or `/usr/bin/"
"gedit` (Linux)."
msgstr ""
"如果您收到 _未找到默认编辑器，则必须选择它_ 的警告，请尝试将路径设置为 __c:"
"\\windows\\notepad.exe__（windows）或 __/usr/bin/gedit__（Linux）。"

#. type: Plain text
#: getting_started_in_kicad.adoc:596
msgid ""
"The schematic is now finished. We can now create a Netlist file to which we "
"will add the footprint of each component. Click on the 'Generate netlist' "
"icon image:images/icons/netlist.png[netlist_png] on the top toolbar. Click "
"on the 'Generate Netlist' button and save under the default file name."
msgstr ""
"原理图现已完成。 我们现在可以创建一个网表文件，我们将添加每个元件的足迹。 单"
"击顶部工具栏上的 _生成网表_ 图标 image:images/icons/netlist."
"png[netlist_png] 。 单击 _生成网表_ 按钮并保存在默认文件名下。"

#. type: Plain text
#: getting_started_in_kicad.adoc:601
msgid ""
"Netlist was necessary in previous versions of KiCad.  In the recent versions "
"you can ignore it and instead use *Tools* -> *Update PCB from Schematic*. If "
"you do that you have to assign footprints to symbols first."
msgstr ""
"在以前版本的 KiCad 中，网表是必要的。 在最近的版本中，您可以忽略它，而是使用*"
"工具* -> *从原理图* 更新PCB。 如果这样做，您必须首先为符号指定封装。"

#. type: Plain text
#: getting_started_in_kicad.adoc:606
msgid ""
"After generating the Netlist file, click on the 'Run Cvpcb' icon image:"
"images/icons/cvpcb.png[cvpcb_png] on the top toolbar. If a missing file "
"error window pops up, just ignore it and click OK."
msgstr ""
"生成网表文件后，单击顶部工具栏上的 _运行Cvpcb_ 图标 image:images/icons/cvpcb."
"png[cvpcb_png] 。 如果弹出丢失的文件错误窗口，请忽略它并单击 _确定_ 。"

#. type: delimited block =
#: getting_started_in_kicad.adoc:610
msgid "There are many more ways to add footprints to symbols."
msgstr "还有很多方法可以为符号添加封装。"

#. type: delimited block =
#: getting_started_in_kicad.adoc:612
msgid "Right click on a symbol -> *Properties* -> *Edit Footprint*"
msgstr "右键单击符号 -> *属性* -> *编辑封装*"

#. type: delimited block =
#: getting_started_in_kicad.adoc:614
msgid ""
"Double click on a symbol, or right click on a symbol -> *Properties* -> "
"*Edit Properties* -> Footprint"
msgstr "双击符号，或右键单击符号 -> *属性* -> *编辑属性* -> 封装"

#. type: delimited block =
#: getting_started_in_kicad.adoc:615
#, no-wrap
msgid "*Tools* -> *Edit Symbol Fields*\n"
msgstr "*工具* -> *编辑符号字段*\n"

#. type: delimited block =
#: getting_started_in_kicad.adoc:617
#, no-wrap
msgid ""
"Check _Show footprint previews in symbol chooser_ in Eeschema's preferences\n"
"and select the footprint when you select a new symbol to place\n"
msgstr ""
"在 Eeschema 的首选项中，检查符号选择器中的显示封装预览\n"
"并在选择要放置的新符号时选择封装\n"

#. missing image here?
#. type: Plain text
#: getting_started_in_kicad.adoc:624
msgid ""
"_Cvpcb_ allows you to link all the components in your schematic with "
"footprints in the KiCad library. The pane on the center shows all the "
"components used in your schematic. Here select 'D1'. In the pane on the "
"right you have all the available footprints, here scroll down to 'LED_THT:"
"LED-D5.0mm' and double click on it."
msgstr ""
"_Cvpcb_ 允许您将原理图中的所有元件与 KiCad 库中的封装链接起来。 中心的窗格显"
"示原理图中使用的所有元件。 在这里选择 _D1_。 在右侧窗格中，您可以看到所有可用"
"的占用空间，此处向下滚动到 _LED_THT：LED-D5.0mm_ 并双击它。"

#. type: Plain text
#: getting_started_in_kicad.adoc:632
msgid ""
"It is possible that the pane on the right shows only a selected subgroup of "
"available footprints. This is because KiCad is trying to suggest to you a "
"subset of suitable footprints. Click on the icons image:images/icons/"
"module_filtered_list.png[module_filtered_list_png], image:images/icons/"
"module_pin_filtered_list.png[module_pin_filtered_list_png] and image:images/"
"icons/module_library_list.png[module_library_list_png] to enable or disable "
"these filters."
msgstr ""
"右侧窗格可能只显示可用封装的一个子集。点击图标 image:images/icons/"
"module_filtered_list.png[module_filtered_list_png], image:images/icons/"
"module_pin_filtered_list.png[module_pin_filtered_list_png] 和 image:images/"
"icons/module_library_list.png[module_library_list_png] 以启用或禁用这些筛选"
"器。"

#. type: Plain text
#: getting_started_in_kicad.adoc:637
msgid ""
"For 'U1' select the 'Package_DIP:DIP-8_W7.62mm' footprint.  For 'J1' select "
"the 'Connector:Banana_Jack_3Pin' footprint.  For 'R1' and 'R2' select the "
"'Resistor_THT:R_Axial_DIN0207_L6.3mm_D2.5mm_P2.54mm_Vertical' footprint."
msgstr ""
"对于 __U1__，选择 __Package_DIP：DIP-8_W7.62mm__ 封装。 对于 __J1__，选择 "
"__Connector：Banana_Jack_3Pin__ 封装。 对于 __R1__ 和 __R2__，选择 "
"__Resistor_THT：R_Axial_DIN0207_L6.3mm_D2.5mm_P2.54mm_Vertical__ 封装。"

#. type: Plain text
#: getting_started_in_kicad.adoc:642
msgid ""
"If you are interested in knowing what the footprint you are choosing looks "
"like, you can click on the 'View selected footprint' icon image:images/icons/"
"show_footprint.png[show_footprint_png] for a preview of the current "
"footprint."
msgstr ""
"如果您有兴趣知道您选择的封装是什么样的，您可以单击 _查看所选封装_ 图标 image:"
"images/icons/show_footprint.png[show_footprint_png] 以预览当前封装。"

#. type: Plain text
#: getting_started_in_kicad.adoc:646
msgid ""
"You are done. You can save the schematic now by clicking *File* -> **Save "
"Schematic** or with the button 'Apply, Save Schematic & Continue'."
msgstr ""
"完成以后，可以通过点击 *文件* -> **保存原理图** 或使用 _应用、保存原理图和继"
"续_ 按钮保存原理图。"

#. type: Plain text
#: getting_started_in_kicad.adoc:654
msgid ""
"You can close _Cvpcb_ and go back to the _Eeschema_ schematic editor. If you "
"didn't save it in Cvpcb save it now by clicking on *File* -> **Save**. "
"Create the netlist again. Your netlist file has now been updated with all "
"the footprints. Note that if you are missing the footprint of any device, "
"you will need to make your own footprints. This will be explained in a later "
"section of this document."
msgstr ""
"您可以关闭 __Cvpcb__ 并返回 _Eeschema_ 原理图编辑器。 如果您没有将其保存在 "
"Cvpcb 中，请单击 *文件* -> **保存** 立即保存。 再次创建网表。 您的网表文件现"
"已更新，包含所有封装。 请注意，如果您缺少任何设备的占地面积，则需要制作自己的"
"封装。 这将在本文档的后续部分中解释。"

#. type: Plain text
#: getting_started_in_kicad.adoc:660
msgid ""
"Now every symbol has a footprint. Instead of the net list and the next two "
"steps you can use *Tools* -> *Update PCB from Schematic*.  If you do that, "
"Pcbnew is opened with _Update PCB from Schematic_ dialog.  Click _Update "
"PCB_.  Then You can follow the instructions in the Pcbnew section of this "
"tutorial."
msgstr ""
"现在每个符号都有封装。 您可以使用 *工具* -> *从原理图* 更新PCB，而不是网表和"
"接下来的两个步骤。 如果您这样做，Pcbnew 将使用 _原理图更新PCB_ 对话框中的 打"
"开。 单击 _更新PCB_ 。 然后，您可以按照本教程的 Pcbnew 部分中的说明进行操作。"

#. type: Plain text
#: getting_started_in_kicad.adoc:663
msgid ""
"Switch to the KiCad project manager.  You can see the net list file in the "
"file list."
msgstr "切换到 KiCad 项目管理器。 您可以在文件列表中看到网表文件。"

#. type: Plain text
#: getting_started_in_kicad.adoc:667
msgid ""
"The netlist file describes all components and their respective pin "
"connections. The netlist file is actually a text file that you can easily "
"inspect, edit or script."
msgstr ""
"网表文件描述了所有元件及其各自的引脚连接。 网表文件实际上是一个文本文件，您可"
"以轻松地检查，编辑或编写脚本。"

#. type: Plain text
#: getting_started_in_kicad.adoc:670
msgid ""
"Library files (__*.lib__) are text files too and they are also easily "
"editable or scriptable."
msgstr "库文件（__ *.lib__）也是文本文件，它们也很容易编辑或编写脚本。"

#. type: Plain text
#: getting_started_in_kicad.adoc:677
msgid ""
"To create a Bill Of Materials (BOM), go to the _Eeschema_ schematic editor "
"and click on the 'Generate bill of materials' icon image:images/icons/bom."
"png[bom_png] on the top toolbar.  By default there is no plugin active. You "
"add one, by clicking on *Add Plugin* button. Select the *.xsl file you want "
"to use, in this case, we select __bom2csv.xsl__."
msgstr ""
"要创建物料清单（BOM），请转到 _Eeschema_ 原理图编辑器，然后单击顶部工具栏上"
"的 _生成物料清单_ 图标 image:images/icons/bom.png[bom_png]。 默认情况下，没有"
"处于活动的插件。 您可以通过单击 *添加插件* 按钮添加一个。 选择要使用的 *.xsl "
"文件，在这种情况下，我们选择 __bom2csv.xsl__。"

#. type: delimited block =
#: getting_started_in_kicad.adoc:681
#, no-wrap
msgid "*Linux:*\n"
msgstr "*Linux:*\n"

#. type: delimited block =
#: getting_started_in_kicad.adoc:683
msgid "If xsltproc is missing, you can download and install it with:"
msgstr "如果缺少 xsltproc，您可以下载并安装它："

#. type: delimited block =
#: getting_started_in_kicad.adoc:685
#, no-wrap
msgid " sudo apt-get install xsltproc\n"
msgstr " sudo apt-get install xsltproc\n"

#. type: delimited block =
#: getting_started_in_kicad.adoc:687
msgid "for a Debian derived distro like Ubuntu, or"
msgstr "对于像 Ubuntu 这样的 Debian 派生发行版，或者"

#. type: delimited block =
#: getting_started_in_kicad.adoc:689
#, no-wrap
msgid " sudo yum install xsltproc\n"
msgstr " sudo yum install xsltproc\n"

#. type: delimited block =
#: getting_started_in_kicad.adoc:692
msgid ""
"for a RedHat derived distro. If you use neither of the two kind of distro, "
"use your distro package manager command to install the xsltproc package."
msgstr ""
"对于 RedHat 派生的发行版。 如果您不使用这两种发行版，请使用您的发行版软件包管"
"理器命令来安装 xsltproc 软件包。"

#. type: delimited block =
#: getting_started_in_kicad.adoc:694
msgid "xsl files are located at: _/usr/lib/kicad/plugins/_."
msgstr "xsl文件位于：__/usr/lib/kicad/plugins/__。"

#. type: delimited block =
#: getting_started_in_kicad.adoc:696
#, no-wrap
msgid "*Apple OS X:*\n"
msgstr "*Apple OS X:*\n"

#. type: delimited block =
#: getting_started_in_kicad.adoc:699
msgid ""
"If xsltproc is missing, you can either install the Apple Xcode tool from the "
"Apple site that should contain it, or download and install it with:"
msgstr ""
"如果缺少 xsltproc，您可以从应该包含它的 Apple 站点安装 Apple Xcode 工具，或者"
"下载并安装它："

#. type: delimited block =
#: getting_started_in_kicad.adoc:701
#, no-wrap
msgid " brew install libxslt\n"
msgstr " brew install libxslt\n"

#. type: delimited block =
#: getting_started_in_kicad.adoc:703
msgid ""
"xsl files are located at: _/Library/Application Support/kicad/plugins/_."
msgstr "xsl文件位于：__/Library/Application Support/kicad/plugins/__。"

#. type: delimited block =
#: getting_started_in_kicad.adoc:705
#, no-wrap
msgid "*Windows:*\n"
msgstr "*Windows:*\n"

#. type: delimited block =
#: getting_started_in_kicad.adoc:709
msgid ""
"xsltproc.exe and the included xsl files will be located at _＜KiCad install "
"directory＞\\bin_ and _＜KiCad install directory＞\\bin\\scripting"
"\\plugins_, respectively."
msgstr ""
"xsltproc.exe 和包含的 xsl 文件将分别位于_《KiCad 安装目录》\\bin_ 和 __ "
"《KiCad 安装目录》\\bin\\scripting\\plugins__。"

#. type: delimited block =
#: getting_started_in_kicad.adoc:711
#, no-wrap
msgid "*All platforms:*\n"
msgstr "*所有平台：*\n"

#. type: delimited block =
#: getting_started_in_kicad.adoc:713
msgid "You can get the latest bom2csv.xsl via:"
msgstr "您可以通过以下方式获取最新的 bom2csv.xsl："

#. type: delimited block =
#: getting_started_in_kicad.adoc:715
msgid ""
"https://raw.githubusercontent.com/KiCad/kicad-source-mirror/master/eeschema/"
"plugins/xsl_scripts/bom2csv.xsl"
msgstr ""
"https://raw.githubusercontent.com/KiCad/kicad-source-mirror/master/eeschema/"
"plugins/xsl_scripts/bom2csv.xsl"

#. type: Block title
#: getting_started_in_kicad.adoc:717
#, no-wrap
msgid "KiCad automatically generates the command, for example:"
msgstr "KiCad 自动生成命令，例如："

#. type: delimited block -
#: getting_started_in_kicad.adoc:720
#, no-wrap
msgid "xsltproc -o \"%O\" \"/home/<user>/kicad/eeschema/plugins/bom2csv.xsl\" \"%I\"\n"
msgstr "xsltproc -o \"%O\" \"/home/<user>/kicad/eeschema/plugins/bom2csv.xsl\" \"%I\"\n"

#. type: Block title
#: getting_started_in_kicad.adoc:722
#, no-wrap
msgid "You may want to add the extension, so change this command line to:"
msgstr "您可能想要添加扩展名，因此请将此命令行更改为："

#. type: delimited block -
#: getting_started_in_kicad.adoc:725
#, no-wrap
msgid "xsltproc -o \"%O.csv\" \"/home/<user>/kicad/eeschema/plugins/bom2csv.xsl\" \"%I\"\n"
msgstr "xsltproc -o \"%O.csv\" \"/home/<user>/kicad/eeschema/plugins/bom2csv.xsl\" \"%I\"\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:728
msgid "Press Help button for more info."
msgstr "按 _帮助_ 按钮获取更多信息。"

#. type: Plain text
#: getting_started_in_kicad.adoc:732
msgid ""
"Now press 'Generate'. The file (same name as your project) is located in "
"your project folder.  Open the **.csv* file with LibreOffice Calc or Excel. "
"An import window will appear, press OK."
msgstr ""
"现在按 _生成_。 该文件（与项目同名）位于项目文件夹中。 使用 LibreOffice Calc "
"或 Excel 打开 * *.csv* 文件。 将出现导入窗口，按 OK。"

#. type: Plain text
#: getting_started_in_kicad.adoc:736
msgid ""
"You are now ready to move to the PCB layout part, which is presented in the "
"next section. However, before moving on let's take a quick look at how to "
"connect component pins using a bus line."
msgstr ""
"您现在可以转到 PCB 布局部分，这将在下一节中介绍。 但是，在继续之前，让我们快"
"速了解如何使用总线连接元件引脚。"

#. type: Title ===
#: getting_started_in_kicad.adoc:738
#, no-wrap
msgid "Bus connections in KiCad"
msgstr "KiCad 的总线连接"

#. type: Plain text
#: getting_started_in_kicad.adoc:744
msgid ""
"Sometimes you might need to connect several sequential pins of component A "
"with some other sequential pins of component B. In this case you have two "
"options: the labelling method we already saw or the use of a bus connection. "
"Let's see how to do it."
msgstr ""
"有时您可能需要将元件 A 的多个顺序引脚与元件 B 的其他顺序引脚连接。在这种情况"
"下，您有两个选项：我们已经看到的标记方法或使用总线连接。 让我们看看如何做到这"
"一点。"

#. type: Plain text
#: getting_started_in_kicad.adoc:751
msgid ""
"Let us suppose that you have three 4-pin connectors that you want to connect "
"together pin to pin. Use the label option (press [l])  to label pin 4 of the "
"P4 part. Name this label 'a1'. Now press [Insert] to have the same item "
"automatically added on the pin below pin 4 (PIN 3). Notice how the label is "
"automatically renamed 'a2'."
msgstr ""
"让我们假设您有三个4针连接器，您想要将引脚连接在一起。 使用标签选项（按[l]）标"
"记 P4 部件的引脚4。 将此标签命名为 __a1__ 。 现在按 [Insert] 将相同的项目自动"
"添加到引脚4（引脚3）下方的引脚上。 注意标签是如何自动重命名为 __a2__ 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:755
msgid ""
"Press [Insert] two more times. This key corresponds to the action 'Repeat "
"last item' and it is an infinitely useful command that can make your life a "
"lot easier."
msgstr ""
"再按 [Insert] 两次。 此键对应于 _重复最后一项_ 操作，它是一个无限有用的命令，"
"可以让您的生活更轻松。"

#. type: Plain text
#: getting_started_in_kicad.adoc:766
msgid ""
"Repeat the same labelling action on the two other connectors CONN_2 and "
"CONN_3 and you are done. If you proceed and make a PCB you will see that the "
"three connectors are connected to each other. Figure 2 shows the result of "
"what we described. For aesthetic purposes it is also possible to add a "
"series of 'Place wire to bus entry' using the icon image:images/icons/"
"add_line2bus.png[Place wire to bus entry] and bus line using the icon image:"
"images/icons/add_bus2bus.png[Place bus to bus entry], as shown in Figure 3. "
"Mind, however, that there will be no effect on the PCB."
msgstr ""
"在另外两个连接器 CONN_2 和 CONN_3 上重复相同的标签操作，您就完成了。 如果继续"
"制作 PCB，您将看到三个连接器相互连接。 图2 显示了我们描述的结果。 出于美观目"
"的，还可以使用图标图像添加一系列 _将电线放入总线入口_ image:images/icons/"
"add_line2bus.png[将电线放入总线入口] 和使用图标图像的总线线路：image:images/"
"icons/add_bus2bus.png[将总线放到总线入口] ，如图3 所示。但是，请注意，对 PCB "
"没有影响。"

#. type: Plain text
#: getting_started_in_kicad.adoc:770
msgid ""
"It should be pointed out that the short wire attached to the pins in Figure "
"2 is not strictly necessary. In fact, the labels could have been applied "
"directly to the pins."
msgstr ""
"应该指出的是，连接到 图2 中的引脚的短导线不是严格必需的。 实际上，标签可以直"
"接应用于引脚。"

#. type: Plain text
#: getting_started_in_kicad.adoc:777
msgid ""
"Let's take it one step further and suppose that you have a fourth connector "
"named CONN_4 and, for whatever reason, its labelling happens to be a little "
"different (b1, b2, b3, b4). Now we want to connect _Bus a_ with _Bus b_ in a "
"pin to pin manner. We want to do that without using pin labelling (which is "
"also possible) but by instead using labelling on the bus line, with one "
"label per bus."
msgstr ""
"让我们更进一步，假设你有一个名为 CONN_4 的第四个连接器，无论出于什么原因，它"
"的标签恰好有点不同（b1，b2，b3，b4）。 现在我们想要以引脚到引脚的方式将_Bus "
"a_ 与 _Bus b_ 连接起来。 我们希望不使用引脚标记（这也是可能的），而是使用总线"
"上的标签，每个总线一个标签。"

#. type: Plain text
#: getting_started_in_kicad.adoc:784
msgid ""
"Connect and label CONN_4 using the labelling method explained before. Name "
"the pins b1, b2, b3 and b4. Connect the pin to a series of 'Wire to bus "
"entry' using the icon image:images/icons/add_line2bus.png[add_line2bus_png] "
"and to a bus line using the icon image:images/icons/add_bus."
"png[add_bus_png]. See Figure 4."
msgstr ""
"使用之前说明的标记方法连接并标记 CONN_4。 将引脚命名为b1，b2，b3和b4。 使用图"
"标 image:images/icons/add_line2bus.png[add_line2bus_png] 将引脚连接到一系列 ­_"
"电线到总线入口_ ，并使用图标 image:images/icons/add_bus.png[add_bus_png] 连接"
"到总线。见图4。"

#. type: Plain text
#: getting_started_in_kicad.adoc:787
msgid "Put a label (press [l]) on the bus of CONN_4 and name it 'b[1..4]'."
msgstr "在 CONN_4 的总线上放一个标签（按[l]）并命名为 _b[1..4]_ 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:790
msgid "Put a label (press [l]) on the previous bus and name it 'a[1..4]'."
msgstr "在前一个总线上放一个标签（按[l]）并将其命名为 _a[1..4]_ 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:793
msgid ""
"What we can now do is connect bus a[1..4] with bus b[1..4] using a bus line "
"with the button image:images/icons/add_bus.png[add_bus_png]."
msgstr ""
"我们现在可以做的是使用带有按钮图像的总线连接总线 _a[1..4]_ 和总线 "
"__b[1..4]__ ：image:images/icons/add_bus.png[add_bus_png] 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:797
msgid ""
"By connecting the two buses together, pin a1 will be automatically connected "
"to pin b1, a2 will be connected to b2 and so on. Figure 4 shows what the "
"final result looks like."
msgstr ""
"通过将两条总线连接在一起，引脚a1 将自动连接到 引脚b1，a2将连接到b2，依此类"
"推。 图4 显示了最终结果的样子。"

#. type: Plain text
#: getting_started_in_kicad.adoc:802
msgid ""
"The 'Repeat last item' option accessible via [Insert] can be successfully "
"used to repeat period item insertions. For instance, the short wires "
"connected to all pins in Figure 2, Figure 3 and Figure 4 have been placed "
"with this option."
msgstr ""
"通过 [Insert] 可访问的 _重复上一项_ 选项可以成功用于重复期间项目插入。 例如，"
"连接到图2，图3和图4中所有引脚的短导线都已放置此选项。"

#. type: Plain text
#: getting_started_in_kicad.adoc:806
msgid ""
"The 'Repeat last item' option accessible via [Insert] has also been "
"extensively used to place the many series of 'Wire to bus entry' using the "
"icon image:images/icons/add_line2bus.png[add_line2bus_png]."
msgstr ""
"通过 [Insert] 访问的 _重复上一项_ 选项也被广泛用于使用图标 image:images/"
"icons/add_line2bus.png[add_line2bus_png] 放置许多系列的 _电线到总线入口_。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:807
#, no-wrap
msgid "gsik_bus_connection_png"
msgstr "gsik_bus_connection_png"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:807
#, no-wrap
msgid "images/gsik_bus_connection.png"
msgstr "images/gsik_bus_connection.png"

#. type: Title ==
#: getting_started_in_kicad.adoc:810
#, no-wrap
msgid "Layout printed circuit boards"
msgstr "布局印刷电路板"

#. type: Plain text
#: getting_started_in_kicad.adoc:814
msgid ""
"It is now time to use the netlist file you generated to lay out the PCB.  "
"This is done with the _Pcbnew_ tool."
msgstr ""
"现在是时候使用您生成的网表文件来布局 PCB 了。 这是通过 _Pcbnew_ 工具完成的。"

#. type: Plain text
#: getting_started_in_kicad.adoc:819
msgid ""
"If you used _Update PCB from Schematic_ from _Eeschema_ you don't need the "
"netlist and step 5.  You can now drop the footprints into the board as in "
"steps 6 and 7, then enter sheet information and design rules with steps "
"2...4."
msgstr ""
"如果您使用来自 _Eeschema_ 的 _原理图更新到PCB_，则不需要网表和步骤5.您现在可"
"以像步骤6和7一样将脚印放入板中，然后按 步骤2~4 输入表单信息和设计规则。"

#. type: Title ===
#: getting_started_in_kicad.adoc:821
#, no-wrap
msgid "Using Pcbnew"
msgstr "使用 Pcbnew"

#. type: Plain text
#: getting_started_in_kicad.adoc:829
msgid ""
"From the KiCad project manager, click on the 'Pcb layout editor' icon image:"
"images/icons/pcbnew.png[pcbnew_png]. You can also use the corresponding "
"toolbar button from _Eeschema_.  The 'Pcbnew' window will open. If you get a "
"message saying that a _*.kicad_pcb_ file does not exist and asks if you want "
"to create it, just click Yes."
msgstr ""
"从 KiCad 项目管理器，单击 _Pcb布局编辑器_ 图标 image:images/icons/pcbnew."
"png[pcbnew_png] 。 您还可以使用 _Eeschema_ 中的相应工具栏按钮。 _Pcbnew_ 窗口"
"将打开。 如果您收到一条消息，指出 __*.kicad_pcb__ 文件不存在并询问您是否要创"
"建它，只需单击是。"

#. type: Plain text
#: getting_started_in_kicad.adoc:834
msgid ""
"Begin by entering some schematic information. Click on the 'Page settings' "
"icon image:images/icons/sheetset.png[sheetset_png] on the top toolbar. Set "
"the appropriate 'paper size' ('A4','8.5x11' etc.)  and 'title' as "
"'Tutorial1'."
msgstr ""
"首先输入一些原理图信息。 单击顶部工具栏上的 _页面设置_ 图标 image:images/"
"icons/sheetset.png[sheetset_png] 。 将相应的 __纸张尺寸__（ A4，8.5x11 等）"
"和 _标题_ 设置为 __教程1__ 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:843
msgid ""
"It is a good idea to start by setting the *clearance* and the *minimum track "
"width* to those required by your PCB manufacturer. In general you can set "
"the clearance to '0.25' and the minimum track width to '0.25'. Click on the "
"*Setup* -> *Design Rules* menu. If it does not show already, click on the "
"'Net Classes Editor' tab. Change the 'Clearance' field at the top of the "
"window to '0.25' and the 'Track Width' field to '0.25' as shown below. "
"Measurements here are in mm."
msgstr ""
"最好将 *间距* 和 *最小布线宽度* 设置为PCB制造商要求的宽度。 通常，您可以将间"
"隙设置为 __0.25mm__，将最小轨道宽度设置为 __0.25mm__ 。 单击 *设置* -> *设计"
"规则* 菜单。 如果它尚未显示，请单击 _网络类编辑器_ 选项卡。 将窗口顶部的 _间"
"距_ 字段更改为 __0.25mm__，将 _布线宽度_ 字段更改为 __0.25mm__，如下所示。 这"
"里的测量单位是 __mm__。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:844
#, no-wrap
msgid "Design Rules Window"
msgstr "设计规则窗口"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:844
#, no-wrap
msgid "images/design_rules.png"
msgstr "images/zh/design_rules.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:849
msgid ""
"Click on the 'Global Design Rules' tab and set 'Minimum track width' to "
"'0.25'. Click the OK button to commit your changes and close the Design "
"Rules Editor window."
msgstr ""
"单击 _全局设计规则_ 选项卡，将 _最小布线宽度_ 设置为 __0.25mm__ 。 单击 _确定"
"_ 按钮以提交更改并关闭 _设计规则编辑器_ 窗口。"

#. type: Plain text
#: getting_started_in_kicad.adoc:856
msgid ""
"Now we will import the netlist file if you created one.  Click on the 'Read "
"netlist' icon image:images/icons/netlist.png[netlist_png] on the top "
"toolbar. The netlist file 'tutorial1.net' should be selected in the 'Netlist "
"file' field if it was created from Eeschema.  Click on 'Read Current "
"Netlist'. Then click the 'Close' button."
msgstr ""
"现在我们将导入网表文件，如果你创建了一个。 单击顶部工具栏上的 _读取网表_ 图"
"标 image:images/icons/netlist.png[netlist_png] 。 如果网表文件 _教程1.net_ 是"
"从 Eeschema 创建的，则应在 _网表文件_ 字段中选择。 点击 _读取当前网表_ 。 然"
"后单击 _关闭_ 按钮。"

#. type: Plain text
#: getting_started_in_kicad.adoc:859
msgid ""
"All components should now be visible. They are selected and follow the mouse "
"cursor."
msgstr "现在应该可以看到所有元件。 选择它们并按照鼠标光标。"

#. type: Plain text
#: getting_started_in_kicad.adoc:863
msgid ""
"Move the components to the middle of the board. If necessary you can zoom in "
"and out while you move the components. Click the left mouse button."
msgstr ""
"将元件移动到板的中间。 如有必要，您可以在移动元件时放大和缩小。 单击鼠标左"
"键。"

#. type: Plain text
#: getting_started_in_kicad.adoc:869
msgid ""
"All components are connected via a thin group of wires called __ratsnest__. "
"Make sure that the 'Show/hide board ratsnest' button image:images/icons/"
"general_ratsnest.png[general_ratsnest_png] is pressed. In this way you can "
"see the ratsnest linking all components."
msgstr ""
"所有元件都通过称为 __ratsnest__ 的一组细线连接。 确保按下 _显示/隐藏板鼠标_ "
"按钮 image:images/icons/general_ratsnest.png[general_ratsnest_png] 。 通过这"
"种方式，您可以看到链接所有元件的最快速度。"

#. type: Plain text
#: getting_started_in_kicad.adoc:876
msgid ""
"You can move each component by hovering over it and pressing [m].  Click "
"where you want to place them. Alternatively you can select a component by "
"clicking on it and then drag it.  Press [r] to rotate a component.  Move all "
"components around until you minimise the number of wire crossovers."
msgstr ""
"您可以通过将每个元件悬停在其上并按 [m] 来移动它们。 单击要放置它们的位置。 或"
"者，您可以通过单击选择元件然后拖动它。 按 [r] 旋转元件。 移动所有元件，直到最"
"小化电线交叉的数量。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:877
#, no-wrap
msgid "gsik_tutorial1_080_png"
msgstr "gsik_tutorial1_080_png"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:877
#, no-wrap
msgid "images/gsik_tutorial1_080.png"
msgstr "images/gsik_tutorial1_080.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:884
msgid ""
"Note how one pin of the 100 ohm resistor is connected to pin 6 of the PIC "
"component. This is the result of the labelling method used to connect pins. "
"Labels are often preferred to actual wires because they make the schematic "
"much less messy."
msgstr ""
"注意 100欧姆 电阻的一个引脚如何连接到 PIC 元件的 引脚6。 这是用于连接引脚的标"
"记方法的结果。 标签通常比实际的电线更受欢迎，因为它们使原理图更加杂乱。"

#. type: Plain text
#: getting_started_in_kicad.adoc:892
msgid ""
"Now we will define the edge of the PCB. Select the 'Edge.Cuts' layer from "
"the drop-down menu in the top toolbar. Click on the 'Add graphic lines' icon "
"image:images/icons/add_dashed_line.png[add_dashed_line_png] on the right "
"toolbar. Trace around the edge of the board, clicking at each corner, and "
"remember to leave a small gap between the edge of the green and the edge of "
"the PCB."
msgstr ""
"现在我们将定义 PCB 的边缘。 从顶部工具栏的下拉菜单中选择 _边切（边缘切割）_ "
"图层。 单击右侧工具栏上的 _添加图形线_ 图标 image:images/icons/"
"add_dashed_line.png[add_dashed_line_png] 。 沿着电路板边缘，在每个角落点击，"
"并记住在绿色边缘和 PCB 边缘之间留一个小间隙。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:893
#, no-wrap
msgid "Select the Edge.Cuts layer"
msgstr "选择边剪切层"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:893
#, no-wrap
msgid "images/select_edge_cuts.png"
msgstr "images/select_edge_cuts.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:898
msgid ""
"Next, connect up all the wires except GND. In fact, we will connect all GND "
"connections in one go using a ground plane placed on the bottom copper "
"(called __B.Cu__) of the board."
msgstr ""
"接下来，连接除 GND 之外的所有电线。 事实上，我们将使用放置在电路板底部铜线"
"（称为 __B.Cu__ ）的接地层一次连接所有 GND 连接。"

#. type: Plain text
#: getting_started_in_kicad.adoc:902
msgid ""
"Now we must choose which copper layer we want to work on. Select 'F.Cu "
"(PgUp)' in the drop-down menu on the top toolbar. This is the front top "
"copper layer."
msgstr ""
"现在我们必须选择我们想要处理的铜层。 在顶部工具栏的下拉菜单中选择 __F."
"Cu（PgUp）__ 。 这是前顶部铜层。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:903
#, no-wrap
msgid "Select the Front top copper layer"
msgstr "选择前顶部铜层"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:903
#, no-wrap
msgid "images/select_top_copper.png"
msgstr "images/select_top_copper.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:910
msgid ""
"If you decide, for instance, to do a 4 layer PCB instead, go to *Setup* -> "
"*Layers Setup* and change 'Copper Layers' to 4. In the 'Layers' table you "
"can name layers and decide what they can be used for.  Notice that there are "
"very useful presets that can be selected via the 'Preset Layer Groupings' "
"menu."
msgstr ""
"例如，如果您决定改为使用 4层 PCB，请转到 *设置* -> *层设置* 并将 _铜层_ 更改"
"为 4.在 _层_ 表中，您可以命名图层并确定它们的含义 用于。 请注意，可以通过 _预"
"设图层分组_ 菜单选择非常有用的预设。"

#. type: Plain text
#: getting_started_in_kicad.adoc:918
msgid ""
"Click on the 'Route tracks' icon image:images/icons/add_tracks."
"png[add_tracks_png] on the right toolbar. Click on pin 1 of 'J1' and run a "
"track to pad 'R2'. Double-click to set the point where the track will end. "
"The width of this track will be the default 0.250 mm. You can change the "
"track width from the drop-down menu in the top toolbar. Mind that by default "
"you have only one track width available."
msgstr ""
"单击右侧工具栏上的 _布线_ 图标 image:images/icons/add_tracks."
"png[add_tracks_png] 。 单击 _J1_ 的第1针并运行轨道以填充 _R2_ 。 双击以设置轨"
"道结束的点。 该轨道的宽度将默认为 0.250mm。 您可以从顶部工具栏的下拉菜单中更"
"改布线宽度。 请注意，默认情况下，您只有一个可用的布线宽度。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:919
#, no-wrap
msgid "pcbnew_select_track_width_png"
msgstr "pcbnew_select_track_width_png"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:919
#, no-wrap
msgid "images/pcbnew_select_track_width.png"
msgstr "images/zh/pcbnew_select_track_width.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:926
msgid ""
"If you would like to add more track widths go to: *Setup* -> *Design Rules* -"
"> *Global Design Rules* tab and at the bottom right of this window add any "
"other width you would like to have available. You can then choose the widths "
"of the track from the drop-down menu while you lay out your board. See the "
"example below (inches)."
msgstr ""
"如果您想添加更多的轨道宽度，请转到：*设置* -> *设计规则* -> *全局设计规则* 选"
"项卡，在此窗口的右下角添加您希望可用的任何其他宽度。 然后，您可以在布置电路板"
"时从下拉菜单中选择布线的宽度。 请参阅下面的示例（英寸）。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:927
#, no-wrap
msgid "custom_tracks_width_png"
msgstr "custom_tracks_width_png"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:927
#, no-wrap
msgid "images/custom_tracks_width.png"
msgstr "images/zh/custom_tracks_width.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:935
msgid ""
"Alternatively, you can add a Net Class in which you specify a set of "
"options. Go to *Setup* -> *Design Rules* -> *Net Classes Editor* and add a "
"new class called 'power'. Change the track width from 8 mil (indicated as "
"0.0080) to 24 mil (indicated as 0.0240). Next, add everything but ground to "
"the 'power' class (select 'default' at left and 'power' at right and use the "
"arrows)."
msgstr ""
"或者，您可以添加一个 _网络类_ ，在其中指定一组选项。 转到 *设置* -> *设计规则"
"* -> *网络类编辑器* 并添加一个名为 _电源_ 的新类。 将布线宽度从 8mil（表示为"
"0.0080）更改为 24mil（表示为0.0240）。 接下来，将除地面之外的所有内容添加到 _"
"电源_ 类（左侧选择 _默认_ ，右侧选择 _电源_ 并使用箭头）。"

#. type: Plain text
#: getting_started_in_kicad.adoc:939
msgid ""
"If you want to change the grid size, *Right click* -> **Grid**.  Be sure to "
"select the appropriate grid size before or after laying down the components "
"and connecting them together with tracks."
msgstr ""
"如果要更改网格大小，*右键单击* -> **网格**。 在放下元件并将它们与轨道连接在一"
"起之前或之后，请务必选择合适的网格尺寸。"

#. type: Plain text
#: getting_started_in_kicad.adoc:942
msgid ""
"Repeat this process until all wires, except pin 3 of J1, are connected. Your "
"board should look like the example below."
msgstr ""
"重复此过程，直到连接除 J1 的引脚3之外的所有电线。 您的电路板应如下所示。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:943
#, no-wrap
msgid "gsik_tutorial1_090_png"
msgstr "gsik_tutorial1_090_png"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:943
#, no-wrap
msgid "images/gsik_tutorial1_090.png"
msgstr "images/gsik_tutorial1_090.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:951
msgid ""
"Let's now run a track on the other copper side of the PCB. Select 'B.Cu' in "
"the drop-down menu on the top toolbar. Click on the 'Route tracks' icon "
"image:images/icons/add_tracks.png[add_tracks_png]. Draw a track between pin "
"3 of J1 and pin 8 of U1. This is actually not necessary since we could do "
"this with the ground plane. Notice how the colour of the track has changed."
msgstr ""
"现在让我们在 PCB 的另一个侧上运行布线。 在顶部工具栏的下拉菜单中选择 _B."
"Cu_ 。 点击 _布线_ 图标 image:images/icons/add_tracks.png[add_tracks_png]。 "
"在 J1 的引脚3和 U1 的引脚8之间画一条线。 这实际上没有必要，因为我们可以用地平"
"面做到这一点。 注意轨道的颜色是如何变化的。"

#. type: Plain text
#: getting_started_in_kicad.adoc:957
#, no-wrap
msgid ""
"**Go from pin A to pin B by changing layer**. It is possible to\n"
"change the copper plane while you are running a track by placing a\n"
"via.  While you are running a track on the upper copper plane,\n"
"right click and select 'Place Via' or simply press [v]. This will\n"
"take you to the bottom layer where you can complete your track.\n"
msgstr ""
"**通过更改图层** 从引脚A到引脚B。 有可能\n"
"通过放置布线来运行时更改铜平面\n"
"过孔通过当您在上部铜平面上运行布线时，\n"
"右键单击并选择 _放置过孔_ 或只需按[v]。 这将\n"
"带您到最底层，您可以完成您的布线。\n"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:958
#, no-wrap
msgid "place_a_via_png"
msgstr "place_a_via_png"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:958
#, no-wrap
msgid "images/place_a_via.png"
msgstr "images/place_a_via.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:965
msgid ""
"When you want to inspect a particular connection you can click on the "
"'Highlight net' icon image:images/icons/net_highlight.png[net_highlight_png] "
"on the right toolbar.  Click on pin 3 of J1. The track itself and all pads "
"connected to it should become highlighted."
msgstr ""
"当您想要检查特定连接时，可以单击右侧工具栏上的 _高亮网络_ 图标 image:images/"
"icons/net_highlight.png[net_highlight_png] 。 点击 J1 的引脚3。 布线本身和连"
"接到它的所有焊盘都应高亮显示。"

#. type: Plain text
#: getting_started_in_kicad.adoc:973
msgid ""
"Now we will make a ground plane that will be connected to all GND pins. "
"Click on the 'Add filled zones' icon image:images/icons/add_zone."
"png[add_zone_png] on the right toolbar. We are going to trace a rectangle "
"around the board, so click where you want one of the corners to be. In the "
"dialogue that appears, set 'Default pad connection' to 'Thermal relief' and "
"'Outline slope' to 'H,V and 45 deg only' and click OK."
msgstr ""
"现在我们将制作一个连接到所有 GND 引脚的接地层。 单击右侧工具栏上的 _添加填充"
"区域_ 图标 image:images/icons/add_zone.png[add_zone_png] 。 我们将在板周围布"
"线一个矩形，因此单击您想要其中一个角的位置。 在出现的对话框中，将 _默认焊盘连"
"接_ 设置为 _防散热（花焊盘）_ ，将 _轮廓角度_ 设置为 _仅限H，V和45度_ ，然后"
"单击 _确定_ 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:979
msgid ""
"Trace around the outline of the board by clicking each corner in rotation.  "
"Finish your rectangle by clicking the first corner second time. Right click "
"inside the area you have just traced.  Click on 'Zones'->'Fill or Refill All "
"Zones'. The board should fill in with green and look something like this:"
msgstr ""
"通过单击旋转中的每个角来跟踪板的轮廓。 通过第二次单击第一个角完成矩形。 右键"
"单击刚刚跟踪的区域。 单击 _区域_ -> _填充或重新填充所有区域_ 。 板应填充为绿"
"色，看起来像这样："

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:980
#, no-wrap
msgid "gsik_tutorial1_100_png"
msgstr "gsik_tutorial1_100_png"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:980
#, no-wrap
msgid "images/gsik_tutorial1_100.png"
msgstr "images/gsik_tutorial1_100.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:987
msgid ""
"Run the design rules checker by clicking on the 'Perform design rules check' "
"icon image:images/icons/drc.png[drc_png] on the top toolbar.  Click on "
"'Start DRC'. There should be no errors. Click on 'List Unconnected'. There "
"should be no unconnected items. Click OK to close the DRC Control dialogue."
msgstr ""
"单击顶部工具栏上的 _执行设计规则检查_ 图标 image:images/icons/drc."
"png[drc_png] 运行设计规则检查器。 点击 _开始DRC_ 。 应该没有错误。 点击 _列表"
"未连接_ 。 应该没有未连接的项目。 单击 _确定_ 关闭 _DRC控制_ 对话框。"

#. type: Plain text
#: getting_started_in_kicad.adoc:990
msgid ""
"Save your file by clicking on *File* -> **Save**. To admire your board in "
"3D, click on *View* -> **3D Viewer**."
msgstr ""
"单击 *文件* -> **保存** 保存文件。 要以 3D 方式观察您的电路板，请单击 *视图* "
"-> **3D 查看器**。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:991
#, no-wrap
msgid "pcbnew_3d_viewer_png"
msgstr "pcbnew_3d_viewer_png"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:991
#, no-wrap
msgid "images/pcbnew_3d_viewer.png"
msgstr "images/pcbnew_3d_viewer.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:994
msgid "You can drag your mouse around to rotate the PCB."
msgstr "您可以拖动鼠标来旋转 PCB。"

#. type: Plain text
#: getting_started_in_kicad.adoc:997
msgid ""
"Your board is complete. To send it off to a manufacturer you will need to "
"generate all Gerber files."
msgstr "你的板是完整的。 要将其发送给制造商，您需要生成所有 Gerber 文件。"

#. type: Title ===
#: getting_started_in_kicad.adoc:999
#, no-wrap
msgid "Generate Gerber files"
msgstr "生成 Gerber 文件"

#. type: Plain text
#: getting_started_in_kicad.adoc:1004
msgid ""
"Once your PCB is complete, you can generate Gerber files for each layer and "
"send them to your favourite PCB manufacturer, who will make the board for "
"you."
msgstr ""
"完成 PCB 后，您可以为每一层生成 Gerber 文件，并将它们发送给您最喜欢的 PCB 制"
"造商，他们将为您制作电路板。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1006
msgid "From KiCad, open the _Pcbnew_ board editor."
msgstr "从 KiCad，打开 _Pcbnew_ 板编辑器。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1010
msgid ""
"Click on *File* -> **Plot**. Select 'Gerber' as the 'Plot format' and select "
"the folder in which to put all Gerber files.  Proceed by clicking on the "
"'Plot' button."
msgstr ""
"点击 *文件* -> ** 绘制 ** 。 选择 _Gerber_ 作为 _绘制格式_ 并选择放置所有 "
"Gerber 文件的文件夹。 单击 _绘制_ 按钮继续。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1013
msgid ""
"To generate the drill file, from _Pcbnew_ go again to the *File* -> *Plot* "
"option. Default settings should be fine."
msgstr ""
"要生成钻取文件，请从 _Pcbnew_ 再次转到 *文件* -> *绘制* 选项。 默认设置应该没"
"问题。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1016
msgid ""
"These are the layers you need to select for making a typical 2-layer PCB:"
msgstr "这些是您制作典型的2层 PCB 时需要选择的层："

#. type: Table
#: getting_started_in_kicad.adoc:1027
#, no-wrap
msgid ""
"|Layer |KiCad Layer Name |Default Gerber Extension\n"
"    |\"Use Protel filename extensions\" is enabled\n"
"|Bottom Layer |B.Cu |.GBR |.GBL\n"
"|Top Layer |F.Cu |.GBR |.GTL\n"
"|Top Overlay |F.SilkS |.GBR |.GTO\n"
"|Bottom Solder Resist |B.Mask |.GBR |.GBS\n"
"|Top Solder Resist |F.Mask |.GBR |.GTS\n"
"|Edges |Edge.Cuts |.GBR |.GM1\n"
msgstr ""
"|层 |KiCad 层名 |默认 Gerber 扩展\n"
"    |\"Use Protel filename extensions\" is enabled\n"
"|Bottom Layer |B.Cu |.GBR |.GBL\n"
"|Top Layer |F.Cu |.GBR |.GTL\n"
"|Top Overlay |F.SilkS |.GBR |.GTO\n"
"|Bottom Solder Resist |B.Mask |.GBR |.GBS\n"
"|Top Solder Resist |F.Mask |.GBR |.GTS\n"
"|Edges |Edge.Cuts |.GBR |.GM1\n"

#. type: Title ===
#: getting_started_in_kicad.adoc:1030
#, no-wrap
msgid "Using GerbView"
msgstr "使用 Gerbview"

#. type: Plain text
#: getting_started_in_kicad.adoc:1039
msgid ""
"To view all your Gerber files go to the KiCad project manager and click on "
"the 'GerbView' icon.  On the drop-down menu or in the Layers manager select "
"'Graphic layer 1'.  Click on *File* -> *Open Gerber file(s)* or click on the "
"icon image:images/icons/gerber_file.png[gerber_file_png]. Select and open "
"all generated Gerber files. Note how they all get displayed one on top of "
"the other."
msgstr ""
"要查看所有 Gerber 文件，请转到 KiCad 项目管理器并单击 _GerbView_ 图标。 在下"
"拉菜单或图层管理器中，选择 _图形图层1_ 。 单击 *文件* -> *打开 Gerber 文件* "
"或单击图标 image:images/icons/gerber_file.png[gerber_file_png] 。 选择并打开"
"所有生成的 Gerber 文件。 注意它们如何一个显示在另一个之上。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1041
msgid "Open the drill files with *File* -> *Open Excellon Drill File(s)*."
msgstr "使用 *文件* -> *打开 Excellon 钻取文件* 打开钻取文件。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1044
msgid ""
"Use the Layers manager on the right to select/deselect which layer to show.  "
"Carefully inspect each layer before sending them for production."
msgstr ""
"使用右侧的图层管理器选择/取消选择要显示的图层。 在发送生产之前仔细检查每一"
"层。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1047
msgid ""
"The view works similarly to Pcbnew. Right click inside the view and click "
"'Grid' to change the grid."
msgstr "该视图与 Pcbnew 类似。 在视图内右键单击并单击 _网格_ 以更改网格。"

#. type: Title ===
#: getting_started_in_kicad.adoc:1049
#, no-wrap
msgid "Automatically route with FreeRouter"
msgstr "使用 FreeRouter 自动布线"

#. type: Plain text
#: getting_started_in_kicad.adoc:1056
msgid ""
"Routing a board by hand is quick and fun, however, for a board with lots of "
"components you might want to use an autorouter. Remember that you should "
"first route critical traces by hand and then set the autorouter to do the "
"boring bits. Its work will only account for the unrouted traces. The "
"autorouter we will use here is FreeRouting."
msgstr ""
"手动布线板既快速又有趣，但对于具有大量元件的电路板，您可能希望使用自动布线"
"器。 请记住，您应首先手动路由关键迹线，然后设置自动布线器以执行无聊位。 它的"
"工作只会解释未布线的痕迹。 我们将在这里使用的自动布线器是 FreeRouting。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1061
msgid ""
"FreeRouting is an open source java application.  Currently FreeRouting "
"exists in several more or less identical copies which you can find by doing "
"an internet search for \"freerouting\".  It may be found in source only form "
"or as a precompiled java package."
msgstr ""
"FreeRouting 是一个开源的 Java 应用程序。 目前，FreeRouting 存在于几个或多或少"
"相同的副本中，您可以通过互联网搜索 _freerouting_ 找到它们。 它可以在源代码形"
"式或预编译的 Java 包中找到。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1066
msgid ""
"From _Pcbnew_ click on *File* -> *Export* -> *Specctra DSN* and save the "
"file locally.  Launch FreeRouter and click on the 'Open Your Own Design' "
"button, browse for the _dsn_ file and load it."
msgstr ""
"从 _Pcbnew_ 单击 *文件* -> *导出* -> *Specctra DSN* 并在本地保存文件。 启动 "
"FreeRouter 并单击 _打开您自己的设计_ 按钮，浏览 _dsn_ 文件并加载它。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1072
msgid ""
"FreeRouter has some features that KiCad does not currently have, both for "
"manual routing and for automatic routing. FreeRouter operates in two main "
"steps: first, routing the board and then optimising it. Full optimisation "
"can take a long time, however you can stop it at any time need be."
msgstr ""
"FreeRouter 具有 KiCad 目前不具备的一些功能，包括手动路由和自动路由。 "
"FreeRouter 主要有两个步骤：首先，对电路板进行布线，然后对其进行优化。 完全优"
"化可能需要很长时间，但您可以随时停止它。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1080
msgid ""
"You can start the automatic routing by clicking on the 'Autorouter' button "
"on the top bar. The bottom bar gives you information about the on-going "
"routing process. If the 'Pass' count gets above 30, your board probably can "
"not be autorouted with this router. Spread your components out more or "
"rotate them better and try again. The goal in rotation and position of parts "
"is to lower the number of crossed airlines in the ratsnest."
msgstr ""
"您可以通过单击顶部栏上的 _自动布线器_ 按钮来启动自动路由。 底栏为您提供有关正"
"在进行的路由过程的信息。 如果 _通过_ 计数超过30，则您的电路板可能无法使用此路"
"由器自动执行。 更多地展开您的元件或更好地旋转它们并再试一次。 零件的旋转和位"
"置的目标是降低速率的交叉走线的数量。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1085
msgid ""
"Making a left-click on the mouse can stop the automatic routing and "
"automatically start the optimisation process. Another left-click will stop "
"the optimisation process. Unless you really need to stop, it is better to "
"let FreeRouter finish its job."
msgstr ""
"左键单击鼠标可以停止自动路由并自动启动优化过程。 另一次左键单击将停止优化过"
"程。 除非你真的需要停下来，否则最好让 FreeRouter 完成它的工作。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1089
msgid ""
"Click on the *File* -> *Export Specctra Session File* menu and save the "
"board file with the _.ses_ extension. You do not really need to save the "
"FreeRouter rules file."
msgstr ""
"单击 *文件* -> *导出 Specctra 会话文件* 菜单并使用 _.ses_ 扩展名保存板文件。 "
"您实际上不需要保存 FreeRouter 规则文件。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1093
msgid ""
"Back to __Pcbnew__. You can import your freshly routed board by clicking on "
"*File* -> *Import* -> *Spectra Session* and selecting your _.ses_ file."
msgstr ""
"回到 __Pcbnew__。 您可以通过单击 *文件* -> *导入* -> *Spectra 会话* 并选择 _."
"ses_ 文件来导入刚刚布线的电路板。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1098
msgid ""
"If there is any routed trace that you do not like, you can delete it and re-"
"route it again, using [Delete] and the routing tool, which is the 'Route "
"tracks' icon image:images/icons/add_tracks.png[Add Track icon] on the right "
"toolbar."
msgstr ""
"如果有任何您不喜欢的布线，可以使用 [Delete] 和路由工具删除它并重新路由它，这"
"是 _布线_ 图标 image:images/icons/add_tracks.png[Add Track icon] 在右侧工具栏"
"上添加。"

#. type: Title ==
#: getting_started_in_kicad.adoc:1100
#, no-wrap
msgid "Forward annotation in KiCad"
msgstr "在 KiCad 中转发注释"

#. type: Plain text
#: getting_started_in_kicad.adoc:1106
msgid ""
"Once you have completed your electronic schematic, the footprint assignment, "
"the board layout and generated the Gerber files, you are ready to send "
"everything to a PCB manufacturer so that your board can become reality."
msgstr ""
"完成电子原理图，封装分配，电路板布局和生成 Gerber 文件后，您就可以将所有内容"
"发送给 PCB 制造商，以便您的电路板成为现实。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1114
msgid ""
"Often, this linear work-flow turns out to be not so uni-directional. For "
"instance, when you have to modify/extend a board for which you or others "
"have already completed this work-flow, it is possible that you need to move "
"components around, replace them with others, change footprints and much "
"more. During this modification process, what you do not want to do is to re-"
"route the whole board again from scratch. Instead, this is how you do it:"
msgstr ""
"通常，这种线性工作流程并非如此单向。 例如，当您必须修改/扩展您或其他人已经完"
"成此工作流程的板时，您可能需要移动元件，替换其他元件，更改占用空间等等。 在此"
"修改过程中，您不想做的是从头开始重新布线整个电路板。 相反，这是你如何做到这一"
"点："

#. type: Plain text
#: getting_started_in_kicad.adoc:1117
msgid ""
"Let's suppose that you want to replace a hypothetical connector CON1 with "
"CON2."
msgstr "假设您想要用 CON2 替换假设的连接器 CON1。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1119
msgid "You already have a completed schematic and a fully routed PCB."
msgstr "您已经拥有完整的原理图和完全布线的 PCB。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1125
msgid ""
"From KiCad, start __Eeschema__, make your modifications by deleting CON1 and "
"adding CON2. Save your schematic project with the icon image:images/icons/"
"save.png[Save icon] and c lick on the 'Netlist generation' icon image:images/"
"icons/netlist.png[netlist_png] on the top toolbar."
msgstr ""
"从 KiCad 开始 __Eeschema__，通过删除 CON1 并添加 CON2 进行修改。 使用图标图像"
"保存原理图项目 image:images/icons/save.png[保存图标] 并点击顶部工具栏上的 _网"
"表生成_ 图标 image:images/icons/netlist.png[网表图标]。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1128
msgid ""
"Click on 'Netlist' then on 'save'. Save to the default file name.  You have "
"to rewrite the old one."
msgstr "点击 _网表_ 然后点击 _保存_ 。 保存为默认文件名。 你必须重写旧的。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1134
msgid ""
"Now assign a footprint to CON2. Click on the 'Run Cvpcb' icon image:images/"
"icons/cvpcb.png[cvpcb] on the top toolbar. Assign the footprint to the new "
"device CON2. The rest of the components still have the previous footprints "
"assigned to them. Close __Cvpcb__."
msgstr ""
"现在为 CON2 分配封装。 单击顶部工具栏上的 _运行Cvpcb_ 图标 image:images/"
"icons/cvpcb.png[cvpcb]。 将封装分配给新设备 CON2。 其余元件仍然具有分配给它们"
"的先前封装。 关闭 __Cvpcb__ 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1137
msgid ""
"Back in the schematic editor, save the project by clicking on 'File' -> "
"'Save Whole Schematic Project'. Close the schematic editor."
msgstr ""
"返回原理图编辑器，单击 _文件_ -> _保存整个原理图项目_ 保存项目。 关闭原理图编"
"辑器。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1140
msgid ""
"From the KiCad project manager, click on the 'Pcbnew' icon. The 'Pcbnew' "
"window will open."
msgstr "从 KiCad 项目管理器，单击 _Pcbnew_ 图标。 _Pcbnew_ 窗口将打开。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1144
msgid ""
"The old, already routed, board should automatically open. Let's import the "
"new netlist file. Click on the 'Read Netlist' icon image:images/icons/"
"netlist.png[netlist_png] on the top toolbar."
msgstr ""
"旧的，已经布线的电路板应该自动打开。 让我们导入新的网表文件。 单击顶部工具栏"
"上的 _读取网表_ 图标 image:images/icons/netlist.png[网表图标]。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1148
msgid ""
"Click on the 'Browse Netlist Files' button, select the netlist file in the "
"file selection dialogue, and click on 'Read Current Netlist'.  Then click "
"the 'Close' button."
msgstr ""
"单击 _浏览网表文件_ 按钮，在文件选择对话框中选择网表文件，然后单击 _读取当前"
"网表_ 。 然后单击 _关闭_ 按钮。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1153
msgid ""
"At this point you should be able to see a layout with all previous "
"components already routed. On the top left corner you should see all "
"unrouted components, in our case the CON2. Select CON2 with the mouse.  Move "
"the component to the middle of the board."
msgstr ""
"此时，您应该能够看到已布置所有先前元件的布局。 在左上角，您应该看到所有未布线"
"的元件，在我们的例子中是 CON2。 用鼠标选择 CON2。 将元件移动到板的中间。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1156
msgid ""
"Place CON2 and route it. Once done, save and proceed with the Gerber file "
"generation as usual."
msgstr "放置 CON2 并布线它。 完成后，保存并继续照常生成 Gerber 文件。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1164
msgid ""
"The process described here can easily be repeated as many times as you need. "
"Beside the Forward Annotation method described above, there is another "
"method known as Backward Annotation. This method allows you to make "
"modifications to your already routed PCB from Pcbnew and updates those "
"modifications in your schematic and netlist file. The Backward Annotation "
"method, however, is not that useful and is therefore not described here."
msgstr ""
"这里描述的过程可以根据需要轻松地重复多次。除了上面描述的前向注释方法之外，还"
"有另一种方法称为后向注释。此方法允许您从 Pcbnew 修改已布线的 PCB，并在原理图"
"和网表文件中更新这些修改。然而，后向注释方法没有那么有用，因此这里不描述它。"

#. type: Title ==
#: getting_started_in_kicad.adoc:1166
#, no-wrap
msgid "Make schematic symbols in KiCad"
msgstr "在 KiCad 中制作原理图符号"

#. type: Plain text
#: getting_started_in_kicad.adoc:1173
msgid ""
"Sometimes a symbol that you want to place on your schematic is not in a "
"KiCad library. This is quite normal and there is no reason to worry. In this "
"section we will see how a new schematic symbol can be quickly created with "
"KiCad. Nevertheless, remember that you can always find KiCad components on "
"the Internet."
msgstr ""
"有时，您想要放置在原理图中的符号不在 KiCad 库中。 这很正常，没有理由担心。 在"
"本节中，我们将了解如何使用 KiCad 快速创建新的原理图符号。 不过，请记住，您始"
"终可以在互联网上找到 KiCad 元件。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1179
msgid ""
"In KiCad, a symbol is a piece of text that starts with 'DEF' and ends with "
"'ENDDEF'. One or more symbols are normally placed in a library file with the "
"extension __.lib__. If you want to add symbols to a library file you can "
"just use the cut and paste commands of a text editor."
msgstr ""
"在 KiCad 中，符号是一段以 _DEF_ 开头并以 _ENDDEF_ 结尾的文本。 一个或多个符号"
"通常放在库文件中，扩展名为 __.lib__。 如果要将符号添加到库文件，只需使用文本"
"编辑器的剪切和粘贴命令即可。"

#. type: Title ===
#: getting_started_in_kicad.adoc:1181
#, no-wrap
msgid "Using Component Library Editor"
msgstr "使用元件库编辑器"

#. type: Plain text
#: getting_started_in_kicad.adoc:1187
msgid ""
"We can use the _Component Library Editor_ (part of __Eeschema__)  to make "
"new components. In our project folder 'tutorial1' let's create a folder "
"named 'library'. Inside we will put our new library file _myLib.lib_ as soon "
"as we have created our new component."
msgstr ""
"我们可以使用 _元件库编辑器_（__Eeschema__ 的一部分）来创建新元件。 在我们的项"
"目文件夹 __教程1__ 中，让我们创建一个名为 _库_ 的文件夹。 在我们创建新元件"
"后，我们将在内部放置新的库文件 _myLib.lib_ 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1202
msgid ""
"Now we can start creating our new component. From KiCad, start __Eeschema__, "
"click on the 'Library Editor' icon image:images/icons/libedit."
"png[libedit_png] and then click on the 'New component' icon image:images/"
"icons/new_component.png[new_component_png]. The Component Properties window "
"will appear. Name the new component 'MYCONN3', set the 'Default reference "
"designator' as 'J', and the 'Number of units per package' as '1'. Click OK. "
"If the warning appears just click yes.  At this point the component is only "
"made of its labels. Let's add some pins. Click on the 'Add Pins' icon image:"
"images/icons/pin.png[pin_png] on the right toolbar. To place the pin, left "
"click in the centre of the part editor sheet just below the 'MYCONN3' label."
msgstr ""
"现在我们可以开始创建新元件了。 从 KiCad 开始 __Eeschema__，单击 _库编辑器_ 图"
"标 image:images/icons/libedit.png[库编辑器图标]，然后单击 _新元件_ 图标 "
"image:images/icons/new_component.png[新元件图标]。 将出现 _元件属性_ 窗口。 "
"将新组件命名为 __MYCONN3__ ，将 _默认参考指示符_ 设置为 _J_ ，将 _每个包的单"
"位数_ 设置为 _1_ 。 单击确定。 如果出现警告，则单击 _是_ 。 此时，元件仅由其"
"标签组成。 让我们添加一些引脚。 单击右侧工具栏上的 _添加引脚_ 图标 image:"
"images/icons/pin.png[引脚图标]。 要放置引脚，请在 _MYCONN3_ 标签正下方的零件"
"编辑器工作表中间单击鼠标左键。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1206
msgid ""
"In the Pin Properties window that appears, set the pin name to 'VCC', set "
"the pin number to '1', and the 'Electrical type' to 'Power input' then click "
"OK."
msgstr ""
"在出现的引脚属性窗口中，将引脚名称设置为 _VCC_ ，将引脚编号设置为 _1_ ，将 _"
"电气类型_ 设置为 _电源输入_ ，然后单击 _确定_ 。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:1207
#, no-wrap
msgid "Pin Properties"
msgstr "引脚属性"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1207
#, no-wrap
msgid "images/pin_properties.png"
msgstr "images/zh/pin_properties.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:1211
msgid ""
"Place the pin by clicking on the location you would like it to go, right "
"below the 'MYCONN3' label."
msgstr "在 _MYCONN3_ 标签下方单击您想要的位置放置引脚。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1215
msgid ""
"Repeat the place-pin steps, this time 'Pin name' should be 'INPUT', 'Pin "
"number' should be '2', and 'Electrical Type' should be 'Passive'."
msgstr ""
"重复执行引脚步骤，这次 _引脚名_ 应为 _输入_ ， _引脚号_ 应为 _2_ ， _电气类型"
"_ 应为 _被动_ 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1221
msgid ""
"Repeat the place-pin steps, this time 'Pin name' should be 'GND', 'Pin "
"number' should be '3', and 'Electrical Type' should be 'Passive'.  Arrange "
"the pins one on top of the other. The component label 'MYCONN3' should be in "
"the centre of the page (where the blue lines cross)."
msgstr ""
"重复放置引脚步骤，这次 _引脚名称_ 应为 _GND_ ， _引脚编号_ 应为 _3_ ， _电气"
"类型_ 应为 _被动_ 。 将销钉一个放在另一个的顶部。 元件标签 _MYCONN3_ 应位于页"
"面的中心（蓝线交叉的位置）。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1229
msgid ""
"Next, draw the contour of the component. Click on the 'Add rectangle' icon "
"image:images/icons/add_rectangle.png[add_rectangle_png]. We want to draw a "
"rectangle next to the pins, as shown below. To do this, click where you want "
"the top left corner of the rectangle to be (do not hold the mouse button "
"down). Click again where you want the bottom right corner of the rectangle "
"to be."
msgstr ""
"接下来，绘制元件的轮廓。 单击 _添加矩形_ 图标 image:images/icons/"
"add_rectangle.png[添加矩形图标] 。 我们想在引脚旁边绘制一个矩形，如下所示。 "
"为此，请单击矩形左上角的位置（不要按住鼠标按钮）。 再次单击矩形右下角的位置。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:1230
#, no-wrap
msgid "gsik_myconn3_l_png"
msgstr "gsik_myconn3_l_png"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1230
#, no-wrap
msgid "images/gsik_myconn3_l.png"
msgstr "images/gsik_myconn3_l.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:1236
msgid ""
"If you want to fill the rectangle with yellow, set the fill colour to "
"'yellow 4' in *Preferences* -> *Select color scheme*, then select the "
"rectangle in the editing screen with [e], selecting 'Fill background'."
msgstr ""
"如果要用黄色填充矩形，请在 *首选项* -> *选择颜色方案* 中将填充颜色设置为 __黄"
"色4__，然后使用 [e] 在编辑屏幕中选择矩形，选择 _填充背景_ 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1241
msgid ""
"Save the component in your library __myLib.lib__. Click on the 'New Library' "
"icon image:images/icons/new_library.png[new_library_png], navigate into "
"_tutorial1/library/_ folder and save the new library file with the name "
"__myLib.lib__."
msgstr ""
"将元件保存在库 __myLib.lib__ 中。 单击 _新建库_ 图标 image:images/icons/"
"new_library.png[新建库图标] ，导航到 _教程1/库/_ 文件夹并保存名为 __myLib."
"lib__ 的新库文件。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1244
msgid ""
"Go to *Preferences* -> *Component Libraries* and add both _tutorial1/library/"
"_ in 'User defined search path' and _myLib.lib in_ 'Component library files'."
msgstr ""
"转到 *首选项* -> *元件库* 并在 _用户定义的搜索路径_ 中添加 _教程1/库/_ ，在 _"
"元件库文件_ 中添加 _mylib.lib_ 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1250
msgid ""
"Click on the 'Select working library' icon image:images/icons/library."
"png[library_png]. In the Select Library window click on _myLib_ and click "
"OK. Notice how the heading of the window indicates the library currently in "
"use, which now should be __myLib__."
msgstr ""
"单击 _选择工作库_ 图标 image:images/icons/library.png[library_png] 。 在 _选"
"择库_ 窗口中，单击 _myLib_ ，然后单击 _确定_ 。 注意窗口的标题如何表示当前正"
"在使用的库，现在应该是 __myLib__ 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1259
msgid ""
"Click on the 'Update current component in current library' icon image:images/"
"icons/save_part_in_mem.png[save_part_in_mem_png] in the top toolbar. Save "
"all changes by clicking on the 'Save current loaded library on disk' icon "
"image:images/icons/save_library.png[save_library_png] in the top toolbar. "
"Click 'Yes' in any confirmation messages that appear.  The new schematic "
"component is now done and available in the library indicated in the window "
"title bar."
msgstr ""
"单击顶部工具栏中的 _更新当前库中的当前元件_ 图标 image:images/icons/"
"save_part_in_mem.png[更新当前库中的当前元件图标] 。 单击顶部工具栏中的 _在磁"
"盘上保存当前加载的库_ 图标 image:images/icons/save_library.png[保存的库图标] "
"保存所有更改。 在出现的任何确认消息中单击 _是_ 。 现在，新的逻辑示意图元件已"
"在窗口标题栏中指示的库中完成并可用。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1263
msgid ""
"You can now close the Component library editor window. You will return to "
"the schematic editor window. Your new component will now be available to you "
"from the library __myLib__."
msgstr ""
"您现在可以关闭 _元件库_ 编辑器窗口。 您将返回到原理图编辑器窗口。 您的新元件"
"现在可以从库 __myLib__ 中使用。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1268
msgid ""
"You can make any library _file.lib_ file available to you by adding it to "
"the library path. From __Eeschema__, go to *Preferences* -> *Library* and "
"add both the path to it in 'User defined search path' and _file.lib_ in "
"'Component library files'."
msgstr ""
"您可以通过将库 __.lib__ 文件添加到库路径来使其可用。 从 __Eeschema__ 开始，转"
"到 *首选项* -> *库* 并在 _用户定义的搜索路径_ 中添加路径，在 _元件库文件_ 中"
"添加 _file.lib_  。"

#. type: Title ===
#: getting_started_in_kicad.adoc:1270
#, no-wrap
msgid "Export, import and modify library components"
msgstr "导出，导入和修改库元件"

#. type: Plain text
#: getting_started_in_kicad.adoc:1276
msgid ""
"Instead of creating a library component from scratch it is sometimes easier "
"to start from one already made and modify it. In this section we will see "
"how to export a component from the KiCad standard library 'device' to your "
"own library _myOwnLib.lib_ and then modify it."
msgstr ""
"而不是从头开始创建库元件，有时从已经制作并修改它更容易。 在本节中，我们将了解"
"如何将元件从 KiCad 标准库 _设备_ 导出到您自己的库 _myOwnLib.lib_ ，然后进行修"
"改。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1284
msgid ""
"From KiCad, start __Eeschema__, click on the 'Library Editor' icon image:"
"images/icons/libedit.png[libedit_png], click on the 'Select working library' "
"icon image:images/icons/library.png[library_png] and choose the library "
"'device'. Click on 'Load component to edit from the current lib' icon image:"
"images/icons/import_cmp_from_lib.png[import_cmp_from_lib_png] and import the "
"'RELAY_2RT'."
msgstr ""
"从 KiCad 开始 __Eeschema__，点击 _库编辑器_ 图标 image:images/icons/libedit."
"png[库编辑器图标] ，点击 _选择工作库_ 图标 image:images/icons/library.png[库"
"图标] 并选择库的 _设备_ 。 单击 _从当前库中加载元件进行编辑_ 图标image:"
"images/icons/import_cmp_from_lib.png[从当前库中加载元件进行编辑图标] 并导入 "
"_RELAY_2RT_ 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1288
msgid ""
"Click on the 'Export component' icon image:images/icons/export."
"png[export_png], navigate into the _library/_ folder and save the new "
"library file with the name _myOwnLib.lib._"
msgstr ""
"单击 _导出元件_ 图标 image:images/icons/export.png[导出图标]，导航到 _库/_ 文"
"件夹并保存名为 _myOwnLib.lib_ 的新库文件。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1294
msgid ""
"You can make this component and the whole library _myOwnLib.lib_ available "
"to you by adding it to the library path. From __Eeschema__, go to "
"*Preferences* -> *Component Libraries* and add both _library/_ in 'User "
"defined search path' and _myOwnLib.lib_ in the 'Component library files'. "
"Close the window."
msgstr ""
"您可以将此元件和整个库 _myOwnLib.lib_ 添加到库路径中，从而使您可以使用它。 "
"从  __Eeschema__，转到 *首选项* -> *元件库* 并在 _用户定义的搜索路径_ 中添加 "
"_library/_ ，在 _元件库文件_ 中添加 _myOwnLib.lib_ 。 关闭窗口。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1300
msgid ""
"Click on the 'Select working library' icon image:images/icons/library."
"png[library_png]. In the Select Library window click on _myOwnLib_ and click "
"OK. Notice how the heading of the window indicates the library currently in "
"use, it should be __myOwnLib__."
msgstr ""
"单击 _选择工作库_ 图标 image:images/icons/library.png[库图标] 。 在选择库窗口"
"中，单击 _myOwnLib_ 并单击 OK。 注意窗口的标题如何表示当前正在使用的库，它应"
"该是 __myOwnLib__ 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1304
msgid ""
"Click on the 'Load component to edit from the current lib' icon image:images/"
"icons/import_cmp_from_lib.png[import_cmp_from_lib_png] and import the "
"'RELAY_2RT'."
msgstr ""
"单击 _从当前库中加载元件进行编辑_ 图标 image:images/icons/"
"import_cmp_from_lib.png[从当前库中加载元件进行编辑图标] 并导入 _RELAY_2RT_ 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1307
msgid ""
"You can now modify the component as you like. Hover over the label "
"'RELAY_2RT', press [e] and rename it 'MY_RELAY_2RT'."
msgstr ""
"您现在可以根据需要修改元件。 将鼠标悬停在 _RELAY_2RT_ 标签上，按 [e] 并将其重"
"命名为 _MY_RELAY_2RT_ 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1314
msgid ""
"Click on 'Update current component in current library' icon image:images/"
"icons/save_part_in_mem.png[save_part_in_mem_png] in the top toolbar. Save "
"all changes by clicking on the 'Save current loaded library on disk' icon "
"image:images/icons/save_library.png[save_library_png] in the top toolbar."
msgstr ""
"单击顶部工具栏中的 _更新当前库中的当前元件_ 图标 image:images/icons/"
"save_part_in_mem.png[更新当前库中的当前元件图标] 。 单击顶部工具栏中的 _在磁"
"盘上保存当前加载的库_ 图标 image:images/icons/save_library.png[保存库图标] 保"
"存所有更改。"

#. type: Title ===
#: getting_started_in_kicad.adoc:1316
#, no-wrap
msgid "Make schematic components with quicklib"
msgstr "使用 quicklib 制作原理图元件"

#. type: Plain text
#: getting_started_in_kicad.adoc:1321
msgid ""
"This section presents an alternative way of creating the schematic component "
"for MYCONN3 (see <<myconn3,MYCONN3>> above) using the Internet tool "
"__quicklib__."
msgstr ""
"本节介绍使用互联网工具 __quicklib__ 为 MYCONN3 创建原理图元件的另一种方法（参"
"见上面的《myconn3，MYCONN3》）。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1324
msgid ""
"Head to the _quicklib_ web page: http://kicad.rohrbacher.net/quicklib.php"
msgstr "前往 _quicklib_ 网页：http://kicad.rohrbacher.net/quicklib.php"

#. type: Plain text
#: getting_started_in_kicad.adoc:1327
msgid ""
"Fill out the page with the following information: Component name: MYCONN3 "
"Reference Prefix: J Pin Layout Style: SIL Pin Count, N: 3"
msgstr ""
"使用以下信息填写页面：元件名称：MYCONN3 参考前缀：J引脚布局样式：SIL 引脚数，"
"N:3"

#. type: Plain text
#: getting_started_in_kicad.adoc:1331
msgid ""
"Click on the 'Assign Pins' icon. Fill out the page with the following "
"information: Pin 1: VCC Pin 2: input Pin 3: GND.  Type : Passive for all 3 "
"pins."
msgstr ""
"单击 _分配引脚_ 图标。 使用以下信息填写页面：引脚1：VCC;引脚2：输入引脚;3："
"GND。 类型：所有3个引脚都被动。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1335
msgid ""
"Click on the icon 'Preview it' and, if you are satisfied, click on the "
"'Build Library Component'. Download the file and rename it __tutorial1/"
"library/myQuickLib.lib.__. You are done!"
msgstr ""
"单击 _预览_ 图标，如果您满意，请单击 _构建库元件_ 。 下载文件并将其重命名为 "
"__教程1/库/myQuickLib.lib__ 。 你完成了！"

#. type: Plain text
#: getting_started_in_kicad.adoc:1341
msgid ""
"Have a look at it using KiCad. From the KiCad project manager, start "
"__Eeschema__, click on the 'Library Editor' icon image:images/icons/libedit."
"png[libedit_png], click on the 'Import Component' icon image:images/icons/"
"import.png[import_png], navigate to _tutorial1/library/_ and select "
"_myQuickLib.lib._"
msgstr ""
"使用 KiCad 查看它。 从 KiCad 项目管理器，启动 __Eeschema__，单击 _库编辑器_ "
"图标 image:images/icons/libedit.png[库编辑器图标] ，单击 _导入元件_ 图标 "
"image:images/icons/import.png[导入元件图标] ，导航到 _教程1/库/_ 并选择 "
"_myQuickLib.lib_ 。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:1342
#, no-wrap
msgid "gsik_myconn3_quicklib_png"
msgstr "gsik_myconn3_quicklib_png"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1342
#, no-wrap
msgid "images/gsik_myconn3_quicklib.png"
msgstr "images/gsik_myconn3_quicklib.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:1349
msgid ""
"You can make this component and the whole library _myQuickLib.lib_ available "
"to you by adding it to the KiCad library path. From __Eeschema__, go to "
"*Preferences* -> *Component Libraries* and add _library_ in 'User defined "
"search path' and _myQuickLib.lib_ in 'Component library files'."
msgstr ""
"您可以通过将此元件和整个库 _myQuickLib.lib_ 添加到 KiCad 库路径来使其可用。 "
"从 __Eeschema__ ，转到 *首选项* -> *元件库* 并在 _用户定义的搜索路径_ 中添加 "
"_library_ ，在 _元件库文件_ 中添加 _myQuickLib.lib_ 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1353
msgid ""
"As you might guess, this method of creating library components can be quite "
"effective when you want to create components with a large pin count."
msgstr ""
"正如您可能猜到的，当您想要创建具有大引脚数的元件时，这种创建库元件的方法非常"
"有效。"

#. type: Title ===
#: getting_started_in_kicad.adoc:1355
#, no-wrap
msgid "Make a high pin count schematic component"
msgstr "制作高引脚数的原理图元件"

#. type: Plain text
#: getting_started_in_kicad.adoc:1362
msgid ""
"In the section titled _Make Schematic Components in quicklib_ we saw how to "
"make a schematic component using the _quicklib_ web-based tool.  However, "
"you will occasionally find that you need to create a schematic component "
"with a high number of pins (some hundreds of pins). In KiCad, this is not a "
"very complicated task."
msgstr ""
"在 _quicklib_ 中标题为 _制作原理图元件_ 的部分中，我们了解了如何使用 "
"_quicklib_ 基于 Web 的工具制作原理图元件。 但是，您偶尔会发现需要创建一个具有"
"大量引脚（几百个引脚）的原理图元件。 在 KiCad 中，这不是一项非常复杂的任务。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1368
msgid ""
"Suppose that you want to create a schematic component for a device with 50 "
"pins. It is common practise to draw it using multiple low pin-count "
"drawings, for example two drawings with 25 pins each. This component "
"representation allows for easy pin connection."
msgstr ""
"假设您要为具有 50 个引脚的器件创建原理图元件。 通常的做法是使用多个低引脚数的"
"图纸来绘制它，例如两个图纸，每个图纸有25个引脚。 该元件表示允许简单的引脚连"
"接。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1373
msgid ""
"The best way to create our component is to use _quicklib_ to generate two 25-"
"pin components separately, re-number their pins using a Python script and "
"finally merge the two by using copy and paste to make them into one single "
"DEF and ENDDEF component."
msgstr ""
"创建元件的最佳方法是使用 _quicklib_ 分别生成两个25引脚元件，使用 Python 脚本"
"重新编号它们的引脚，最后通过使用复制和粘贴将它们合并为一个单独的 DEF 和 "
"ENDDEF 元件。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1379
msgid ""
"You will find an example of a simple Python script below that can be used in "
"conjunction with an _in.txt_ file and an _out.txt_ file to re-number the "
"line: +X PIN1 1 -750 600 300 R 50 50 1 1 I+ into +X PIN26 26 -750 600 300 R "
"50 50 1 1 I+ this is done for all lines in the file __in.txt__."
msgstr ""
"您将在下面找到一个简单的 Python 脚本示例，它可以与 _in.txt_ 文件和 _out.txt_ "
"文件一起使用以重新编号该行：+X PIN1 1 -750 600 300 R 50 50 1 1 I+ into +X "
"PIN26 26 -750 600 300 R 50 50 1 1 I+ 这对文件 __in.txt__ 中的所有行都已完成。"

#. type: Block title
#: getting_started_in_kicad.adoc:1380
#, no-wrap
msgid "Simple script"
msgstr "简单的脚本"

#. type: delimited block -
#: getting_started_in_kicad.adoc:1403
#, no-wrap
msgid ""
"#!/usr/bin/env python\n"
"''' simple script to manipulate KiCad component pins numbering'''\n"
"import sys, re\n"
"try:\n"
"    fin=open(sys.argv[1],'r')\n"
"    fout=open(sys.argv[2],'w')\n"
"except:\n"
"    print \"oh, wrong use of this app, try:\", sys.argv[0], \"in.txt out.txt\"\n"
"    sys.exit()\n"
"for ln in fin.readlines():\n"
"    obj=re.search(\"(X PIN)(\\d*)(\\s)(\\d*)(\\s.*)\",ln)\n"
"if obj:\n"
"    num = int(obj.group(2))+25\n"
"    ln=obj.group(1) + str(num) + obj.group(3) + str(num) + obj.group(5) +'\\n'\n"
"    fout.write(ln)\n"
"fin.close(); fout.close()\n"
"#\n"
"# for more info about regular expression syntax and KiCad component generation:\n"
"# http://gskinner.com/RegExr/\n"
"# http://kicad.rohrbacher.net/quicklib.php\n"
msgstr ""
"#!/usr/bin/env python\n"
"''' simple script to manipulate KiCad component pins numbering'''\n"
"import sys, re\n"
"try:\n"
"    fin=open(sys.argv[1],'r')\n"
"    fout=open(sys.argv[2],'w')\n"
"except:\n"
"    print \"oh, wrong use of this app, try:\", sys.argv[0], \"in.txt out.txt\"\n"
"    sys.exit()\n"
"for ln in fin.readlines():\n"
"    obj=re.search(\"(X PIN)(\\d*)(\\s)(\\d*)(\\s.*)\",ln)\n"
"if obj:\n"
"    num = int(obj.group(2))+25\n"
"    ln=obj.group(1) + str(num) + obj.group(3) + str(num) + obj.group(5) +'\\n'\n"
"    fout.write(ln)\n"
"fin.close(); fout.close()\n"
"#\n"
"# for more info about regular expression syntax and KiCad component generation:\n"
"# http://gskinner.com/RegExr/\n"
"# http://kicad.rohrbacher.net/quicklib.php\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:1409
msgid ""
"While merging the two components into one, it is necessary to use the "
"Library Editor from Eeschema to move the first component so that the second "
"does not end up on top of it. Below you will find the final .lib file and "
"its representation in __Eeschema__."
msgstr ""
"在将两个元件合并为一个元件时，有必要使用 Eeschema 的库编辑器移动第一个元件，"
"以便第二个元件不会在它上面移动。 您将在下面找到最终的 .lib 文件及其在 "
"__Eeschema__ 中的表示形式。"

#. type: Block title
#: getting_started_in_kicad.adoc:1410
#, no-wrap
msgid "Contents of a *.lib file"
msgstr "*.lib 文件的内容"

#. type: delimited block -
#: getting_started_in_kicad.adoc:1422
#, no-wrap
msgid ""
"EESchema-LIBRARY Version 2.3\n"
"#encoding utf-8\n"
"# COMP\n"
"DEF COMP U 0 40 Y Y 1 F N\n"
"F0 \"U\" -1800 -100 50 H V C CNN\n"
"F1 \"COMP\" -1800 100 50 H V C CNN\n"
"DRAW\n"
"S -2250 -800 -1350 800 0 0 0 N\n"
"S -450 -800 450 800 0 0 0 N\n"
"X PIN1 1 -2550 600 300 R 50 50 1 1 I\n"
msgstr ""
"EESchema-LIBRARY Version 2.3\n"
"#encoding utf-8\n"
"# COMP\n"
"DEF COMP U 0 40 Y Y 1 F N\n"
"F0 \"U\" -1800 -100 50 H V C CNN\n"
"F1 \"COMP\" -1800 100 50 H V C CNN\n"
"DRAW\n"
"S -2250 -800 -1350 800 0 0 0 N\n"
"S -450 -800 450 800 0 0 0 N\n"
"X PIN1 1 -2550 600 300 R 50 50 1 1 I\n"

#. type: delimited block -
#: getting_started_in_kicad.adoc:1424
#, no-wrap
msgid "...\n"
msgstr "...\n"

#. type: delimited block -
#: getting_started_in_kicad.adoc:1429
#, no-wrap
msgid ""
"X PIN49 49 750 -500 300 L 50 50 1 1 I\n"
"ENDDRAW\n"
"ENDDEF\n"
"#End Library\n"
msgstr ""
"X PIN49 49 750 -500 300 L 50 50 1 1 I\n"
"ENDDRAW\n"
"ENDDEF\n"
"#End Library\n"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:1431
#, no-wrap
msgid "gsik_high_number_pins_png"
msgstr "gsik_high_number_pins_png"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1431
#, no-wrap
msgid "images/gsik_high_number_pins.png"
msgstr "images/gsik_high_number_pins.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:1437
msgid ""
"The Python script presented here is a very powerful tool for manipulating "
"both pin numbers and pin labels. Mind, however, that all its power comes for "
"the arcane and yet amazingly useful Regular Expression syntax: _http://"
"gskinner.com/RegExr/._"
msgstr ""
"这里介绍的 Python 脚本是一个非常强大的工具，用于操作引脚号和引脚标签。 然而，"
"请注意，它的所有功能都来自于神秘而且非常有用的正则表达式语法：_http://"
"gskinner.com/RegExr/._"

#. type: Title ==
#: getting_started_in_kicad.adoc:1439
#, no-wrap
msgid "Make component footprints"
msgstr "制作元件封装"

#. type: Plain text
#: getting_started_in_kicad.adoc:1445
msgid ""
"Unlike other EDA software tools, which have one type of library that "
"contains both the schematic symbol and the footprint variations, KiCad _."
"lib_ files contain schematic symbols and _.kicad_mod_ files contain "
"footprints. _Cvpcb_ is used to map footprints to symbols."
msgstr ""
"与其他 EDA 软件工具不同，其中一种类型的库包含原理图符号和封装变化，KiCad _."
"lib_ 文件包含原理图符号，_.kicad_mod_ 文件包含封装。 _Cvpcb_ 用于将封装映射到"
"符号。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1448
msgid ""
"As for _.lib_ files, _.kicad_mod_ library files are text files that can "
"contain anything from one to several parts."
msgstr ""
"对于 _.lib_ 文件，_.kicad_mod_ 库文件是可以包含从一个部分到多个部分的任何文本"
"文件。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1452
msgid ""
"There is an extensive footprint library with KiCad, however on occasion you "
"might find that the footprint you need is not in the KiCad library.  Here "
"are the steps for creating a new PCB footprint in KiCad:"
msgstr ""
"有一个广泛的封装库与 KiCad，但有时您可能会发现您需要的封装不在 KiCad 库中。 "
"以下是在 KiCad 中创建新 PCB 封装的步骤："

#. type: Title ===
#: getting_started_in_kicad.adoc:1454
#, no-wrap
msgid "Using Footprint Editor"
msgstr "使用封装编辑器"

#. type: Plain text
#: getting_started_in_kicad.adoc:1460
msgid ""
"From the KiCad project manager start the _Pcbnew_ tool. Click on the 'Open "
"Footprint Editor' icon image:images/icons/edit_module.png[edit_module_png] "
"on the top toolbar. This will open the 'Footprint Editor'."
msgstr ""
"从 KiCad 项目管理器开始 _Pcbnew_ 工具。 单击顶部工具栏上的 _打开封装编辑器_ "
"图标 image:images/icons/edit_module.png[封装编辑器图标] 。 这将打开 _封装编辑"
"器_ 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1472
msgid ""
"We are going to save the new footprint 'MYCONN3' in the new footprint "
"library 'myfootprint'.  Create a new folder _myfootprint.pretty_ in the "
"_tutorial1/_ project folder.  Click on the *Preferences* -> **Footprint "
"Libraries Manager** and press 'Append Library' button. In the table, enter "
"\"myfootprint\" as Nickname, enter \"$\\{KIPRJMOD\\}/myfootprint.pretty\" as "
"Library Path and enter \"KiCad\" as Plugin Type.  Press OK to close the PCB "
"Library Tables window.  Click on the 'Select active library' icon image:"
"images/icons/open_library.png[open_library_png] on the top toolbar.  Select "
"the 'myfootprint' library."
msgstr ""
"我们将在新的封装库 _myfootprint_ 中保存新的封装 _MYCONN3_ 。 在 _教程1/_ 项目"
"文件夹中创建一个新文件夹 _myfootprint.pretty_ 。 单击 *首选项* -> **封装库管"
"理器** 并按 _附加库_ 按钮。 在表格中，输入 _myfootprint_ 作为昵称，输入 _$"
"\\{KIPRJMOD\\}/myfootprint.pretty_ 作为库路径，并输入 _KiCad_ 作为插件类型。 "
"按 _确定_ 关闭 _PCB库表_ 窗口。 单击顶部工具栏上的 _选择活动库_ 图标 image:"
"images/icons/open_library.png[选择活动库图标] 。 选择 _myfootprint_ 库。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1480
msgid ""
"Click on the 'New Footprint' icon image:images/icons/new_footprint."
"png[new_footprint_png] on the top toolbar.  Type 'MYCONN3' as the 'footprint "
"name'. In the middle of the screen the 'MYCONN3' label will appear. Under "
"the label you can see the 'REF*__' label. Right click on 'MYCONN3' and move "
"it above 'REF*__'. Right click on 'REF__*', select 'Edit Text' and rename it "
"to 'SMD'. Set the 'Display' value to 'Invisible'."
msgstr ""
"单击顶部工具栏上的 _新封装_ 图标 image:images/icons/new_footprint.png[新封装"
"图标] 。 输入 _MYCONN3_ 作为 _封装名称_ 。 在屏幕中间将出现 _MYCONN3_ 标签。 "
"在标签下，您可以看到  REF*__ 标签。 右键单击 _MYCONN3_ 并将其移到  “REF*__” "
"上方。 右键单击 “REF__*” ，选择 _编辑文本_ 并将其重命名为 _SMD_ 。 将 _显示_ "
"值设置为 _不可见_ 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1484
msgid ""
"Select the 'Add Pads' icon image:images/icons/pad.png[pad_png] on the right "
"toolbar. Click on the working sheet to place the pad. Right click on the new "
"pad and click 'Edit Pad'. You can also use [e]."
msgstr ""
"在右侧工具栏中选择 _添加焊盘_ 图标 image:images/icons/pad.png[焊盘图标] 。 单"
"击工作表以放置焊盘。 右键单击新焊盘，然后单击 _编辑焊盘_ 。 你也可以用[e]。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:1485
#, no-wrap
msgid "Pad Properties"
msgstr "焊盘属性"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1485
#, no-wrap
msgid "images/pad_properties.png"
msgstr "images/zh/pad_properties.png"

#. type: Plain text
#: getting_started_in_kicad.adoc:1490
msgid ""
"Set the 'Pad Num' to '1', 'Pad Shape' to 'Rect', 'Pad Type' to 'SMD', 'Shape "
"Size X' to '0.4', and 'Shape Size Y' to '0.8'. Click OK.  Click on 'Add "
"Pads' again and place two more pads."
msgstr ""
"将 _焊盘编号_ 设置为 _1_ ， _焊盘形状_ 设置为 _矩形_ ，  _焊盘类型_ 设置为 "
"_SMD_ ， _形状大小 X_ 设置为 _0.4_ ， _形状大小 Y_ 设置为 _0.8_ 。 单击确"
"定。 再次点击 _添加焊盘_ 并再放两个焊盘。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1494
msgid ""
"If you want to change the grid size, *Right click* -> **Grid Select**. Be "
"sure to select the appropriate grid size before laying down the components."
msgstr ""
"如果要更改网格大小，*右键单击* -> **网格选择**。 在放下元件之前，请务必选择合"
"适的网格尺寸。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1497
msgid ""
"Move the 'MYCONN3' label and the 'SMD' label out of the way so that it looks "
"like the image shown above."
msgstr "将 _MYCONN3_ 标签和 _SMD_ 标签移开，使其看起来像上图所示。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1504
msgid ""
"When placing pads it is often necessary to measure relative distances. Place "
"the cursor where you want the relative coordinate point _(0,0)_ to be and "
"press the space bar. While moving the cursor around, you will see a relative "
"indication of the position of the cursor at the bottom of the page. Press "
"the space bar at any time to set the new origin."
msgstr ""
"放置焊盘时，通常需要测量相对距离。 将光标放在您想要相对坐标点 _（0,0）_ 的位"
"置，然后按空格键。 移动光标时，您将看到光标在页面底部位置的相对指示。 可以随"
"时按空格键设置新原点。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1509
msgid ""
"Now add a footprint contour. Click on the 'Add graphic line or polygon' "
"button image:images/icons/add_polygon.png[add_polygon_png] in the right "
"toolbar. Draw an outline of the connector around the component."
msgstr ""
"现在添加一个封装边框。 单击右侧工具栏中的 _添加图形线或多边形_ 按钮 image:"
"images/icons/add_polygon.png[添加多边形图像] 。 绘制元件周围连接器的边框。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1513
msgid ""
"Click on the 'Save Footprint in Active Library' icon image:images/icons/"
"save_library.png[save_library_png] on the top toolbar, using the default "
"name MYCONN3."
msgstr ""
"单击顶部工具栏上的 _在活动库中保存封装_ 图标 image:images/icons/save_library."
"png[保存封装图标] ，使用默认名称 MYCONN3。"

#. type: Title ==
#: getting_started_in_kicad.adoc:1515
#, no-wrap
msgid "Note about portability of KiCad project files"
msgstr "关于 KiCad 项目文件的可移植性的注意事项"

#. type: Plain text
#: getting_started_in_kicad.adoc:1519
msgid ""
"What files do you need to send to someone so that they can fully load and "
"use your KiCad project?"
msgstr "您需要将哪些文件发送给某人才能完全加载和使用您的 KiCad 项目？"

#. type: Plain text
#: getting_started_in_kicad.adoc:1526
msgid ""
"When you have a KiCad project to share with somebody, it is important that "
"the schematic file __.sch__, the board file __.kicad_pcb__, the project file "
"_.pro_ and the netlist file __.net__, are sent together with both the "
"schematic parts file _.lib_ and the footprints file __.kicad_mod__. Only "
"this way will people have total freedom to modify the schematic and the "
"board."
msgstr ""
"当你有一个 KiCad 项目与某人分享时，重要的是原理图文件 __.sch__，板文件 __."
"kicad_pcb__ ，项目文件 _.pro_ 和网表文件 __.net__，与两个原理图一起发送库文"
"件 _.lib_ 和封装文件 __.kicad_mod__ 。 只有这样，人们才能完全自由地修改原理图"
"和电路板。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1538
msgid ""
"With KiCad schematics, people need the _.lib_ files that contain the "
"symbols. Those library files need to be loaded in the _Eeschema_ "
"preferences. On the other hand, with boards (__.kicad_pcb__ files), "
"footprints can be stored inside the _.kicad_pcb_ file. You can send someone "
"a _.kicad_pcb_ file and nothing else, and they would still be able to look "
"at and edit the board. However, when they want to load components from a "
"netlist, the footprint libraries (__.kicad_mod__ files) need to be present "
"and loaded in the _Pcbnew_ preferences just as for schematics. Also, it is "
"necessary to load the _.kicad_mod_ files in the preferences of _Pcbnew_ in "
"order for those footprints to show up in __Cvpcb__."
msgstr ""
"使用 KiCad 原理图，人们需要包含符号的 _.lib_ 文件。 需要在 _Eeschema_ 首选项"
"中加载这些库文件。 另一方面，使用板（__.kicad_pcb__ 文件），封装可以存储在 _."
"kicad_pcb_ 文件中。 您可以向某人发送 _.kicad_pcb_ 文件，而不是其他任何内容，"
"他们仍然可以查看和编辑该板。 但是，当他们想要从网表加载元件时，脚本库（__."
"kicad_mod__ 文件）需要存在并加载到 _Pcbnew_ 首选项中，就像原理图一样。 此外，"
"有必要在 _Pcbnew_ 的首选项中加载 _.kicad_mod_ 文件，以便在 __Cvpcb__ 中显示这"
"些封装。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1546
msgid ""
"If someone sends you a _.kicad_pcb_ file with footprints you would like to "
"use in another board, you can open the Footprint Editor, load a footprint "
"from the current board, and save or export it into another footprint "
"library. You can also export all the footprints from a _.kicad_pcb_ file at "
"once via *Pcbnew* -> *File* -> *Archive* -> *Footprints* -> **Create "
"footprint archive**, which will create a new _.kicad_mod_ file with all the "
"board's footprints."
msgstr ""
"如果有人向您发送了一个带有足迹的 _.kicad_pcb_ 文件，您可以在另一个板上使用，"
"您可以打开封装编辑器，从当前板上加载封装，并将其保存或导出到另一个封装库中。 "
"您也可以通过 *Pcbnew* -> *文件*  -> *压缩*  -> *封装*  -  **创建封装压缩**，"
"这将创建一个新的一次导出 _.kicad_pcb_ 文件中的所有封装。 _.kicad_mod_ 文件包"
"含所有板的封装。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1552
msgid ""
"Bottom line, if the PCB is the only thing you want to distribute, then the "
"board file _.kicad_pcb_ is enough. However, if you want to give people the "
"full ability to use and modify your schematic, its components and the PCB, "
"it is highly recommended that you zip and send the following project "
"directory:"
msgstr ""
"最重要的是，如果 PCB 是你想要分发的唯一东西，那么电路板文件 _.kicad_pcb_ 就足"
"够了。 但是，如果您想让人们完全能够使用和修改您的原理图，其元件和 PCB，强烈建"
"议您压缩并发送以下项目目录："

#. type: delimited block -
#: getting_started_in_kicad.adoc:1570
#, no-wrap
msgid ""
"tutorial1/\n"
"|-- tutorial1.pro\n"
"|-- tutorial1.sch\n"
"|-- tutorial1.kicad_pcb\n"
"|-- tutorial1.net\n"
"|-- library/\n"
"|   |-- myLib.lib\n"
"|   |-- myOwnLib.lib\n"
"|   \\-- myQuickLib.lib\n"
"|\n"
"|-- myfootprint.pretty/\n"
"|   \\-- MYCONN3.kicad_mod\n"
"|\n"
"\\-- gerber/\n"
"    |-- ...\n"
"    \\-- ...\n"
msgstr ""
"教程1/\n"
"|-- 教程1.pro\n"
"|-- 教程1.sch\n"
"|-- 教程1.kicad_pcb\n"
"|-- 教程1.net\n"
"|-- library/\n"
"|   |-- myLib.lib\n"
"|   |-- myOwnLib.lib\n"
"|   \\-- myQuickLib.lib\n"
"|\n"
"|-- myfootprint.pretty/\n"
"|   \\-- MYCONN3.kicad_mod\n"
"|\n"
"\\-- gerber/\n"
"    |-- ...\n"
"    \\-- ...\n"

#. type: Title ==
#: getting_started_in_kicad.adoc:1573
#, no-wrap
msgid "More about KiCad documentation"
msgstr "有关 KiCad 文档的更多信息"

#. type: Plain text
#: getting_started_in_kicad.adoc:1578
msgid ""
"This has been a quick guide on most of the features in KiCad. For more "
"detailed instructions consult the help files which you can access through "
"each KiCad module. Click on *Help* -> **Manual**."
msgstr ""
"这是 KiCad 中大多数功能的快速指南。 有关更详细的说明，请参阅可通过每个 KiCad "
"模块访问的帮助文件。 点击 *帮助* -> **手册**。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1581
msgid ""
"KiCad comes with a pretty good set of multi-language manuals for all its "
"four software components."
msgstr "KiCad 为其所有四个软件元件提供了一套非常好的多语言手册。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1583
msgid "The English version of all KiCad manuals are distributed with KiCad."
msgstr "所有 KiCad 手册的英文版都随 KiCad 一起发布。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1589
msgid ""
"In addition to its manuals, KiCad is distributed with this tutorial, which "
"has been translated into other languages. All the different versions of this "
"tutorial are distributed free of charge with all recent versions of KiCad. "
"This tutorial as well as the manuals should be packaged with your version of "
"KiCad on your given platform."
msgstr ""
"除了手册之外，KiCad 还随本教程一起发布，该教程已被翻译成其他语言。 本教程的所"
"有不同版本均免费分发所有最新版本的 KiCad。 本教程以及手册应与您的 KiCad 版本"
"一起打包在您的指定平台上。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1592
msgid ""
"For example, on Linux the typical locations are in the following "
"directories, depending on your exact distribution:"
msgstr "例如，在 Linux 上，典型位置位于以下目录中，具体取决于您的确切分布："

#. type: Plain text
#: getting_started_in_kicad.adoc:1595
#, no-wrap
msgid ""
" /usr/share/doc/kicad/help/en/\n"
" /usr/local/share/doc/kicad/help/en\n"
msgstr ""
" /usr/share/doc/kicad/help/zh/\n"
" /usr/local/share/doc/kicad/help/zh\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:1597
msgid "On Windows it is in:"
msgstr "在Windows上它位于："

#. type: Plain text
#: getting_started_in_kicad.adoc:1599
#, no-wrap
msgid " <installation directory>/share/doc/kicad/help/en\n"
msgstr " <installation directory>/share/doc/kicad/help/zh\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:1601
msgid "On OS X:"
msgstr "在 OS X 上："

#. type: Plain text
#: getting_started_in_kicad.adoc:1603
#, no-wrap
msgid " /Library/Application Support/kicad/help/en\n"
msgstr " /Library/Application Support/kicad/help/zh\n"

#. type: Title ===
#: getting_started_in_kicad.adoc:1605
#, no-wrap
msgid "KiCad documentation on the Web"
msgstr "网上的 KiCad 文档"

#. type: Plain text
#: getting_started_in_kicad.adoc:1608
msgid ""
"The latest version of KiCad documentation can be found in multiple languages "
"at http://docs.kicad-pcb.org"
msgstr "最新版本的 KiCad 文档可以在 http://docs.kicad-pcb.org 上找到多种语言"
