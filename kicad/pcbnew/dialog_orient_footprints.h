/////////////////////////////////////////////////////////////////////////////
// Name:        dialog_orient_footprints.h
// Purpose:     
// Author:      
// Modified by: 
// Created:     11/07/2008 13:32:12
// RCS-ID:      
// Copyright:   
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 11/07/2008 13:32:12

#ifndef _DIALOG_ORIENT_FOOTPRINTS_H_
#define _DIALOG_ORIENT_FOOTPRINTS_H_


/*!
 * Includes
 */

////@begin includes
////@end includes

/*!
 * Forward declarations
 */

////@begin forward declarations
////@end forward declarations

/*!
 * Control identifiers
 */

////@begin control identifiers
#define ID_DIALOG_ORIENT_FOOTPRINTS 10000
#define ID_TEXTCTRLROT_VALUE 10003
#define ID_TEXTCTRL_FOOTPRINTS_FILTER 10001
#define ID_CHECKBOX_APPLY_TO_LOCKED 10002
#define SYMBOL_DIALOG_ORIENT_FOOTPRINTS_STYLE wxCAPTION|wxRESIZE_BORDER|wxSYSTEM_MENU|wxCLOSE_BOX|wxDIALOG_MODAL|wxTAB_TRAVERSAL
#define SYMBOL_DIALOG_ORIENT_FOOTPRINTS_TITLE _("Footprints Orientation")
#define SYMBOL_DIALOG_ORIENT_FOOTPRINTS_IDNAME ID_DIALOG_ORIENT_FOOTPRINTS
#define SYMBOL_DIALOG_ORIENT_FOOTPRINTS_SIZE wxSize(400, 300)
#define SYMBOL_DIALOG_ORIENT_FOOTPRINTS_POSITION wxDefaultPosition
////@end control identifiers


/*!
 * dialog_orient_footprints class declaration
 */

class dialog_orient_footprints: public wxDialog
{    
    DECLARE_DYNAMIC_CLASS( dialog_orient_footprints )
    DECLARE_EVENT_TABLE()

public:
    /// Constructors
    dialog_orient_footprints();
    dialog_orient_footprints( WinEDA_PcbFrame* parent,
            wxWindowID id = SYMBOL_DIALOG_ORIENT_FOOTPRINTS_IDNAME,
            const wxString& caption = SYMBOL_DIALOG_ORIENT_FOOTPRINTS_TITLE,
            const wxPoint& pos = SYMBOL_DIALOG_ORIENT_FOOTPRINTS_POSITION,
            const wxSize& size = SYMBOL_DIALOG_ORIENT_FOOTPRINTS_SIZE,
            long style = SYMBOL_DIALOG_ORIENT_FOOTPRINTS_STYLE );

    /// Creation
    bool Create( wxWindow* parent, wxWindowID id = SYMBOL_DIALOG_ORIENT_FOOTPRINTS_IDNAME, const wxString& caption = SYMBOL_DIALOG_ORIENT_FOOTPRINTS_TITLE, const wxPoint& pos = SYMBOL_DIALOG_ORIENT_FOOTPRINTS_POSITION, const wxSize& size = SYMBOL_DIALOG_ORIENT_FOOTPRINTS_SIZE, long style = SYMBOL_DIALOG_ORIENT_FOOTPRINTS_STYLE );

    /// Destructor
    ~dialog_orient_footprints();

    /// Initialises member variables
    void Init();

    /// Creates the controls and sizers
    void CreateControls();

////@begin dialog_orient_footprints event handler declarations

    /// wxEVT_CLOSE_WINDOW event handler for ID_DIALOG_ORIENT_FOOTPRINTS
    void OnCloseWindow( wxCloseEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for wxID_OK
    void OnOkClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for wxID_CANCEL
    void OnCancelClick( wxCommandEvent& event );

////@end dialog_orient_footprints event handler declarations

////@begin dialog_orient_footprints member function declarations

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end dialog_orient_footprints member function declarations

    /// Should we show tooltips?
    static bool ShowToolTips();

////@begin dialog_orient_footprints member variables
    wxTextCtrl* m_OrientationCtrl;
    wxTextCtrl* m_FilterPattern;
    wxCheckBox* m_ApplyToLocked;
    wxButton* m_CloseButton;
////@end dialog_orient_footprints member variables

    WinEDA_PcbFrame * m_Parent;
};

#endif
    // _DIALOG_ORIENT_FOOTPRINTS_H_
