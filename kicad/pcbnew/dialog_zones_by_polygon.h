/////////////////////////////////////////////////////////////////////////////
// Name:        dialog_zones_by_polygon.h
// Purpose:     
// Author:      jean-pierre Charras
// Modified by: 
// Created:     25/01/2006 11:35:19
// RCS-ID:      
// Copyright:   GNU License
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 25/01/2006 11:35:19

#ifndef DIALOG_ZONES_H_
#define DIALOG_ZONES_H_

#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
#pragma interface "dialog_zones_by_polygon.h"
#endif

/*!
 * Includes
 */

////@begin includes
#include "wx/valgen.h"
////@end includes

/*!
 * Forward declarations
 */

////@begin forward declarations
////@end forward declarations

/*!
 * Control identifiers
 */

////@begin control identifiers
#define ID_DIALOG 10000
#define ID_RADIOBOX_GRID_SELECTION 10003
#define ID_TEXTCTRL1 10007
#define ID_RADIOBOX_OUTLINES_OPTION 10006
#define ID_RADIOBOX4 10008
#define ID_RADIOBOX5 10009
#define ID_NET_SORTING_OPTION 10005
#define ID_TEXTCTRL_NETNAMES_FILTER 10010
#define ID_NETNAME_SELECTION 10001
#define wxID_LAYER_SELECTION 10004
#define ID_LAYER_CHOICE 10002
#define SYMBOL_WINEDA_ZONEFRAME_STYLE wxCAPTION|wxSYSTEM_MENU|wxCLOSE_BOX|MAYBE_RESIZE_BORDER
#define SYMBOL_WINEDA_ZONEFRAME_TITLE _("Fill Zones Options")
#define SYMBOL_WINEDA_ZONEFRAME_IDNAME ID_DIALOG
#define SYMBOL_WINEDA_ZONEFRAME_SIZE wxSize(400, 300)
#define SYMBOL_WINEDA_ZONEFRAME_POSITION wxDefaultPosition
////@end control identifiers

/*!
 * Compatibility
 */

#ifndef wxCLOSE_BOX
#define wxCLOSE_BOX 0x1000
#endif

/*!
 * WinEDA_ZoneFrame class declaration
 */

class WinEDA_ZoneFrame: public wxDialog
{    
    DECLARE_DYNAMIC_CLASS( WinEDA_ZoneFrame )
    DECLARE_EVENT_TABLE()

public:
    /// Constructors
    WinEDA_ZoneFrame( );
    WinEDA_ZoneFrame( WinEDA_PcbFrame* parent,
						ZONE_CONTAINER * zone_container = NULL,
						wxWindowID id = SYMBOL_WINEDA_ZONEFRAME_IDNAME,
						const wxString& caption = SYMBOL_WINEDA_ZONEFRAME_TITLE,
						const wxPoint& pos = SYMBOL_WINEDA_ZONEFRAME_POSITION,
						const wxSize& size = SYMBOL_WINEDA_ZONEFRAME_SIZE,
						long style = SYMBOL_WINEDA_ZONEFRAME_STYLE );

    /// Creation
    bool Create( wxWindow* parent, wxWindowID id = SYMBOL_WINEDA_ZONEFRAME_IDNAME, const wxString& caption = SYMBOL_WINEDA_ZONEFRAME_TITLE, const wxPoint& pos = SYMBOL_WINEDA_ZONEFRAME_POSITION, const wxSize& size = SYMBOL_WINEDA_ZONEFRAME_SIZE, long style = SYMBOL_WINEDA_ZONEFRAME_STYLE );

    /// Creates the controls and sizers
    void CreateControls();

////@begin WinEDA_ZoneFrame event handler declarations

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for wxID_OK
    void OnOkClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for wxID_CANCEL
    void OnCancelClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_RADIOBOX_SELECTED event handler for ID_NET_SORTING_OPTION
    void OnNetSortingOptionSelected( wxCommandEvent& event );

////@end WinEDA_ZoneFrame event handler declarations

////@begin WinEDA_ZoneFrame member function declarations

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end WinEDA_ZoneFrame member function declarations

    /// Should we show tooltips?
    static bool ShowToolTips();
	
	bool AcceptOptions(bool aPromptForErrors);
	


////@begin WinEDA_ZoneFrame member variables
    wxRadioBox* m_GridCtrl;
    wxStaticText* m_ClearanceValueTitle;
    wxTextCtrl* m_ZoneClearanceCtrl;
    wxRadioBox* m_OutlineAppearanceCtrl;
    wxRadioBox* m_FillOpt;
    wxRadioBox* m_OrientEdgesOpt;
    wxRadioBox* m_NetSortingOption;
    wxTextCtrl* m_NetNameFilter;
    wxListBox* m_ListNetNameSelection;
    wxListBox* m_LayerSelectionCtrl;
////@end WinEDA_ZoneFrame member variables

	WinEDA_PcbFrame * m_Parent;
	int m_NetSorting;
	
	int m_LayerId[LAYER_COUNT];		// Handle the real layer number from layer name position in m_LayerSelectionCtrl
	ZONE_CONTAINER * m_Zone_Container;
};

#endif      // DIALOG_ZONES_H_

