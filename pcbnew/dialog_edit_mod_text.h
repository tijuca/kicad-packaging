/////////////////////////////////////////////////////////////////////////////
// Name:        edtxtmod.h
// Purpose:     
// Author:      jean-pierre Charras
// Modified by: 
// Created:     09/02/2006 18:17:15
// RCS-ID:      
// Copyright:   License GNU
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 09/02/2006 18:17:15

#ifndef _EDTXTMOD_H_
#define _EDTXTMOD_H_

#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
#pragma interface "edtxtmod.h"
#endif

/*!
 * Includes
 */

////@begin includes
#include "wx/statline.h"
////@end includes

/*!
 * Forward declarations
 */

////@begin forward declarations
////@end forward declarations

/*!
 * Control identifiers
 */

////@begin control identifiers
#define ID_DIALOG 10000
#define SYMBOL_WINEDA_TEXTMODPROPERTIESFRAME_STYLE wxCAPTION|wxRESIZE_BORDER|wxSYSTEM_MENU|wxCLOSE_BOX
#define SYMBOL_WINEDA_TEXTMODPROPERTIESFRAME_TITLE _("TextMod properties")
#define SYMBOL_WINEDA_TEXTMODPROPERTIESFRAME_IDNAME ID_DIALOG
#define SYMBOL_WINEDA_TEXTMODPROPERTIESFRAME_SIZE wxSize(400, 300)
#define SYMBOL_WINEDA_TEXTMODPROPERTIESFRAME_POSITION wxDefaultPosition
#define ID_TEXTCTRL 10003
#define ID_TEXTCTRL1 10004
#define ID_TEXTCTRL2 10005
#define ID_TEXTCTRL3 10006
#define ID_TEXTCTRL4 10007
#define ID_TEXTCTRL5 10008
#define ID_RADIOBOX 10001
#define ID_RADIOBOX1 10002
////@end control identifiers

/*!
 * Compatibility
 */

#ifndef wxCLOSE_BOX
#define wxCLOSE_BOX 0x1000
#endif

/*!
 * WinEDA_TextModPropertiesFrame class declaration
 */

class WinEDA_TextModPropertiesFrame: public wxDialog
{    
    DECLARE_DYNAMIC_CLASS( WinEDA_TextModPropertiesFrame )
    DECLARE_EVENT_TABLE()

public:
    /// Constructors
    WinEDA_TextModPropertiesFrame( );
    WinEDA_TextModPropertiesFrame( WinEDA_BasePcbFrame* parent,
			TEXTE_MODULE * TextMod,wxDC * DC, 
			wxWindowID id = SYMBOL_WINEDA_TEXTMODPROPERTIESFRAME_IDNAME, const wxString& caption = SYMBOL_WINEDA_TEXTMODPROPERTIESFRAME_TITLE, const wxPoint& pos = SYMBOL_WINEDA_TEXTMODPROPERTIESFRAME_POSITION, const wxSize& size = SYMBOL_WINEDA_TEXTMODPROPERTIESFRAME_SIZE, long style = SYMBOL_WINEDA_TEXTMODPROPERTIESFRAME_STYLE );

    /// Creation
    bool Create( wxWindow* parent, wxWindowID id = SYMBOL_WINEDA_TEXTMODPROPERTIESFRAME_IDNAME, const wxString& caption = SYMBOL_WINEDA_TEXTMODPROPERTIESFRAME_TITLE, const wxPoint& pos = SYMBOL_WINEDA_TEXTMODPROPERTIESFRAME_POSITION, const wxSize& size = SYMBOL_WINEDA_TEXTMODPROPERTIESFRAME_SIZE, long style = SYMBOL_WINEDA_TEXTMODPROPERTIESFRAME_STYLE );

    /// Creates the controls and sizers
    void CreateControls();

////@begin WinEDA_TextModPropertiesFrame event handler declarations

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for wxID_OK
    void OnOkClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for wxID_CANCEL
    void OnCancelClick( wxCommandEvent& event );

////@end WinEDA_TextModPropertiesFrame event handler declarations

////@begin WinEDA_TextModPropertiesFrame member function declarations

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end WinEDA_TextModPropertiesFrame member function declarations

    /// Should we show tooltips?
    static bool ShowToolTips();
	void TextModPropertiesAccept(wxCommandEvent& event);
	void SetDisplayValue(void);

////@begin WinEDA_TextModPropertiesFrame member variables
    wxStaticText* m_ModuleInfoText;
    wxStaticText* m_TextDataTitle;
    wxTextCtrl* m_Name;
    wxStaticText* m_SizeXTitle;
    wxTextCtrl* m_TxtSizeCtrlX;
    wxStaticText* m_SizeYTitle;
    wxTextCtrl* m_TxtSizeCtrlY;
    wxStaticText* m_PosXTitle;
    wxTextCtrl* m_TxtPosCtrlX;
    wxStaticText* m_PosYTitle;
    wxTextCtrl* m_TxtPosCtrlY;
    wxStaticText* m_WidthTitle;
    wxTextCtrl* m_TxtWidthCtlr;
    wxRadioBox* m_Orient;
    wxRadioBox* m_Show;
////@end WinEDA_TextModPropertiesFrame member variables

	WinEDA_BasePcbFrame * m_Parent;
	wxDC * m_DC;
	MODULE * m_Module;
	TEXTE_MODULE * m_CurrentTextMod;
};

#endif
    // _EDTXTMOD_H_
